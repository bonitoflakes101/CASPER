!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
1-4
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

birth{



@main_casper(){

int $add = 3+3;
int $sub= 3-3;
int $multiply = 3*3;
int $div = 3/3;

display $add;
display $sub;
display $multiply;
display $div;
}

}
ghost

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
5
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


birth{

function_int @add(int $a, int $b){

int $add_value = $a + $b;
revive $add_value;
}

function_int @sub(int $a, int $b){

int $sub_value = $a - $b;
revive $sub_value;
}

function_int @multiply(int $a, int $b){

int $multiply_value = $a * $b;
revive $multiply_value;
}

function_int @div(int $a, int $b){

int $div_value = $a / $b;
revive $div_value;
}


@main_casper(){

int $num1 = 6;
int $num2 = 9;

int $add = @add($num1,$num2);
int $sub = @sub($num1,$num2);
int $multiply = @multiply($num1,$num2);
int $div = @div($num1,$num2); << naging float, even if return type ay int, dapat may data loss unless typecasted

display $add;
display $sub;
display $multiply;
display $div;
}

}
ghost


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
6-10
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

birth{

@main_casper(){

<< 6

display "\n";
display "*";
display "**";
display "***";
display "****";
display "*****";

<< 7

display "\n";
display "    *";
display "   **";
display "  ***";
display " ****";
display "*****";


<< 8

display "\n";
display "    *";
display "   ***";
display "  *****";
display " *******";
display "*********";

<< 9

display "\n";
display "*****";
display "*****";
display "*****";
display "*****";

<< 10

display "\n";
display "**********";
display "**********";
display "**********";
display "**********";
}

}
ghost

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
11-15
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
birth{

function @left_triangle(){

display "\n";
display "*";
display "**";
display "***";
display "****";
display "*****";

}

function @right_triangle(){

display "\n";
display "    *";
display "   **";
display "  ***";
display " ****";
display "*****";

}

function @triangle(){


display "\n";
display "    *";
display "   ***";
display "  *****";
display " *******";
display "*********";
}
function @square(){


display "\n";
display "*****";
display "*****";
display "*****";
display "*****";

}
function @rectangle(){

display "\n";
display "**********";
display "**********";
display "**********";
display "**********";


}
@main_casper(){

@left_triangle();
@right_triangle();
@triangle();
@square();
@rectangle();

}

}
ghost



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
COMPUTE AREA - FIX CONDITIONAL
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

birth {

    function_flt @area_triangle(flt $b, flt $h) {
        flt $a = ($b * $h) / 2.0;
        revive $a;
    }

    function_flt @area_rectangle(flt $l, flt $w) {
        flt $area_result= $l * $w;
        revive $area_result;
    }

    function_flt @area_circle(flt $r) {
        flt $pi = 3.1416;
        flt $area_result = $pi * $r * $r;
        revive $area_result;
    }

     @main_casper() {
        int $shape = 2;  << 1 = Triangle, 2 = Rectangle, 3 = Circle
        flt $area = 0.0;

        check ($shape == 1) {
            flt $base = 5.0;
            flt $height = 10.0;
            $area = @area_triangle($base, $height);
        }
        otherwise_check ($shape == 2) {
            flt $length = 4.0;
            flt $width = 6.0;
            $area = @area_rectangle($length, $width);
        }
        otherwise_check ($shape == 3) {
            flt $radius = 3.0;
            $area = @area_circle($radius);
        }
        otherwise{
            display "hello";

        }

        display("Area = ");
        display($area);
        display("\n");
    }

}
 
ghost


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
COMPUTE PERIMETER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

birth {


@main_casper(){

int $length = 5;
int $width = 3;
int $perimeter;

$perimeter = 2 * ($length + $width);

display($perimeter);

}
    

} ghost

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
19 - NOT WORKING, if true yung check it displays both check and otherwise
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
birth {


@main_casper(){

int $num = 7;

    check ($num % 2 == 0) {
        display("The number is even");
    } otherwise {
        display("The number is odd");
    }


}

} ghost