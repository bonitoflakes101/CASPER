
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEXPONENTrightNOTMINUSleftMULTIPLYDIVISIONMODULOleftPLUSMINUSleftPLUS_PLUSMINUS_MINUSleftEQ_EQNOT_EQLTGTLT_EQGT_EQleftANDleftORrightEQPLUS_EQMINUS_EQMUL_EQDIV_EQMOD_EQAND BIRTH BLN BLN_LIT CARRIAGE_RETURN CHECK CHR CHR_LIT COLON COMMA COMMENT CONVERT_TO_BLN CONVERT_TO_FLT CONVERT_TO_INT CONVERT_TO_STR DAY DISPLAY DIVISION DIV_EQ DOT DOUBLE_LT DOUBLE_SLASH EOF EQ EQ_EQ EXPONENT FLT FLT_LIT FOR FUNCTION FUNCTION_BLN FUNCTION_CHR FUNCTION_FLT FUNCTION_INT FUNCTION_LIST_BLN FUNCTION_LIST_BLN2D FUNCTION_LIST_CHR FUNCTION_LIST_CHR2D FUNCTION_LIST_FLT FUNCTION_LIST_FLT2D FUNCTION_LIST_INT FUNCTION_LIST_INT2D FUNCTION_LIST_STR FUNCTION_LIST_STR2D FUNCTION_NAME FUNCTION_STR GHOST GT GT_EQ IDENT ILLEGAL IN INPUT INT INT_LIT LBRACE LBRACKET LIST_BLN LIST_BLN2D LIST_CHR LIST_CHR2D LIST_FLT LIST_FLT2D LIST_INT LIST_INT2D LIST_STR LIST_STR2D LPAREN LT LT_EQ MAIN_CASPER MEASURE MINUS MINUS_EQ MINUS_MINUS MODULO MOD_EQ MULTIPLY MUL_EQ NEWLINE NIGHT NOT NOT_EQ OR OTHERWISE OTHERWISE_CHECK PLUS PLUS_EQ PLUS_PLUS POW PUSH RBRACE RBRACKET REPEAT REVIVE RPAREN SEMICOLON SHIFT SKIP SPLICE STOP STR STR_LIT SWAP TILDE TYPE UNTILprogram : BIRTH unli_newline global_dec maybe_newline function_statements maybe_newline main_function unli_newline GHOST\n    maybe_newline : empty\n                  | NEWLINE maybe_newline\n    \n    unli_newline : NEWLINE\n                 | NEWLINE unli_newline\n    main_function : MAIN_CASPER LPAREN RPAREN maybe_newline LBRACE maybe_newline statements maybe_newline RBRACE\n    global_dec : global_statement unli_newline global_tail     \n               | empty                            \n    \n        global_tail : global_dec\n    \n        global_statement : var_statement global_statement_tail\n    \n        var_statement : data_type IDENT list_dec\n    \n    list_dec : empty               \n             | LBRACKET RBRACKET _2d_list \n    \n    _2d_list : empty            \n             | LBRACKET RBRACKET \n    \n    global_statement_tail : empty                        \n                          | COMMA IDENT global_statement_tail \n                          | EQ global_value global_statement_tail2 \n    \n    global_statement_tail2 : COMMA IDENT global_statement_tail \n                           | empty                           \n    \n    global_value : expression   \n                 | list_value   \n    \n     list_value : LBRACKET list_element RBRACKET\n    \n    list_element : literal element_tail  \n    \n    element_tail : COMMA list_element  \n                 | empty              \n    \n    data_type : INT   \n              | FLT   \n              | BLN  \n              | CHR  \n              | STR  \n    \n    expression : factor factor_tail\n    \n    factor : var_call postfix           \n           | literal1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN factor_expression RPAREN    \n    \n    factor_expression : factor_expression_factor factor_expression_tail\n    \n    factor_expression_factor : var_call postfix           \n           | factor_expression1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN factor_expression RPAREN    \n    \n    factor_expression_tail : PLUS factor_expression_factor factor_expression_tail\n                | MINUS factor_expression_factor factor_expression_tail\n                | MULTIPLY factor_expression_factor factor_expression_tail\n                | DIVISION factor_expression_factor factor_expression_tail\n                | MODULO factor_expression_factor factor_expression_tail\n                | EXPONENT factor_expression_factor factor_expression_tail\n                | GT factor_expression_factor factor_expression_tail\n                | LT factor_expression_factor factor_expression_tail\n                | EQ_EQ factor_expression_factor factor_expression_tail\n                | GT_EQ factor_expression_factor factor_expression_tail\n                | LT_EQ factor_expression_factor factor_expression_tail\n                | NOT_EQ factor_expression_factor factor_expression_tail\n                | AND factor_expression_factor factor_expression_tail\n                | OR factor_expression_factor factor_expression_tail\n                | empty\n    \n    factor_expression1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    factor_tail : PLUS factor factor_tail\n                | MINUS factor factor_tail\n                | MULTIPLY factor factor_tail\n                | DIVISION factor factor_tail\n                | MODULO factor factor_tail\n                | EXPONENT factor factor_tail\n                | GT factor factor_tail\n                | LT factor factor_tail\n                | EQ_EQ factor factor_tail\n                | GT_EQ factor factor_tail\n                | LT_EQ factor factor_tail\n                | NOT_EQ factor factor_tail\n                | AND factor factor_tail\n                | OR factor factor_tail\n                | empty\n    \n    literal : literal1\n            | literal2\n    \n    literal1 : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    literal2 : CHR_LIT\n    \n    function_statements : ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE maybe_newline statements maybe_newline revive_opt maybe_newline RBRACE unli_newline function_statements_tail  \n                        | empty                                                          \n    revive_opt : revive\n                  | empty\n    function_statements_tail : function_statements \n                             | empty               \n    \n    ret_type : FUNCTION           \n             | function_dtype    \n    \n    function_dtype : FUNCTION_INT       \n                   | FUNCTION_FLT      \n                   | FUNCTION_CHR       \n                   | FUNCTION_BLN       \n                   | FUNCTION_STR       \n                   | FUNCTION_LIST_INT \n                   | FUNCTION_LIST_FLT  \n                   | FUNCTION_LIST_CHR \n                   | FUNCTION_LIST_STR  \n                   | FUNCTION_LIST_BLN  \n    \n    parameters : data_type IDENT parameters_tail  \n               | empty                            \n    \n    parameters_tail : COMMA data_type IDENT parameters_tail \n                    | empty                                 \n    \n    revive : REVIVE revive_value  \n           | empty        \n    revive_value : revive_type_cast\n             | revive_expression\n             | function_call\n    revive_expression : revive_factor revive_factor_tail\n    \n    revive_factor : var_call postfix           \n           | revive_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN revive_factor RPAREN    \n    \n    revive_factor_tail : PLUS revive_factor revive_factor_tail\n                | MINUS revive_factor revive_factor_tail\n                | MULTIPLY revive_factor revive_factor_tail\n                | DIVISION revive_factor revive_factor_tail\n                | MODULO revive_factor revive_factor_tail\n                | EXPONENT revive_factor revive_factor_tail\n                | GT revive_factor revive_factor_tail\n                | LT revive_factor revive_factor_tail\n                | EQ_EQ revive_factor revive_factor_tail\n                | GT_EQ revive_factor revive_factor_tail\n                | LT_EQ revive_factor revive_factor_tail\n                | NOT_EQ revive_factor revive_factor_tail\n                | AND revive_factor revive_factor_tail\n                | OR revive_factor revive_factor_tail\n                | empty\n    \n    revive_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    revive_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPARENstatements : empty\n                  | local_dec unli_newline statements_tail\n    statements_tail : switch_statement unli_newline statements\n                    | loop_statement unli_newline statements\n                    | function_call unli_newline statements\n                    | assignment_statement unli_newline statements\n                    | output_statement unli_newline statements\n                    | conditional_statement unli_newline statements\n                    | statements\n    \n    local_dec : local_var_statement local_dec_tail\n              | empty\n    \n        local_var_statement : local_data_type IDENT local_list_dec\n    \n    local_data_type : INT   \n              | FLT   \n              | BLN  \n              | CHR  \n              | STR  \n    \n    local_list_dec : empty               \n             | LBRACKET RBRACKET local_2d_list \n    \n    local_2d_list : empty            \n             | LBRACKET RBRACKET \n    \n    local_dec_tail : empty                          \n                   | COMMA IDENT local_dec_tail     \n                   | EQ local_value local_dec_tail2  \n    \n    local_dec_tail2 : COMMA IDENT local_dec_tail  \n                    | empty                      \n    \n    local_value : local_value_value      \n                | list_value  \n    local_value_value  : local_type_cast\n             | local_expression\n             | function_call\n    local_expression : local_factor local_factor_tail\n    \n    local_factor : var_call postfix           \n           | local_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN local_factor RPAREN    \n    \n    local_factor_tail : PLUS local_factor local_factor_tail\n                | MINUS local_factor local_factor_tail\n                | MULTIPLY local_factor local_factor_tail\n                | DIVISION local_factor local_factor_tail\n                | MODULO local_factor local_factor_tail\n                | EXPONENT local_factor local_factor_tail\n                | GT local_factor local_factor_tail\n                | LT local_factor local_factor_tail\n                | EQ_EQ local_factor local_factor_tail\n                | GT_EQ local_factor local_factor_tail\n                | LT_EQ local_factor local_factor_tail\n                | NOT_EQ local_factor local_factor_tail\n                | AND local_factor local_factor_tail\n                | OR local_factor local_factor_tail\n                | empty\n    \n    local_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    local_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    conditional_statement : CHECK LPAREN condition RPAREN LBRACE maybe_newline statements maybe_newline RBRACE  maybe_newline conditional_tail  maybe_newline OTHERWISE  maybe_newline LBRACE  maybe_newline statements  maybe_newline RBRACE  \n    \n    conditional_tail : OTHERWISE_CHECK LPAREN condition RPAREN LBRACE statements RBRACE conditional_tail \n                     | empty                                            \n    \n    condition : condition_factor condition_tail\n    \n    condition_factor : var_call postfix           \n           | condition1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN condition RPAREN    \n    \n    condition_tail : PLUS condition_factor condition_tail\n                | MINUS condition_factor condition_tail\n                | MULTIPLY condition_factor condition_tail\n                | DIVISION condition_factor condition_tail\n                | MODULO condition_factor condition_tail\n                | EXPONENT condition_factor condition_tail\n                | GT condition_factor condition_tail\n                | LT condition_factor condition_tail\n                | EQ_EQ condition_factor condition_tail\n                | GT_EQ condition_factor condition_tail\n                | LT_EQ condition_factor condition_tail\n                | NOT_EQ condition_factor condition_tail\n                | AND condition_factor condition_tail\n                | OR condition_factor condition_tail\n                | empty\n    \n    condition1 : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    switch_statement : SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE LBRACE statements RBRACE RBRACE \n    \n    switch_condition : SHIFT switch_value COLON statements switchcond_tail  \n    switch_value  : switch_type_cast\n             | switch_expression\n             | function_call\n    switch_expression : switch_factor switch_factor_tail\n    \n    switch_factor : var_call postfix           \n           | switch_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN switch_factor RPAREN    \n    \n    switch_factor_tail : PLUS switch_factor switch_factor_tail\n                | MINUS switch_factor switch_factor_tail\n                | MULTIPLY switch_factor switch_factor_tail\n                | DIVISION switch_factor switch_factor_tail\n                | MODULO switch_factor switch_factor_tail\n                | EXPONENT switch_factor switch_factor_tail\n                | GT switch_factor switch_factor_tail\n                | LT switch_factor switch_factor_tail\n                | EQ_EQ switch_factor switch_factor_tail\n                | GT_EQ switch_factor switch_factor_tail\n                | LT_EQ switch_factor switch_factor_tail\n                | NOT_EQ switch_factor switch_factor_tail\n                | AND switch_factor switch_factor_tail\n                | OR switch_factor switch_factor_tail\n                | empty\n    \n    switch_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    switch_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    switchcond_tail : switch_condition  \n                    | empty          \n    \n    loop_statement : for_loop    \n                   | until_loop  \n                   | repeat_until\n    for_loop : FOR LPAREN control_variable SEMICOLON for_expression SEMICOLON update RPAREN LBRACE maybe_newline statements maybe_newline RBRACE\n    for_expression : for_factor for_factor_tail\n    \n    for_factor : var_call postfix           \n           | for_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN for_factor RPAREN    \n    \n    for_factor_tail : PLUS for_factor for_factor_tail\n                | MINUS for_factor for_factor_tail\n                | MULTIPLY for_factor for_factor_tail\n                | DIVISION for_factor for_factor_tail\n                | MODULO for_factor for_factor_tail\n                | EXPONENT for_factor for_factor_tail\n                | GT for_factor for_factor_tail\n                | LT for_factor for_factor_tail\n                | EQ_EQ for_factor for_factor_tail\n                | GT_EQ for_factor for_factor_tail\n                | LT_EQ for_factor for_factor_tail\n                | NOT_EQ for_factor for_factor_tail\n                | AND for_factor for_factor_tail\n                | OR for_factor for_factor_tail\n                | empty\n    \n    for_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    until_loop : UNTIL LPAREN until_expression RPAREN LBRACE statements RBRACE  \n    \n    until_expression : until_factor until_factor_tail\n    \n    until_factor : var_call postfix           \n           | until_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN until_factor RPAREN    \n    \n    until_factor_tail : PLUS until_factor until_factor_tail\n                | MINUS until_factor until_factor_tail\n                | MULTIPLY until_factor until_factor_tail\n                | DIVISION until_factor until_factor_tail\n                | MODULO until_factor until_factor_tail\n                | EXPONENT until_factor until_factor_tail\n                | GT until_factor until_factor_tail\n                | LT until_factor until_factor_tail\n                | EQ_EQ until_factor until_factor_tail\n                | GT_EQ until_factor until_factor_tail\n                | LT_EQ until_factor until_factor_tail\n                | NOT_EQ until_factor until_factor_tail\n                | AND until_factor until_factor_tail\n                | OR until_factor until_factor_tail\n                | empty\n    \n    until_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    repeat_until : REPEAT LBRACE statements RBRACE UNTIL LPAREN until_expression RPAREN \n    control_variable : INT IDENT EQ control_var_tailcontrol_var_tail : INT_LIT \n                        | var_call\n    \n    update : var_call update_tail  \n    \n    update_tail : postfix_op         \n                | compound_op value   \n    \n    postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    function_call : FUNCTION_NAME LPAREN arguments RPAREN  \n                  | input_statement                      \n    \n    arguments : empty                  \n              | arg_value arg_tail    \n    \n    arg_tail : COMMA arg_value arg_tail   \n             | empty                     \n    \n    arg_value : literal   \n              | var_call \n    \n    output_statement : DISPLAY value next_val   \n    \n    next_val : COMMA value next_val  \n             | empty                \n    \n    assignment_statement : IDENT assign_tail  \n    \n    assign_tail : DOT SPLICE LPAREN start COMMA deleteCount COMMA splice_items RPAREN  \n                | DOT PUSH LPAREN list_element RPAREN                                  \n                | assign_op value                                                     \n    \n    assign_op : compound_op  \n              | EQ           \n    \n    compound_op : PLUS_EQ \n                | MINUS_EQ  \n                | MUL_EQ   \n                | DIV_EQ    \n                | MOD_EQ   \n    \n    start : INT_LIT \n    \n    deleteCount : empty     \n                | INT_LIT  \n    \n    splice_items : empty          \n                 | list_element  \n    \n    var_call : IDENT list_index  \n    \n    list_index : LBRACKET index RBRACKET list_index2  \n               | empty                                \n    \n    list_index2 : LBRACKET index RBRACKET \n                | empty                   \n    \n    index : INT_LIT    \n          | IDENT      \n    \n    postfix : empty        \n            | postfix_op  \n    \n    value : type_cast     \n          | value_expression   \n          | function_call \n    \n    value_expression : value_factor value_factor_tail\n    \n    value_factor : var_call postfix           \n           | value_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN value_factor RPAREN    \n    \n    value_factor_tail : PLUS value_factor value_factor_tail\n                | MINUS value_factor value_factor_tail\n                | MULTIPLY value_factor value_factor_tail\n                | DIVISION value_factor value_factor_tail\n                | MODULO value_factor value_factor_tail\n                | EXPONENT value_factor value_factor_tail\n                | GT value_factor value_factor_tail\n                | LT value_factor value_factor_tail\n                | EQ_EQ value_factor value_factor_tail\n                | GT_EQ value_factor value_factor_tail\n                | LT_EQ value_factor value_factor_tail\n                | NOT_EQ value_factor value_factor_tail\n                | AND value_factor value_factor_tail\n                | OR value_factor value_factor_tail\n                | empty\n    \n    value_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN \n              | CONVERT_TO_FLT LPAREN typecast_value RPAREN  \n              | CONVERT_TO_BLN LPAREN typecast_value RPAREN  \n              | CONVERT_TO_STR LPAREN typecast_value RPAREN \n    \n    typecast_value : typecast_expression                           \n                   | FUNCTION_NAME LPAREN RPAREN          \n                   | input_statement                     \n    \n    typecast_expression : typecast_factor typecast_factor_tail\n    \n    typecast_factor : var_call postfix           \n           | typecast_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN typecast_factor RPAREN    \n    \n    typecast_factor_tail : PLUS typecast_factor typecast_factor_tail\n                | MINUS typecast_factor typecast_factor_tail\n                | MULTIPLY typecast_factor typecast_factor_tail\n                | DIVISION typecast_factor typecast_factor_tail\n                | MODULO typecast_factor typecast_factor_tail\n                | EXPONENT typecast_factor typecast_factor_tail\n                | GT typecast_factor typecast_factor_tail\n                | LT typecast_factor typecast_factor_tail\n                | EQ_EQ typecast_factor typecast_factor_tail\n                | GT_EQ typecast_factor typecast_factor_tail\n                | LT_EQ typecast_factor typecast_factor_tail\n                | NOT_EQ typecast_factor typecast_factor_tail\n                | AND typecast_factor typecast_factor_tail\n                | OR typecast_factor typecast_factor_tail\n                | empty\n    \n    typecast_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    input_statement : INPUT LPAREN RPAREN  \n    empty :'
    
_lr_action_items = {'BIRTH':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'unli_newline':([2,4,6,111,232,256,258,259,260,261,262,390,],[3,15,19,160,243,320,321,322,323,324,325,519,]),'global_dec':([3,19,],[5,42,]),'global_statement':([3,19,],[6,6,]),'empty':([3,5,8,16,18,19,24,25,43,44,47,49,55,85,98,99,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,201,220,225,226,229,230,233,240,241,242,243,248,251,276,277,288,289,311,312,320,321,322,323,324,325,337,338,347,348,359,389,427,459,460,472,473,483,489,490,502,503,504,505,506,507,508,509,510,511,512,513,514,515,519,525,526,527,528,529,530,531,532,533,534,535,536,537,538,546,552,553,554,555,556,557,558,559,560,561,562,563,564,565,677,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,715,716,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,744,745,746,747,748,749,750,751,752,753,754,755,756,757,760,763,842,843,854,858,859,860,861,862,863,864,865,866,867,868,869,870,871,874,875,900,922,928,929,930,931,932,933,934,935,936,937,938,939,940,941,945,946,971,972,974,977,981,986,987,988,990,991,],[7,17,21,27,17,7,60,17,21,67,83,90,109,132,150,90,159,164,21,83,83,83,83,83,83,83,83,83,83,83,83,83,83,150,150,150,150,150,150,150,150,150,150,150,150,150,150,218,17,223,17,17,231,231,17,245,223,17,253,231,298,17,245,364,385,90,411,90,231,231,231,231,231,231,426,432,453,90,231,518,545,583,90,606,90,245,630,90,385,385,385,385,385,385,385,385,385,385,385,385,385,385,654,411,411,411,411,411,411,411,411,411,411,411,411,411,411,432,453,453,453,453,453,453,453,453,453,453,453,453,453,453,545,17,583,583,583,583,583,583,583,583,583,583,583,583,583,583,795,90,231,606,606,606,606,606,606,606,606,606,606,606,606,606,606,630,630,630,630,630,630,630,630,630,630,630,630,630,630,852,231,896,90,17,795,795,795,795,795,795,795,795,795,795,795,795,795,795,231,231,943,951,896,896,896,896,896,896,896,896,896,896,896,896,896,896,17,17,976,231,17,17,17,17,231,231,17,976,]),'var_statement':([3,19,],[8,8,]),'data_type':([3,19,113,222,],[9,9,163,227,]),'maybe_newline':([5,18,25,199,220,225,230,241,251,698,854,945,946,974,977,981,986,990,],[16,40,62,219,226,229,242,250,301,763,901,971,972,978,980,984,988,992,]),'global_statement_tail':([8,43,114,],[20,64,165,]),'function_statements':([16,519,],[25,653,]),'ret_type':([16,519,],[26,26,]),'function_dtype':([16,519,],[29,29,]),'global_tail':([19,],[41,]),'global_value':([23,],[44,]),'expression':([23,],[45,]),'list_value':([23,247,],[46,279,]),'factor':([23,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[47,115,116,117,118,119,120,121,122,123,124,125,126,127,128,]),'var_call':([23,54,69,70,71,72,73,74,75,76,77,78,79,80,81,82,96,136,137,138,139,140,141,142,143,144,145,146,147,148,149,247,254,270,284,307,329,337,343,356,358,365,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,391,393,394,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,431,433,435,436,437,439,440,441,442,443,444,445,446,447,448,449,450,451,452,457,470,484,544,569,570,571,572,573,574,575,576,577,578,579,580,581,582,587,592,593,594,595,596,597,598,599,600,601,602,603,604,605,616,617,618,619,620,621,622,623,624,625,626,627,628,629,713,724,759,779,781,782,783,784,785,786,787,788,789,790,791,792,793,794,817,838,876,878,879,880,882,883,884,885,886,887,888,889,890,891,892,893,894,895,905,979,],[49,99,49,49,49,49,49,49,49,49,49,49,49,49,49,49,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,289,312,348,289,312,348,429,348,460,473,490,490,490,490,289,289,289,289,289,289,289,289,289,289,289,289,289,289,490,490,490,490,312,312,312,312,312,312,312,312,312,312,312,312,312,312,348,490,490,490,490,348,348,348,348,348,348,348,348,348,348,348,348,348,348,460,473,490,429,460,460,460,460,460,460,460,460,460,460,460,460,460,460,716,473,473,473,473,473,473,473,473,473,473,473,473,473,473,490,490,490,490,490,490,490,490,490,490,490,490,490,490,716,801,843,857,716,716,716,716,716,716,716,716,716,716,716,716,716,716,473,843,490,490,490,490,843,843,843,843,843,843,843,843,843,843,843,843,843,843,348,460,]),'literal1':([23,48,69,70,71,72,73,74,75,76,77,78,79,80,81,82,131,337,541,544,900,],[50,86,50,50,50,50,50,50,50,50,50,50,50,50,50,50,86,86,86,86,86,]),'list_dec':([24,],[59,]),'global_statement_tail2':([44,],[65,]),'factor_tail':([47,115,116,117,118,119,120,121,122,123,124,125,126,127,128,],[68,166,167,168,169,170,171,172,173,174,175,176,177,178,179,]),'list_element':([48,131,541,900,],[84,180,676,944,]),'literal':([48,131,337,541,544,900,],[85,85,428,85,428,85,]),'literal2':([48,131,337,541,544,900,],[87,87,87,87,87,87,]),'postfix':([49,99,289,312,348,460,473,490,716,843,],[89,151,386,412,454,584,607,631,796,897,]),'postfix_op':([49,99,289,312,348,460,473,490,716,843,857,],[91,91,91,91,91,91,91,91,91,91,904,]),'factor_expression':([54,96,],[97,133,]),'factor_expression_factor':([54,96,136,137,138,139,140,141,142,143,144,145,146,147,148,149,],[98,98,182,183,184,185,186,187,188,189,190,191,192,193,194,195,]),'factor_expression1':([54,96,136,137,138,139,140,141,142,143,144,145,146,147,148,149,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'list_index':([55,],[107,]),'main_function':([62,],[111,]),'element_tail':([85,],[130,]),'factor_expression_tail':([98,182,183,184,185,186,187,188,189,190,191,192,193,194,195,],[135,202,203,204,205,206,207,208,209,210,211,212,213,214,215,]),'index':([108,216,],[154,224,]),'_2d_list':([110,],[158,]),'parameters':([113,],[162,]),'list_index2':([196,],[217,]),'parameters_tail':([201,240,],[221,249,]),'statements':([226,229,243,320,321,322,323,324,325,359,726,763,874,875,972,987,988,],[230,241,257,415,416,417,418,419,420,481,802,854,921,922,977,989,990,]),'local_dec':([226,229,243,320,321,322,323,324,325,359,726,763,874,875,972,987,988,],[232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,]),'local_var_statement':([226,229,243,320,321,322,323,324,325,359,726,763,874,875,972,987,988,],[233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,]),'local_data_type':([226,229,243,320,321,322,323,324,325,359,726,763,874,875,972,987,988,],[234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,]),'local_dec_tail':([233,276,483,],[244,361,611,]),'revive_opt':([242,],[251,]),'revive':([242,],[252,]),'statements_tail':([243,],[255,]),'switch_statement':([243,],[256,]),'loop_statement':([243,],[258,]),'function_call':([243,247,254,270,329,431,759,905,],[259,282,305,341,341,341,836,341,]),'assignment_statement':([243,],[260,]),'output_statement':([243,],[261,]),'conditional_statement':([243,],[262,]),'for_loop':([243,],[265,]),'until_loop':([243,],[266,]),'repeat_until':([243,],[267,]),'input_statement':([243,247,254,270,329,365,367,368,369,391,393,394,395,431,433,435,436,437,759,876,878,879,880,905,],[269,269,269,269,269,488,488,488,488,488,488,488,488,269,488,488,488,488,269,488,488,488,488,269,]),'local_value':([247,],[277,]),'local_value_value':([247,],[278,]),'local_type_cast':([247,],[280,]),'local_expression':([247,],[281,]),'local_factor':([247,284,371,372,373,374,375,376,377,378,379,380,381,382,383,384,],[288,366,502,503,504,505,506,507,508,509,510,511,512,513,514,515,]),'local_factor1':([247,284,371,372,373,374,375,376,377,378,379,380,381,382,383,384,],[290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,]),'local_list_dec':([248,],[297,]),'revive_value':([254,],[302,]),'revive_type_cast':([254,],[303,]),'revive_expression':([254,],[304,]),'revive_factor':([254,307,397,398,399,400,401,402,403,404,405,406,407,408,409,410,],[311,392,525,526,527,528,529,530,531,532,533,534,535,536,537,538,]),'revive_factor1':([254,307,397,398,399,400,401,402,403,404,405,406,407,408,409,410,],[313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,]),'assign_tail':([264,],[327,]),'assign_op':([264,],[329,]),'compound_op':([264,857,],[330,905,]),'value':([270,329,431,905,],[338,424,546,947,]),'type_cast':([270,329,431,905,],[339,339,339,339,]),'value_expression':([270,329,431,905,],[340,340,340,340,]),'value_factor':([270,329,343,431,439,440,441,442,443,444,445,446,447,448,449,450,451,452,905,],[347,347,434,347,552,553,554,555,556,557,558,559,560,561,562,563,564,565,347,]),'value_factor1':([270,329,343,431,439,440,441,442,443,444,445,446,447,448,449,450,451,452,905,],[349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,]),'local_dec_tail2':([277,],[362,]),'local_factor_tail':([288,502,503,504,505,506,507,508,509,510,511,512,513,514,515,],[370,637,638,639,640,641,642,643,644,645,646,647,648,649,650,]),'revive_factor_tail':([311,525,526,527,528,529,530,531,532,533,534,535,536,537,538,],[396,659,660,661,662,663,664,665,666,667,668,669,670,671,672,]),'arguments':([337,],[425,]),'arg_value':([337,544,],[427,677,]),'next_val':([338,546,],[430,678,]),'value_factor_tail':([347,552,553,554,555,556,557,558,559,560,561,562,563,564,565,],[438,683,684,685,686,687,688,689,690,691,692,693,694,695,696,]),'condition':([356,457,979,],[458,566,982,]),'condition_factor':([356,457,569,570,571,572,573,574,575,576,577,578,579,580,581,582,979,],[459,459,699,700,701,702,703,704,705,706,707,708,709,710,711,712,459,]),'condition1':([356,457,569,570,571,572,573,574,575,576,577,578,579,580,581,582,979,],[461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,]),'control_variable':([357,],[468,]),'until_expression':([358,817,],[471,873,]),'until_factor':([358,470,592,593,594,595,596,597,598,599,600,601,602,603,604,605,817,],[472,589,727,728,729,730,731,732,733,734,735,736,737,738,739,740,472,]),'until_factor1':([358,470,592,593,594,595,596,597,598,599,600,601,602,603,604,605,817,],[474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,]),'typecast_value':([365,367,368,369,391,393,394,395,433,435,436,437,876,878,879,880,],[485,499,500,501,520,522,523,524,547,549,550,551,923,925,926,927,]),'typecast_expression':([365,367,368,369,391,393,394,395,433,435,436,437,876,878,879,880,],[486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,]),'typecast_factor':([365,367,368,369,391,393,394,395,433,435,436,437,484,616,617,618,619,620,621,622,623,624,625,626,627,628,629,876,878,879,880,],[489,489,489,489,489,489,489,489,489,489,489,489,612,744,745,746,747,748,749,750,751,752,753,754,755,756,757,489,489,489,489,]),'typecast_factor1':([365,367,368,369,391,393,394,395,433,435,436,437,484,616,617,618,619,620,621,622,623,624,625,626,627,628,629,876,878,879,880,],[491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,]),'local_2d_list':([389,],[517,]),'arg_tail':([427,677,],[543,762,]),'condition_tail':([459,699,700,701,702,703,704,705,706,707,708,709,710,711,712,],[568,764,765,766,767,768,769,770,771,772,773,774,775,776,777,]),'until_factor_tail':([472,727,728,729,730,731,732,733,734,735,736,737,738,739,740,],[591,803,804,805,806,807,808,809,810,811,812,813,814,815,816,]),'typecast_factor_tail':([489,744,745,746,747,748,749,750,751,752,753,754,755,756,757,],[615,818,819,820,821,822,823,824,825,826,827,828,829,830,831,]),'function_statements_tail':([519,],[652,]),'start':([540,],[674,]),'for_expression':([587,],[714,]),'for_factor':([587,713,781,782,783,784,785,786,787,788,789,790,791,792,793,794,],[715,778,858,859,860,861,862,863,864,865,866,867,868,869,870,871,]),'for_factor1':([587,713,781,782,783,784,785,786,787,788,789,790,791,792,793,794,],[717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,]),'switch_condition':([673,922,],[758,950,]),'for_factor_tail':([715,858,859,860,861,862,863,864,865,866,867,868,869,870,871,],[780,906,907,908,909,910,911,912,913,914,915,916,917,918,919,]),'control_var_tail':([724,],[799,]),'switch_value':([759,],[833,]),'switch_type_cast':([759,],[834,]),'switch_expression':([759,],[835,]),'switch_factor':([759,838,882,883,884,885,886,887,888,889,890,891,892,893,894,895,],[842,877,928,929,930,931,932,933,934,935,936,937,938,939,940,941,]),'switch_factor1':([759,838,882,883,884,885,886,887,888,889,890,891,892,893,894,895,],[844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,]),'deleteCount':([760,],[851,]),'update':([779,],[856,]),'switch_factor_tail':([842,928,929,930,931,932,933,934,935,936,937,938,939,940,941,],[881,956,957,958,959,960,961,962,963,964,965,966,967,968,969,]),'update_tail':([857,],[903,]),'splice_items':([900,],[942,]),'switchcond_tail':([922,],[949,]),'conditional_tail':([971,991,],[974,993,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BIRTH unli_newline global_dec maybe_newline function_statements maybe_newline main_function unli_newline GHOST','program',9,'p_program','Parser.py',41),
  ('maybe_newline -> empty','maybe_newline',1,'p_maybe_newline','Parser.py',49),
  ('maybe_newline -> NEWLINE maybe_newline','maybe_newline',2,'p_maybe_newline','Parser.py',50),
  ('unli_newline -> NEWLINE','unli_newline',1,'p_unli_newline','Parser.py',58),
  ('unli_newline -> NEWLINE unli_newline','unli_newline',2,'p_unli_newline','Parser.py',59),
  ('main_function -> MAIN_CASPER LPAREN RPAREN maybe_newline LBRACE maybe_newline statements maybe_newline RBRACE','main_function',9,'p_main_function','Parser.py',66),
  ('global_dec -> global_statement unli_newline global_tail','global_dec',3,'p_global_dec','Parser.py',78),
  ('global_dec -> empty','global_dec',1,'p_global_dec','Parser.py',79),
  ('global_tail -> global_dec','global_tail',1,'p_global_tail','Parser.py',93),
  ('global_statement -> var_statement global_statement_tail','global_statement',2,'p_global_statement','Parser.py',103),
  ('var_statement -> data_type IDENT list_dec','var_statement',3,'p_var_statement','Parser.py',126),
  ('list_dec -> empty','list_dec',1,'p_list_dec','Parser.py',141),
  ('list_dec -> LBRACKET RBRACKET _2d_list','list_dec',3,'p_list_dec','Parser.py',142),
  ('_2d_list -> empty','_2d_list',1,'p_2d_list','Parser.py',157),
  ('_2d_list -> LBRACKET RBRACKET','_2d_list',2,'p_2d_list','Parser.py',158),
  ('global_statement_tail -> empty','global_statement_tail',1,'p_global_statement_tail','Parser.py',173),
  ('global_statement_tail -> COMMA IDENT global_statement_tail','global_statement_tail',3,'p_global_statement_tail','Parser.py',174),
  ('global_statement_tail -> EQ global_value global_statement_tail2','global_statement_tail',3,'p_global_statement_tail','Parser.py',175),
  ('global_statement_tail2 -> COMMA IDENT global_statement_tail','global_statement_tail2',3,'p_global_statement_tail2','Parser.py',192),
  ('global_statement_tail2 -> empty','global_statement_tail2',1,'p_global_statement_tail2','Parser.py',193),
  ('global_value -> expression','global_value',1,'p_global_value','Parser.py',208),
  ('global_value -> list_value','global_value',1,'p_global_value','Parser.py',209),
  ('list_value -> LBRACKET list_element RBRACKET','list_value',3,'p_list_value','Parser.py',219),
  ('list_element -> literal element_tail','list_element',2,'p_list_element','Parser.py',231),
  ('element_tail -> COMMA list_element','element_tail',2,'p_element_tail','Parser.py',240),
  ('element_tail -> empty','element_tail',1,'p_element_tail','Parser.py',241),
  ('data_type -> INT','data_type',1,'p_data_type','Parser.py',258),
  ('data_type -> FLT','data_type',1,'p_data_type','Parser.py',259),
  ('data_type -> BLN','data_type',1,'p_data_type','Parser.py',260),
  ('data_type -> CHR','data_type',1,'p_data_type','Parser.py',261),
  ('data_type -> STR','data_type',1,'p_data_type','Parser.py',262),
  ('expression -> factor factor_tail','expression',2,'p_expression','Parser.py',272),
  ('factor -> var_call postfix','factor',2,'p_factor','Parser.py',289),
  ('factor -> literal1','factor',1,'p_factor','Parser.py',290),
  ('factor -> TILDE INT_LIT','factor',2,'p_factor','Parser.py',291),
  ('factor -> TILDE FLT_LIT','factor',2,'p_factor','Parser.py',292),
  ('factor -> LPAREN factor_expression RPAREN','factor',3,'p_factor','Parser.py',293),
  ('factor_expression -> factor_expression_factor factor_expression_tail','factor_expression',2,'p_factor_expression','Parser.py',315),
  ('factor_expression_factor -> var_call postfix','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',325),
  ('factor_expression_factor -> factor_expression1','factor_expression_factor',1,'p_factor_expression_factor','Parser.py',326),
  ('factor_expression_factor -> TILDE INT_LIT','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',327),
  ('factor_expression_factor -> TILDE FLT_LIT','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',328),
  ('factor_expression_factor -> LPAREN factor_expression RPAREN','factor_expression_factor',3,'p_factor_expression_factor','Parser.py',329),
  ('factor_expression_tail -> PLUS factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',350),
  ('factor_expression_tail -> MINUS factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',351),
  ('factor_expression_tail -> MULTIPLY factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',352),
  ('factor_expression_tail -> DIVISION factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',353),
  ('factor_expression_tail -> MODULO factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',354),
  ('factor_expression_tail -> EXPONENT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',355),
  ('factor_expression_tail -> GT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',356),
  ('factor_expression_tail -> LT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',357),
  ('factor_expression_tail -> EQ_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',358),
  ('factor_expression_tail -> GT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',359),
  ('factor_expression_tail -> LT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',360),
  ('factor_expression_tail -> NOT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',361),
  ('factor_expression_tail -> AND factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',362),
  ('factor_expression_tail -> OR factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',363),
  ('factor_expression_tail -> empty','factor_expression_tail',1,'p_factor_expression_tail','Parser.py',364),
  ('factor_expression1 -> INT_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',373),
  ('factor_expression1 -> FLT_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',374),
  ('factor_expression1 -> DAY','factor_expression1',1,'p_factor_expression1','Parser.py',375),
  ('factor_expression1 -> NIGHT','factor_expression1',1,'p_factor_expression1','Parser.py',376),
  ('factor_expression1 -> STR_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',377),
  ('factor_tail -> PLUS factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',401),
  ('factor_tail -> MINUS factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',402),
  ('factor_tail -> MULTIPLY factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',403),
  ('factor_tail -> DIVISION factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',404),
  ('factor_tail -> MODULO factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',405),
  ('factor_tail -> EXPONENT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',406),
  ('factor_tail -> GT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',407),
  ('factor_tail -> LT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',408),
  ('factor_tail -> EQ_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',409),
  ('factor_tail -> GT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',410),
  ('factor_tail -> LT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',411),
  ('factor_tail -> NOT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',412),
  ('factor_tail -> AND factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',413),
  ('factor_tail -> OR factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',414),
  ('factor_tail -> empty','factor_tail',1,'p_factor_tail','Parser.py',415),
  ('literal -> literal1','literal',1,'p_literal','Parser.py',428),
  ('literal -> literal2','literal',1,'p_literal','Parser.py',429),
  ('literal1 -> INT_LIT','literal1',1,'p_literal1','Parser.py',444),
  ('literal1 -> FLT_LIT','literal1',1,'p_literal1','Parser.py',445),
  ('literal1 -> DAY','literal1',1,'p_literal1','Parser.py',446),
  ('literal1 -> NIGHT','literal1',1,'p_literal1','Parser.py',447),
  ('literal1 -> STR_LIT','literal1',1,'p_literal1','Parser.py',448),
  ('literal2 -> CHR_LIT','literal2',1,'p_literal2','Parser.py',454),
  ('function_statements -> ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE maybe_newline statements maybe_newline revive_opt maybe_newline RBRACE unli_newline function_statements_tail','function_statements',14,'p_function_statements','Parser.py',465),
  ('function_statements -> empty','function_statements',1,'p_function_statements','Parser.py',466),
  ('revive_opt -> revive','revive_opt',1,'p_revive_opt','Parser.py',499),
  ('revive_opt -> empty','revive_opt',1,'p_revive_opt','Parser.py',500),
  ('function_statements_tail -> function_statements','function_statements_tail',1,'p_function_statements_tail','Parser.py',509),
  ('function_statements_tail -> empty','function_statements_tail',1,'p_function_statements_tail','Parser.py',510),
  ('ret_type -> FUNCTION','ret_type',1,'p_ret_type','Parser.py',523),
  ('ret_type -> function_dtype','ret_type',1,'p_ret_type','Parser.py',524),
  ('function_dtype -> FUNCTION_INT','function_dtype',1,'p_function_dtype','Parser.py',545),
  ('function_dtype -> FUNCTION_FLT','function_dtype',1,'p_function_dtype','Parser.py',546),
  ('function_dtype -> FUNCTION_CHR','function_dtype',1,'p_function_dtype','Parser.py',547),
  ('function_dtype -> FUNCTION_BLN','function_dtype',1,'p_function_dtype','Parser.py',548),
  ('function_dtype -> FUNCTION_STR','function_dtype',1,'p_function_dtype','Parser.py',549),
  ('function_dtype -> FUNCTION_LIST_INT','function_dtype',1,'p_function_dtype','Parser.py',550),
  ('function_dtype -> FUNCTION_LIST_FLT','function_dtype',1,'p_function_dtype','Parser.py',551),
  ('function_dtype -> FUNCTION_LIST_CHR','function_dtype',1,'p_function_dtype','Parser.py',552),
  ('function_dtype -> FUNCTION_LIST_STR','function_dtype',1,'p_function_dtype','Parser.py',553),
  ('function_dtype -> FUNCTION_LIST_BLN','function_dtype',1,'p_function_dtype','Parser.py',554),
  ('parameters -> data_type IDENT parameters_tail','parameters',3,'p_parameters','Parser.py',564),
  ('parameters -> empty','parameters',1,'p_parameters','Parser.py',565),
  ('parameters_tail -> COMMA data_type IDENT parameters_tail','parameters_tail',4,'p_parameters_tail','Parser.py',578),
  ('parameters_tail -> empty','parameters_tail',1,'p_parameters_tail','Parser.py',579),
  ('revive -> REVIVE revive_value','revive',2,'p_revive','Parser.py',591),
  ('revive -> empty','revive',1,'p_revive','Parser.py',592),
  ('revive_value -> revive_type_cast','revive_value',1,'p_revive_value','Parser.py',600),
  ('revive_value -> revive_expression','revive_value',1,'p_revive_value','Parser.py',601),
  ('revive_value -> function_call','revive_value',1,'p_revive_value','Parser.py',602),
  ('revive_expression -> revive_factor revive_factor_tail','revive_expression',2,'p_revive_expression','Parser.py',608),
  ('revive_factor -> var_call postfix','revive_factor',2,'p_revive_factor','Parser.py',618),
  ('revive_factor -> revive_factor1','revive_factor',1,'p_revive_factor','Parser.py',619),
  ('revive_factor -> TILDE INT_LIT','revive_factor',2,'p_revive_factor','Parser.py',620),
  ('revive_factor -> TILDE FLT_LIT','revive_factor',2,'p_revive_factor','Parser.py',621),
  ('revive_factor -> LPAREN revive_factor RPAREN','revive_factor',3,'p_revive_factor','Parser.py',622),
  ('revive_factor_tail -> PLUS revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',643),
  ('revive_factor_tail -> MINUS revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',644),
  ('revive_factor_tail -> MULTIPLY revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',645),
  ('revive_factor_tail -> DIVISION revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',646),
  ('revive_factor_tail -> MODULO revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',647),
  ('revive_factor_tail -> EXPONENT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',648),
  ('revive_factor_tail -> GT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',649),
  ('revive_factor_tail -> LT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',650),
  ('revive_factor_tail -> EQ_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',651),
  ('revive_factor_tail -> GT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',652),
  ('revive_factor_tail -> LT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',653),
  ('revive_factor_tail -> NOT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',654),
  ('revive_factor_tail -> AND revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',655),
  ('revive_factor_tail -> OR revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',656),
  ('revive_factor_tail -> empty','revive_factor_tail',1,'p_revive_factor_tail','Parser.py',657),
  ('revive_factor1 -> INT_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',666),
  ('revive_factor1 -> FLT_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',667),
  ('revive_factor1 -> DAY','revive_factor1',1,'p_revive_factor1','Parser.py',668),
  ('revive_factor1 -> NIGHT','revive_factor1',1,'p_revive_factor1','Parser.py',669),
  ('revive_factor1 -> STR_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',670),
  ('revive_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',675),
  ('revive_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',676),
  ('revive_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',677),
  ('revive_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',678),
  ('statements -> empty','statements',1,'p_statements','Parser.py',685),
  ('statements -> local_dec unli_newline statements_tail','statements',3,'p_statements','Parser.py',686),
  ('statements_tail -> switch_statement unli_newline statements','statements_tail',3,'p_statements_tail','Parser.py',702),
  ('statements_tail -> loop_statement unli_newline statements','statements_tail',3,'p_statements_tail','Parser.py',703),
  ('statements_tail -> function_call unli_newline statements','statements_tail',3,'p_statements_tail','Parser.py',704),
  ('statements_tail -> assignment_statement unli_newline statements','statements_tail',3,'p_statements_tail','Parser.py',705),
  ('statements_tail -> output_statement unli_newline statements','statements_tail',3,'p_statements_tail','Parser.py',706),
  ('statements_tail -> conditional_statement unli_newline statements','statements_tail',3,'p_statements_tail','Parser.py',707),
  ('statements_tail -> statements','statements_tail',1,'p_statements_tail','Parser.py',708),
  ('local_dec -> local_var_statement local_dec_tail','local_dec',2,'p_local_dec','Parser.py',766),
  ('local_dec -> empty','local_dec',1,'p_local_dec','Parser.py',767),
  ('local_var_statement -> local_data_type IDENT local_list_dec','local_var_statement',3,'p_local_var_statement','Parser.py',781),
  ('local_data_type -> INT','local_data_type',1,'p_local_data_type','Parser.py',791),
  ('local_data_type -> FLT','local_data_type',1,'p_local_data_type','Parser.py',792),
  ('local_data_type -> BLN','local_data_type',1,'p_local_data_type','Parser.py',793),
  ('local_data_type -> CHR','local_data_type',1,'p_local_data_type','Parser.py',794),
  ('local_data_type -> STR','local_data_type',1,'p_local_data_type','Parser.py',795),
  ('local_list_dec -> empty','local_list_dec',1,'p_local_list_dec','Parser.py',801),
  ('local_list_dec -> LBRACKET RBRACKET local_2d_list','local_list_dec',3,'p_local_list_dec','Parser.py',802),
  ('local_2d_list -> empty','local_2d_list',1,'p_local_2d_list','Parser.py',813),
  ('local_2d_list -> LBRACKET RBRACKET','local_2d_list',2,'p_local_2d_list','Parser.py',814),
  ('local_dec_tail -> empty','local_dec_tail',1,'p_local_dec_tail','Parser.py',829),
  ('local_dec_tail -> COMMA IDENT local_dec_tail','local_dec_tail',3,'p_local_dec_tail','Parser.py',830),
  ('local_dec_tail -> EQ local_value local_dec_tail2','local_dec_tail',3,'p_local_dec_tail','Parser.py',831),
  ('local_dec_tail2 -> COMMA IDENT local_dec_tail','local_dec_tail2',3,'p_local_dec_tail2','Parser.py',846),
  ('local_dec_tail2 -> empty','local_dec_tail2',1,'p_local_dec_tail2','Parser.py',847),
  ('local_value -> local_value_value','local_value',1,'p_local_value','Parser.py',861),
  ('local_value -> list_value','local_value',1,'p_local_value','Parser.py',862),
  ('local_value_value -> local_type_cast','local_value_value',1,'p_local_value_value','Parser.py',867),
  ('local_value_value -> local_expression','local_value_value',1,'p_local_value_value','Parser.py',868),
  ('local_value_value -> function_call','local_value_value',1,'p_local_value_value','Parser.py',869),
  ('local_expression -> local_factor local_factor_tail','local_expression',2,'p_local_expression','Parser.py',874),
  ('local_factor -> var_call postfix','local_factor',2,'p_local_factor','Parser.py',884),
  ('local_factor -> local_factor1','local_factor',1,'p_local_factor','Parser.py',885),
  ('local_factor -> TILDE INT_LIT','local_factor',2,'p_local_factor','Parser.py',886),
  ('local_factor -> TILDE FLT_LIT','local_factor',2,'p_local_factor','Parser.py',887),
  ('local_factor -> LPAREN local_factor RPAREN','local_factor',3,'p_local_factor','Parser.py',888),
  ('local_factor_tail -> PLUS local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',909),
  ('local_factor_tail -> MINUS local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',910),
  ('local_factor_tail -> MULTIPLY local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',911),
  ('local_factor_tail -> DIVISION local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',912),
  ('local_factor_tail -> MODULO local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',913),
  ('local_factor_tail -> EXPONENT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',914),
  ('local_factor_tail -> GT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',915),
  ('local_factor_tail -> LT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',916),
  ('local_factor_tail -> EQ_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',917),
  ('local_factor_tail -> GT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',918),
  ('local_factor_tail -> LT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',919),
  ('local_factor_tail -> NOT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',920),
  ('local_factor_tail -> AND local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',921),
  ('local_factor_tail -> OR local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',922),
  ('local_factor_tail -> empty','local_factor_tail',1,'p_local_factor_tail','Parser.py',923),
  ('local_factor1 -> INT_LIT','local_factor1',1,'p_local_factor1','Parser.py',932),
  ('local_factor1 -> FLT_LIT','local_factor1',1,'p_local_factor1','Parser.py',933),
  ('local_factor1 -> DAY','local_factor1',1,'p_local_factor1','Parser.py',934),
  ('local_factor1 -> NIGHT','local_factor1',1,'p_local_factor1','Parser.py',935),
  ('local_factor1 -> STR_LIT','local_factor1',1,'p_local_factor1','Parser.py',936),
  ('local_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',941),
  ('local_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',942),
  ('local_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',943),
  ('local_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',944),
  ('conditional_statement -> CHECK LPAREN condition RPAREN LBRACE maybe_newline statements maybe_newline RBRACE maybe_newline conditional_tail maybe_newline OTHERWISE maybe_newline LBRACE maybe_newline statements maybe_newline RBRACE','conditional_statement',19,'p_conditional_statement','Parser.py',951),
  ('conditional_tail -> OTHERWISE_CHECK LPAREN condition RPAREN LBRACE statements RBRACE conditional_tail','conditional_tail',8,'p_conditional_tail','Parser.py',962),
  ('conditional_tail -> empty','conditional_tail',1,'p_conditional_tail','Parser.py',963),
  ('condition -> condition_factor condition_tail','condition',2,'p_condition','Parser.py',973),
  ('condition_factor -> var_call postfix','condition_factor',2,'p_condition_factor','Parser.py',983),
  ('condition_factor -> condition1','condition_factor',1,'p_condition_factor','Parser.py',984),
  ('condition_factor -> TILDE INT_LIT','condition_factor',2,'p_condition_factor','Parser.py',985),
  ('condition_factor -> TILDE FLT_LIT','condition_factor',2,'p_condition_factor','Parser.py',986),
  ('condition_factor -> LPAREN condition RPAREN','condition_factor',3,'p_condition_factor','Parser.py',987),
  ('condition_tail -> PLUS condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1008),
  ('condition_tail -> MINUS condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1009),
  ('condition_tail -> MULTIPLY condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1010),
  ('condition_tail -> DIVISION condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1011),
  ('condition_tail -> MODULO condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1012),
  ('condition_tail -> EXPONENT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1013),
  ('condition_tail -> GT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1014),
  ('condition_tail -> LT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1015),
  ('condition_tail -> EQ_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1016),
  ('condition_tail -> GT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1017),
  ('condition_tail -> LT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1018),
  ('condition_tail -> NOT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1019),
  ('condition_tail -> AND condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1020),
  ('condition_tail -> OR condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1021),
  ('condition_tail -> empty','condition_tail',1,'p_condition_tail','Parser.py',1022),
  ('condition1 -> INT_LIT','condition1',1,'p_condition1','Parser.py',1031),
  ('condition1 -> FLT_LIT','condition1',1,'p_condition1','Parser.py',1032),
  ('condition1 -> DAY','condition1',1,'p_condition1','Parser.py',1033),
  ('condition1 -> NIGHT','condition1',1,'p_condition1','Parser.py',1034),
  ('condition1 -> STR_LIT','condition1',1,'p_condition1','Parser.py',1035),
  ('switch_statement -> SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE LBRACE statements RBRACE RBRACE','switch_statement',11,'p_switch_statement','Parser.py',1047),
  ('switch_condition -> SHIFT switch_value COLON statements switchcond_tail','switch_condition',5,'p_switch_condition','Parser.py',1060),
  ('switch_value -> switch_type_cast','switch_value',1,'p_switch_value','Parser.py',1065),
  ('switch_value -> switch_expression','switch_value',1,'p_switch_value','Parser.py',1066),
  ('switch_value -> function_call','switch_value',1,'p_switch_value','Parser.py',1067),
  ('switch_expression -> switch_factor switch_factor_tail','switch_expression',2,'p_switch_expression','Parser.py',1072),
  ('switch_factor -> var_call postfix','switch_factor',2,'p_switch_factor','Parser.py',1082),
  ('switch_factor -> switch_factor1','switch_factor',1,'p_switch_factor','Parser.py',1083),
  ('switch_factor -> TILDE INT_LIT','switch_factor',2,'p_switch_factor','Parser.py',1084),
  ('switch_factor -> TILDE FLT_LIT','switch_factor',2,'p_switch_factor','Parser.py',1085),
  ('switch_factor -> LPAREN switch_factor RPAREN','switch_factor',3,'p_switch_factor','Parser.py',1086),
  ('switch_factor_tail -> PLUS switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1107),
  ('switch_factor_tail -> MINUS switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1108),
  ('switch_factor_tail -> MULTIPLY switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1109),
  ('switch_factor_tail -> DIVISION switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1110),
  ('switch_factor_tail -> MODULO switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1111),
  ('switch_factor_tail -> EXPONENT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1112),
  ('switch_factor_tail -> GT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1113),
  ('switch_factor_tail -> LT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1114),
  ('switch_factor_tail -> EQ_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1115),
  ('switch_factor_tail -> GT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1116),
  ('switch_factor_tail -> LT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1117),
  ('switch_factor_tail -> NOT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1118),
  ('switch_factor_tail -> AND switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1119),
  ('switch_factor_tail -> OR switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1120),
  ('switch_factor_tail -> empty','switch_factor_tail',1,'p_switch_factor_tail','Parser.py',1121),
  ('switch_factor1 -> INT_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1130),
  ('switch_factor1 -> FLT_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1131),
  ('switch_factor1 -> DAY','switch_factor1',1,'p_switch_factor1','Parser.py',1132),
  ('switch_factor1 -> NIGHT','switch_factor1',1,'p_switch_factor1','Parser.py',1133),
  ('switch_factor1 -> STR_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1134),
  ('switch_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1139),
  ('switch_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1140),
  ('switch_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1141),
  ('switch_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1142),
  ('switchcond_tail -> switch_condition','switchcond_tail',1,'p_switchcond_tail','Parser.py',1150),
  ('switchcond_tail -> empty','switchcond_tail',1,'p_switchcond_tail','Parser.py',1151),
  ('loop_statement -> for_loop','loop_statement',1,'p_loop_statement','Parser.py',1166),
  ('loop_statement -> until_loop','loop_statement',1,'p_loop_statement','Parser.py',1167),
  ('loop_statement -> repeat_until','loop_statement',1,'p_loop_statement','Parser.py',1168),
  ('for_loop -> FOR LPAREN control_variable SEMICOLON for_expression SEMICOLON update RPAREN LBRACE maybe_newline statements maybe_newline RBRACE','for_loop',13,'p_for_loop','Parser.py',1176),
  ('for_expression -> for_factor for_factor_tail','for_expression',2,'p_for_expression','Parser.py',1181),
  ('for_factor -> var_call postfix','for_factor',2,'p_for_factor','Parser.py',1191),
  ('for_factor -> for_factor1','for_factor',1,'p_for_factor','Parser.py',1192),
  ('for_factor -> TILDE INT_LIT','for_factor',2,'p_for_factor','Parser.py',1193),
  ('for_factor -> TILDE FLT_LIT','for_factor',2,'p_for_factor','Parser.py',1194),
  ('for_factor -> LPAREN for_factor RPAREN','for_factor',3,'p_for_factor','Parser.py',1195),
  ('for_factor_tail -> PLUS for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1216),
  ('for_factor_tail -> MINUS for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1217),
  ('for_factor_tail -> MULTIPLY for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1218),
  ('for_factor_tail -> DIVISION for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1219),
  ('for_factor_tail -> MODULO for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1220),
  ('for_factor_tail -> EXPONENT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1221),
  ('for_factor_tail -> GT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1222),
  ('for_factor_tail -> LT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1223),
  ('for_factor_tail -> EQ_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1224),
  ('for_factor_tail -> GT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1225),
  ('for_factor_tail -> LT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1226),
  ('for_factor_tail -> NOT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1227),
  ('for_factor_tail -> AND for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1228),
  ('for_factor_tail -> OR for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1229),
  ('for_factor_tail -> empty','for_factor_tail',1,'p_for_factor_tail','Parser.py',1230),
  ('for_factor1 -> INT_LIT','for_factor1',1,'p_for_factor1','Parser.py',1239),
  ('for_factor1 -> FLT_LIT','for_factor1',1,'p_for_factor1','Parser.py',1240),
  ('for_factor1 -> DAY','for_factor1',1,'p_for_factor1','Parser.py',1241),
  ('for_factor1 -> NIGHT','for_factor1',1,'p_for_factor1','Parser.py',1242),
  ('for_factor1 -> STR_LIT','for_factor1',1,'p_for_factor1','Parser.py',1243),
  ('until_loop -> UNTIL LPAREN until_expression RPAREN LBRACE statements RBRACE','until_loop',7,'p_until_loop','Parser.py',1251),
  ('until_expression -> until_factor until_factor_tail','until_expression',2,'p_until_expression','Parser.py',1258),
  ('until_factor -> var_call postfix','until_factor',2,'p_until_factor','Parser.py',1268),
  ('until_factor -> until_factor1','until_factor',1,'p_until_factor','Parser.py',1269),
  ('until_factor -> TILDE INT_LIT','until_factor',2,'p_until_factor','Parser.py',1270),
  ('until_factor -> TILDE FLT_LIT','until_factor',2,'p_until_factor','Parser.py',1271),
  ('until_factor -> LPAREN until_factor RPAREN','until_factor',3,'p_until_factor','Parser.py',1272),
  ('until_factor_tail -> PLUS until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1293),
  ('until_factor_tail -> MINUS until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1294),
  ('until_factor_tail -> MULTIPLY until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1295),
  ('until_factor_tail -> DIVISION until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1296),
  ('until_factor_tail -> MODULO until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1297),
  ('until_factor_tail -> EXPONENT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1298),
  ('until_factor_tail -> GT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1299),
  ('until_factor_tail -> LT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1300),
  ('until_factor_tail -> EQ_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1301),
  ('until_factor_tail -> GT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1302),
  ('until_factor_tail -> LT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1303),
  ('until_factor_tail -> NOT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1304),
  ('until_factor_tail -> AND until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1305),
  ('until_factor_tail -> OR until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1306),
  ('until_factor_tail -> empty','until_factor_tail',1,'p_until_factor_tail','Parser.py',1307),
  ('until_factor1 -> INT_LIT','until_factor1',1,'p_until_factor1','Parser.py',1316),
  ('until_factor1 -> FLT_LIT','until_factor1',1,'p_until_factor1','Parser.py',1317),
  ('until_factor1 -> DAY','until_factor1',1,'p_until_factor1','Parser.py',1318),
  ('until_factor1 -> NIGHT','until_factor1',1,'p_until_factor1','Parser.py',1319),
  ('until_factor1 -> STR_LIT','until_factor1',1,'p_until_factor1','Parser.py',1320),
  ('repeat_until -> REPEAT LBRACE statements RBRACE UNTIL LPAREN until_expression RPAREN','repeat_until',8,'p_repeat_until','Parser.py',1328),
  ('control_variable -> INT IDENT EQ control_var_tail','control_variable',4,'p_control_variable','Parser.py',1336),
  ('control_var_tail -> INT_LIT','control_var_tail',1,'p_control_var_tail','Parser.py',1350),
  ('control_var_tail -> var_call','control_var_tail',1,'p_control_var_tail','Parser.py',1351),
  ('update -> var_call update_tail','update',2,'p_update','Parser.py',1364),
  ('update_tail -> postfix_op','update_tail',1,'p_update_tail','Parser.py',1374),
  ('update_tail -> compound_op value','update_tail',2,'p_update_tail','Parser.py',1375),
  ('postfix_op -> PLUS_PLUS','postfix_op',1,'p_postfix_op','Parser.py',1388),
  ('postfix_op -> MINUS_MINUS','postfix_op',1,'p_postfix_op','Parser.py',1389),
  ('function_call -> FUNCTION_NAME LPAREN arguments RPAREN','function_call',4,'p_function_call','Parser.py',1399),
  ('function_call -> input_statement','function_call',1,'p_function_call','Parser.py',1400),
  ('arguments -> empty','arguments',1,'p_arguments','Parser.py',1413),
  ('arguments -> arg_value arg_tail','arguments',2,'p_arguments','Parser.py',1414),
  ('arg_tail -> COMMA arg_value arg_tail','arg_tail',3,'p_arg_tail','Parser.py',1427),
  ('arg_tail -> empty','arg_tail',1,'p_arg_tail','Parser.py',1428),
  ('arg_value -> literal','arg_value',1,'p_arg_value','Parser.py',1441),
  ('arg_value -> var_call','arg_value',1,'p_arg_value','Parser.py',1442),
  ('output_statement -> DISPLAY value next_val','output_statement',3,'p_output_statement','Parser.py',1451),
  ('next_val -> COMMA value next_val','next_val',3,'p_next_val','Parser.py',1461),
  ('next_val -> empty','next_val',1,'p_next_val','Parser.py',1462),
  ('assignment_statement -> IDENT assign_tail','assignment_statement',2,'p_assignment_statement','Parser.py',1474),
  ('assign_tail -> DOT SPLICE LPAREN start COMMA deleteCount COMMA splice_items RPAREN','assign_tail',9,'p_assign_tail','Parser.py',1486),
  ('assign_tail -> DOT PUSH LPAREN list_element RPAREN','assign_tail',5,'p_assign_tail','Parser.py',1487),
  ('assign_tail -> assign_op value','assign_tail',2,'p_assign_tail','Parser.py',1488),
  ('assign_op -> compound_op','assign_op',1,'p_assign_op','Parser.py',1504),
  ('assign_op -> EQ','assign_op',1,'p_assign_op','Parser.py',1505),
  ('compound_op -> PLUS_EQ','compound_op',1,'p_compound_op','Parser.py',1518),
  ('compound_op -> MINUS_EQ','compound_op',1,'p_compound_op','Parser.py',1519),
  ('compound_op -> MUL_EQ','compound_op',1,'p_compound_op','Parser.py',1520),
  ('compound_op -> DIV_EQ','compound_op',1,'p_compound_op','Parser.py',1521),
  ('compound_op -> MOD_EQ','compound_op',1,'p_compound_op','Parser.py',1522),
  ('start -> INT_LIT','start',1,'p_start','Parser.py',1531),
  ('deleteCount -> empty','deleteCount',1,'p_deleteCount','Parser.py',1541),
  ('deleteCount -> INT_LIT','deleteCount',1,'p_deleteCount','Parser.py',1542),
  ('splice_items -> empty','splice_items',1,'p_splice_items','Parser.py',1555),
  ('splice_items -> list_element','splice_items',1,'p_splice_items','Parser.py',1556),
  ('var_call -> IDENT list_index','var_call',2,'p_var_call','Parser.py',1568),
  ('list_index -> LBRACKET index RBRACKET list_index2','list_index',4,'p_list_index','Parser.py',1579),
  ('list_index -> empty','list_index',1,'p_list_index','Parser.py',1580),
  ('list_index2 -> LBRACKET index RBRACKET','list_index2',3,'p_list_index2','Parser.py',1593),
  ('list_index2 -> empty','list_index2',1,'p_list_index2','Parser.py',1594),
  ('index -> INT_LIT','index',1,'p_index','Parser.py',1607),
  ('index -> IDENT','index',1,'p_index','Parser.py',1608),
  ('postfix -> empty','postfix',1,'p_postfix','Parser.py',1618),
  ('postfix -> postfix_op','postfix',1,'p_postfix','Parser.py',1619),
  ('value -> type_cast','value',1,'p_value','Parser.py',1630),
  ('value -> value_expression','value',1,'p_value','Parser.py',1631),
  ('value -> function_call','value',1,'p_value','Parser.py',1632),
  ('value_expression -> value_factor value_factor_tail','value_expression',2,'p_value_expression','Parser.py',1639),
  ('value_factor -> var_call postfix','value_factor',2,'p_value_factor','Parser.py',1649),
  ('value_factor -> value_factor1','value_factor',1,'p_value_factor','Parser.py',1650),
  ('value_factor -> TILDE INT_LIT','value_factor',2,'p_value_factor','Parser.py',1651),
  ('value_factor -> TILDE FLT_LIT','value_factor',2,'p_value_factor','Parser.py',1652),
  ('value_factor -> LPAREN value_factor RPAREN','value_factor',3,'p_value_factor','Parser.py',1653),
  ('value_factor_tail -> PLUS value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1674),
  ('value_factor_tail -> MINUS value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1675),
  ('value_factor_tail -> MULTIPLY value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1676),
  ('value_factor_tail -> DIVISION value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1677),
  ('value_factor_tail -> MODULO value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1678),
  ('value_factor_tail -> EXPONENT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1679),
  ('value_factor_tail -> GT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1680),
  ('value_factor_tail -> LT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1681),
  ('value_factor_tail -> EQ_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1682),
  ('value_factor_tail -> GT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1683),
  ('value_factor_tail -> LT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1684),
  ('value_factor_tail -> NOT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1685),
  ('value_factor_tail -> AND value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1686),
  ('value_factor_tail -> OR value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1687),
  ('value_factor_tail -> empty','value_factor_tail',1,'p_value_factor_tail','Parser.py',1688),
  ('value_factor1 -> INT_LIT','value_factor1',1,'p_value_factor1','Parser.py',1697),
  ('value_factor1 -> FLT_LIT','value_factor1',1,'p_value_factor1','Parser.py',1698),
  ('value_factor1 -> DAY','value_factor1',1,'p_value_factor1','Parser.py',1699),
  ('value_factor1 -> NIGHT','value_factor1',1,'p_value_factor1','Parser.py',1700),
  ('value_factor1 -> STR_LIT','value_factor1',1,'p_value_factor1','Parser.py',1701),
  ('type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',1712),
  ('type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',1713),
  ('type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',1714),
  ('type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',1715),
  ('typecast_value -> typecast_expression','typecast_value',1,'p_typecast_value','Parser.py',1727),
  ('typecast_value -> FUNCTION_NAME LPAREN RPAREN','typecast_value',3,'p_typecast_value','Parser.py',1728),
  ('typecast_value -> input_statement','typecast_value',1,'p_typecast_value','Parser.py',1729),
  ('typecast_expression -> typecast_factor typecast_factor_tail','typecast_expression',2,'p_typecast_expression','Parser.py',1739),
  ('typecast_factor -> var_call postfix','typecast_factor',2,'p_typecast_factor','Parser.py',1749),
  ('typecast_factor -> typecast_factor1','typecast_factor',1,'p_typecast_factor','Parser.py',1750),
  ('typecast_factor -> TILDE INT_LIT','typecast_factor',2,'p_typecast_factor','Parser.py',1751),
  ('typecast_factor -> TILDE FLT_LIT','typecast_factor',2,'p_typecast_factor','Parser.py',1752),
  ('typecast_factor -> LPAREN typecast_factor RPAREN','typecast_factor',3,'p_typecast_factor','Parser.py',1753),
  ('typecast_factor_tail -> PLUS typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1774),
  ('typecast_factor_tail -> MINUS typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1775),
  ('typecast_factor_tail -> MULTIPLY typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1776),
  ('typecast_factor_tail -> DIVISION typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1777),
  ('typecast_factor_tail -> MODULO typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1778),
  ('typecast_factor_tail -> EXPONENT typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1779),
  ('typecast_factor_tail -> GT typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1780),
  ('typecast_factor_tail -> LT typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1781),
  ('typecast_factor_tail -> EQ_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1782),
  ('typecast_factor_tail -> GT_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1783),
  ('typecast_factor_tail -> LT_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1784),
  ('typecast_factor_tail -> NOT_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1785),
  ('typecast_factor_tail -> AND typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1786),
  ('typecast_factor_tail -> OR typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',1787),
  ('typecast_factor_tail -> empty','typecast_factor_tail',1,'p_typecast_factor_tail','Parser.py',1788),
  ('typecast_factor1 -> INT_LIT','typecast_factor1',1,'p_typecast_factor1','Parser.py',1797),
  ('typecast_factor1 -> FLT_LIT','typecast_factor1',1,'p_typecast_factor1','Parser.py',1798),
  ('typecast_factor1 -> DAY','typecast_factor1',1,'p_typecast_factor1','Parser.py',1799),
  ('typecast_factor1 -> NIGHT','typecast_factor1',1,'p_typecast_factor1','Parser.py',1800),
  ('typecast_factor1 -> STR_LIT','typecast_factor1',1,'p_typecast_factor1','Parser.py',1801),
  ('input_statement -> INPUT LPAREN RPAREN','input_statement',3,'p_input_statement','Parser.py',1809),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',1814),
]
