
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEXPONENTrightNOTMINUSleftMULTIPLYDIVISIONMODULOleftPLUSMINUSleftPLUS_PLUSMINUS_MINUSleftEQ_EQNOT_EQLTGTLT_EQGT_EQleftANDleftORrightEQPLUS_EQMINUS_EQMUL_EQDIV_EQMOD_EQAND BIRTH BLN BLN_LIT CARRIAGE_RETURN CHECK CHR CHR_LIT COLON COMMA COMMENT CONVERT_TO_BLN CONVERT_TO_FLT CONVERT_TO_INT CONVERT_TO_STR DAY DISPLAY DIVISION DIV_EQ DOT DOUBLE_LT DOUBLE_SLASH EOF EQ EQ_EQ EXPONENT FLT FLT_LIT FOR FUNCTION FUNCTION_BLN FUNCTION_CHR FUNCTION_FLT FUNCTION_INT FUNCTION_LIST_BLN FUNCTION_LIST_BLN2D FUNCTION_LIST_CHR FUNCTION_LIST_CHR2D FUNCTION_LIST_FLT FUNCTION_LIST_FLT2D FUNCTION_LIST_INT FUNCTION_LIST_INT2D FUNCTION_LIST_STR FUNCTION_LIST_STR2D FUNCTION_NAME FUNCTION_STR GHOST GT GT_EQ IDENT ILLEGAL IN INPUT INT INT_LIT LBRACE LBRACKET LIST_BLN LIST_BLN2D LIST_CHR LIST_CHR2D LIST_FLT LIST_FLT2D LIST_INT LIST_INT2D LIST_STR LIST_STR2D LPAREN LT LT_EQ MAIN_CASPER MEASURE MINUS MINUS_EQ MINUS_MINUS MODULO MOD_EQ MULTIPLY MUL_EQ NEWLINE NIGHT NOT NOT_EQ OR OTHERWISE OTHERWISE_CHECK PLUS PLUS_EQ PLUS_PLUS POW PUSH RBRACE RBRACKET REPEAT REVIVE RPAREN SEMICOLON SHIFT SKIP SPLICE STOP STR STR_LIT SWAP TILDE TYPE UNTILprogram : BIRTH LBRACE global_dec function_statements main_function RBRACE GHOSTmain_function : MAIN_CASPER LPAREN RPAREN LBRACE statements RBRACE\n    global_dec : global_statement SEMICOLON global_tail \n               | empty                            \n    \n        global_tail : global_dec\n    \n    global_statement : var_statement global_statement_tail \n    \n        var_statement : data_type IDENT list_dec \n    \n    list_dec : empty               \n             | LBRACKET RBRACKET _2d_list \n    \n    _2d_list : empty            \n             | LBRACKET RBRACKET \n    \n    global_statement_tail : empty                        \n                          | COMMA IDENT global_statement_tail \n                          | EQ global_value global_statement_tail2 \n    \n    global_statement_tail2 : COMMA IDENT global_statement_tail \n                           | empty                           \n    \n    global_value : expression   \n                 | list_value   \n    \n     list_value : LBRACKET list_element RBRACKET\n    \n    list_element : literal element_tail\n                 | list_value element_tail\n    \n    element_tail : COMMA list_element  \n                 | empty              \n    \n    data_type : INT   \n              | FLT   \n              | BLN  \n              | CHR  \n              | STR  \n    \n    expression : factor factor_tail\n    \n    factor : var_call postfix           \n           | literal1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN factor_expression RPAREN    \n    \n    factor_expression : factor_expression_factor factor_expression_tail\n    \n    factor_expression_factor : factor_var_call factor_postfix           \n           | factor_expression1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN factor_expression RPAREN    \n    \n    factor_var_call : IDENT factor_list_index  \n    \n    factor_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    factor_postfix : empty        \n            | factor_postfix_op  \n    \n    factor_list_index : LBRACKET factor_index RBRACKET factor_list_index2  \n               | empty                                \n    \n    factor_list_index2 : LBRACKET factor_index RBRACKET \n                | empty                   \n    factor_index : INT_LITfactor_index : IDENT\n    factor_expression_tail : PLUS factor_expression_factor factor_expression_tail\n                | MINUS factor_expression_factor factor_expression_tail\n                | MULTIPLY factor_expression_factor factor_expression_tail\n                | DIVISION factor_expression_factor factor_expression_tail\n                | MODULO factor_expression_factor factor_expression_tail\n                | EXPONENT factor_expression_factor factor_expression_tail\n                | GT factor_expression_factor factor_expression_tail\n                | LT factor_expression_factor factor_expression_tail\n                | EQ_EQ factor_expression_factor factor_expression_tail\n                | GT_EQ factor_expression_factor factor_expression_tail\n                | LT_EQ factor_expression_factor factor_expression_tail\n                | NOT_EQ factor_expression_factor factor_expression_tail\n                | AND factor_expression_factor factor_expression_tail\n                | OR factor_expression_factor factor_expression_tail\n                | empty\n    \n    factor_expression1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    factor_tail : PLUS factor factor_tail\n                | MINUS factor factor_tail\n                | MULTIPLY factor factor_tail\n                | DIVISION factor factor_tail\n                | MODULO factor factor_tail\n                | EXPONENT factor factor_tail\n                | GT factor factor_tail\n                | LT factor factor_tail\n                | EQ_EQ factor factor_tail\n                | GT_EQ factor factor_tail\n                | LT_EQ factor factor_tail\n                | NOT_EQ factor factor_tail\n                | AND factor factor_tail\n                | OR factor factor_tail\n                | empty\n    \n    literal : literal1\n            | literal2\n    \n    literal1 : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    literal2 : CHR_LIT\n    \n    function_statements : ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements revive RBRACE function_statements_tail  \n                        | empty                                                          \n    \n    function_statements_tail : function_statements \n                             | empty               \n    \n    ret_type : FUNCTION           \n             | function_dtype    \n    \n    function_dtype : FUNCTION_INT       \n                   | FUNCTION_FLT      \n                   | FUNCTION_CHR       \n                   | FUNCTION_BLN       \n                   | FUNCTION_STR       \n                   | FUNCTION_LIST_INT \n                   | FUNCTION_LIST_FLT  \n                   | FUNCTION_LIST_CHR \n                   | FUNCTION_LIST_STR  \n                   | FUNCTION_LIST_BLN  \n    \n    parameters : data_type IDENT parameters_tail  \n               | empty                            \n    \n    parameters_tail : COMMA data_type IDENT parameters_tail \n                    | empty                                 \n    \n    revive : REVIVE revive_value SEMICOLON\n           | empty        \n    revive_value : revive_type_cast\n             | revive_expression\n             | function_call\n    revive_expression : revive_factor revive_factor_tail\n    \n    revive_factor : revive_var_call revive_postfix           \n           | revive_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN revive_expression RPAREN    \n    \n    revive_var_call : IDENT revive_list_index  \n    \n    revive_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    revive_postfix : empty        \n            | revive_postfix_op  \n    \n    revive_list_index : LBRACKET revive_index RBRACKET revive_list_index2  \n               | empty                                \n    \n    revive_list_index2 : LBRACKET revive_index RBRACKET \n                | empty                   \n    revive_index : INT_LITrevive_index : IDENT\n    revive_factor_tail : PLUS revive_factor revive_factor_tail\n                | MINUS revive_factor revive_factor_tail\n                | MULTIPLY revive_factor revive_factor_tail\n                | DIVISION revive_factor revive_factor_tail\n                | MODULO revive_factor revive_factor_tail\n                | EXPONENT revive_factor revive_factor_tail\n                | GT revive_factor revive_factor_tail\n                | LT revive_factor revive_factor_tail\n                | EQ_EQ revive_factor revive_factor_tail\n                | GT_EQ revive_factor revive_factor_tail\n                | LT_EQ revive_factor revive_factor_tail\n                | NOT_EQ revive_factor revive_factor_tail\n                | AND revive_factor revive_factor_tail\n                | OR revive_factor revive_factor_tail\n                | empty\n    \n    revive_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    revive_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPARENstatements : empty\n           | local_dec statements_tail \n    statements_tail : switch_statement statements\n                    | loop_statement statements\n                    | function_call_statement statements\n                    | assignment_statement statements\n                    | output_statement statements\n                    | conditional_statement statements\n                    | statements\n    \n    local_dec : local_var_statement local_dec_tail SEMICOLON\n              | empty\n    \n        local_var_statement : local_data_type IDENT local_list_dec\n    \n    local_data_type : INT   \n              | FLT   \n              | BLN  \n              | CHR  \n              | STR  \n    \n    local_list_dec : empty               \n             | LBRACKET RBRACKET local_2d_list \n    \n    local_2d_list : empty            \n             | LBRACKET RBRACKET \n    \n    local_dec_tail : empty                          \n                   | COMMA IDENT local_dec_tail     \n                   | EQ local_value local_dec_tail2  \n    \n    local_dec_tail2 : COMMA IDENT local_dec_tail  \n                    | empty                      \n    \n    local_value : local_value_value      \n                | list_value  \n    local_value_value  : local_type_cast\n             | local_expression\n             | function_call\n    local_expression : local_factor local_factor_tail\n    \n    local_factor : local_var_call local_postfix           \n           | local_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN local_expression RPAREN    \n    \n    local_var_call : IDENT local_list_index  \n    \n    local_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    local_postfix : empty        \n            | local_postfix_op  \n    \n    local_list_index : LBRACKET local_index RBRACKET local_list_index2  \n               | empty                                \n    \n    local_list_index2 : LBRACKET local_index RBRACKET \n                | empty                   \n    local_index : INT_LITlocal_index : IDENT\n    local_factor_tail : PLUS local_factor local_factor_tail\n                | MINUS local_factor local_factor_tail\n                | MULTIPLY local_factor local_factor_tail\n                | DIVISION local_factor local_factor_tail\n                | MODULO local_factor local_factor_tail\n                | EXPONENT local_factor local_factor_tail\n                | GT local_factor local_factor_tail\n                | LT local_factor local_factor_tail\n                | EQ_EQ local_factor local_factor_tail\n                | GT_EQ local_factor local_factor_tail\n                | LT_EQ local_factor local_factor_tail\n                | NOT_EQ local_factor local_factor_tail\n                | AND local_factor local_factor_tail\n                | OR local_factor local_factor_tail\n                | empty\n    \n    local_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    local_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    conditional_statement : CHECK LPAREN condition RPAREN LBRACE  statements RBRACE conditional_tail OTHERWISE LBRACE statements RBRACE \n    \n    conditional_tail : OTHERWISE_CHECK LPAREN condition RPAREN LBRACE statements RBRACE conditional_tail \n                     | empty                                            \n    \n    condition : condition_factor condition_tail\n    \n    condition_factor : condition_var_call condition_postfix           \n           | condition1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN condition RPAREN    \n    \n    condition_var_call : IDENT condition_list_index  \n    \n    condition_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    condition_postfix : empty        \n            | condition_postfix_op  \n    \n    condition_list_index : LBRACKET condition_index RBRACKET condition_list_index2  \n               | empty                                \n    \n    condition_list_index2 : LBRACKET condition_index RBRACKET \n                | empty                   \n    condition_index : INT_LITcondition_index : IDENT\n    condition_tail : PLUS condition_factor condition_tail\n                | MINUS condition_factor condition_tail\n                | MULTIPLY condition_factor condition_tail\n                | DIVISION condition_factor condition_tail\n                | MODULO condition_factor condition_tail\n                | EXPONENT condition_factor condition_tail\n                | GT condition_factor condition_tail\n                | LT condition_factor condition_tail\n                | EQ_EQ condition_factor condition_tail\n                | GT_EQ condition_factor condition_tail\n                | LT_EQ condition_factor condition_tail\n                | NOT_EQ condition_factor condition_tail\n                | AND condition_factor condition_tail\n                | OR condition_factor condition_tail\n                | empty\n    \n    condition1 : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    switch_statement : SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE LBRACE statements RBRACE RBRACE\n    \n    switch_condition : SHIFT switch_value COLON statements switchcond_tail\n    switch_value  : switch_type_cast\n             | switch_expression\n             | function_call\n    switch_expression : switch_factor switch_factor_tail\n    \n    switch_factor : switch_var_call switch_postfix           \n           | switch_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN switch_expression RPAREN    \n    \n    switch_var_call : IDENT switch_list_index  \n    \n    switch_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    switch_postfix : empty        \n            | switch_postfix_op  \n    \n    switch_list_index : LBRACKET switch_index RBRACKET switch_list_index2  \n               | empty                                \n    \n    switch_list_index2 : LBRACKET switch_index RBRACKET \n                | empty                   \n    switch_index : INT_LITswitch_index : IDENT\n    switch_factor_tail : PLUS switch_factor switch_factor_tail\n                | MINUS switch_factor switch_factor_tail\n                | MULTIPLY switch_factor switch_factor_tail\n                | DIVISION switch_factor switch_factor_tail\n                | MODULO switch_factor switch_factor_tail\n                | EXPONENT switch_factor switch_factor_tail\n                | GT switch_factor switch_factor_tail\n                | LT switch_factor switch_factor_tail\n                | EQ_EQ switch_factor switch_factor_tail\n                | GT_EQ switch_factor switch_factor_tail\n                | LT_EQ switch_factor switch_factor_tail\n                | NOT_EQ switch_factor switch_factor_tail\n                | AND switch_factor switch_factor_tail\n                | OR switch_factor switch_factor_tail\n                | empty\n    \n    switch_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    switch_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    switchcond_tail : switch_condition  \n                    | empty          \n    \n    loop_statement : for_loop    \n                   | until_loop  \n                   | repeat_until\n    for_loop : FOR LPAREN control_variable SEMICOLON for_expression SEMICOLON update RPAREN LBRACE statements RBRACE\n    for_expression : for_factor for_factor_tail\n    \n    for_factor : for_var_call for_postfix           \n           | for_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN for_expression RPAREN    \n    \n    for_var_call : IDENT for_list_index  \n    \n    for_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    for_postfix : empty        \n            | for_postfix_op  \n    \n    for_list_index : LBRACKET for_index RBRACKET for_list_index2  \n               | empty                                \n    \n    for_list_index2 : LBRACKET for_index RBRACKET \n                | empty                   \n    for_index : INT_LITfor_index : IDENT\n    for_factor_tail : PLUS for_factor for_factor_tail\n                | MINUS for_factor for_factor_tail\n                | MULTIPLY for_factor for_factor_tail\n                | DIVISION for_factor for_factor_tail\n                | MODULO for_factor for_factor_tail\n                | EXPONENT for_factor for_factor_tail\n                | GT for_factor for_factor_tail\n                | LT for_factor for_factor_tail\n                | EQ_EQ for_factor for_factor_tail\n                | GT_EQ for_factor for_factor_tail\n                | LT_EQ for_factor for_factor_tail\n                | NOT_EQ for_factor for_factor_tail\n                | AND for_factor for_factor_tail\n                | OR for_factor for_factor_tail\n                | empty\n    \n    for_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    until_loop : UNTIL LPAREN until_expression RPAREN LBRACE statements RBRACE  \n    \n    until_expression : until_factor until_factor_tail\n    \n    until_factor : until_var_call until_postfix           \n           | until_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN until_expression RPAREN    \n    \n    until_var_call : IDENT until_list_index  \n    \n    until_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    until_postfix : empty        \n            | until_postfix_op  \n    \n    until_list_index : LBRACKET until_index RBRACKET until_list_index2  \n               | empty                                \n    \n    until_list_index2 : LBRACKET until_index RBRACKET \n                | empty                   \n    until_index : INT_LITuntil_index : IDENT\n    until_factor_tail : PLUS until_factor until_factor_tail\n                | MINUS until_factor until_factor_tail\n                | MULTIPLY until_factor until_factor_tail\n                | DIVISION until_factor until_factor_tail\n                | MODULO until_factor until_factor_tail\n                | EXPONENT until_factor until_factor_tail\n                | GT until_factor until_factor_tail\n                | LT until_factor until_factor_tail\n                | EQ_EQ until_factor until_factor_tail\n                | GT_EQ until_factor until_factor_tail\n                | LT_EQ until_factor until_factor_tail\n                | NOT_EQ until_factor until_factor_tail\n                | AND until_factor until_factor_tail\n                | OR until_factor until_factor_tail\n                | empty\n    \n    until_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    repeat_until : REPEAT LBRACE statements RBRACE UNTIL LPAREN until_expression RPAREN SEMICOLON\n    control_variable : INT IDENT EQ control_var_tailcontrol_var_tail : INT_LIT \n                        | var_call\n    \n    update : var_call update_tail  \n    \n    update_tail : postfix_op         \n                | compound_op value   \n    \n    postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    function_call_statement : FUNCTION_NAME LPAREN arguments RPAREN SEMICOLON\n                  | input_statement                   \n    \n    function_call : FUNCTION_NAME LPAREN arguments RPAREN \n                  | input_statement                   \n    \n    arguments : empty                  \n              | arg_value arg_tail    \n    \n    arg_tail : COMMA arg_value arg_tail   \n             | empty                     \n    \n    arg_value : literal   \n              | var_call \n    \n    output_statement : DISPLAY output_value next_val SEMICOLON   \n    output_value : output_type_cast\n             | output_expression\n             | function_call\n    output_expression : output_factor output_factor_tail\n    \n    output_factor : output_var_call output_postfix           \n           | output_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN output_expression RPAREN    \n    \n    output_var_call : IDENT output_list_index  \n    \n    output_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    output_postfix : empty        \n            | output_postfix_op  \n    \n    output_list_index : LBRACKET output_index RBRACKET output_list_index2  \n               | empty                                \n    \n    output_list_index2 : LBRACKET output_index RBRACKET \n                | empty                   \n    output_index : INT_LIToutput_index : IDENT\n    output_factor_tail : PLUS output_factor output_factor_tail\n                | MINUS output_factor output_factor_tail\n                | MULTIPLY output_factor output_factor_tail\n                | DIVISION output_factor output_factor_tail\n                | MODULO output_factor output_factor_tail\n                | EXPONENT output_factor output_factor_tail\n                | GT output_factor output_factor_tail\n                | LT output_factor output_factor_tail\n                | EQ_EQ output_factor output_factor_tail\n                | GT_EQ output_factor output_factor_tail\n                | LT_EQ output_factor output_factor_tail\n                | NOT_EQ output_factor output_factor_tail\n                | AND output_factor output_factor_tail\n                | OR output_factor output_factor_tail\n                | empty\n    \n    output_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    output_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    next_val : COMMA value next_val  \n             | empty                \n    \n    assignment_statement : var_call EQ value SEMICOLON\n    \n    assignment_statement : IDENT assign_tail SEMICOLON\n    \n    assign_tail : DOT SPLICE LPAREN start COMMA deleteCount COMMA splice_items RPAREN  \n                | DOT PUSH LPAREN list_element RPAREN                                  \n                | assign_op assign_value                                                     \n    assign_value : assign_type_cast\n             | assign_expression\n             | function_call\n    assign_expression : assign_factor assign_factor_tail\n    \n    assign_factor : assign_var_call assign_postfix           \n           | assign_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN assign_expression RPAREN  \n    \n    assign_var_call : IDENT assign_list_index  \n    \n    assign_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    assign_postfix : empty        \n            | assign_postfix_op  \n    \n    assign_list_index : LBRACKET assign_index RBRACKET assign_list_index2  \n               | empty                                \n    \n    assign_list_index2 : LBRACKET assign_index RBRACKET \n                | empty                   \n    assign_index : INT_LITassign_index : IDENT\n    assign_factor_tail : PLUS assign_factor assign_factor_tail\n                | MINUS assign_factor assign_factor_tail\n                | MULTIPLY assign_factor assign_factor_tail\n                | DIVISION assign_factor assign_factor_tail\n                | MODULO assign_factor assign_factor_tail\n                | EXPONENT assign_factor assign_factor_tail\n                | GT assign_factor assign_factor_tail\n                | LT assign_factor assign_factor_tail\n                | EQ_EQ assign_factor assign_factor_tail\n                | GT_EQ assign_factor assign_factor_tail\n                | LT_EQ assign_factor assign_factor_tail\n                | NOT_EQ assign_factor assign_factor_tail\n                | AND assign_factor assign_factor_tail\n                | OR assign_factor assign_factor_tail\n                | empty\n    \n    assign_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    assign_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    assign_op : compound_op  \n              | EQ           \n    \n    compound_op : PLUS_EQ \n                | MINUS_EQ  \n                | MUL_EQ   \n                | DIV_EQ    \n                | MOD_EQ   \n    \n    start : INT_LIT \n    \n    deleteCount : empty     \n                | INT_LIT  \n    \n    splice_items : empty          \n                 | list_element  \n    \n    var_call : IDENT list_index  \n    \n    list_index : LBRACKET index RBRACKET list_index2  \n               | empty                                \n    \n    list_index2 : LBRACKET index RBRACKET \n                | empty                   \n    index : INT_LITindex : IDENT\n    postfix : empty        \n            | postfix_op  \n    \n    value : type_cast     \n          | value_expression   \n          | function_call \n    \n    value_expression : value_factor value_factor_tail\n    \n    value_factor : value_var_call value_postfix           \n           | value_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN value_expression RPAREN    \n    \n    value_var_call : IDENT value_list_index  \n    \n    value_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    value_postfix : empty        \n            | value_postfix_op  \n    \n    value_list_index : LBRACKET value_index RBRACKET value_list_index2  \n               | empty                                \n    \n    value_list_index2 : LBRACKET value_index RBRACKET \n                | empty                   \n    value_index : INT_LITvalue_index : IDENT\n    value_factor_tail : PLUS value_factor value_factor_tail\n                | MINUS value_factor value_factor_tail\n                | MULTIPLY value_factor value_factor_tail\n                | DIVISION value_factor value_factor_tail\n                | MODULO value_factor value_factor_tail\n                | EXPONENT value_factor value_factor_tail\n                | GT value_factor value_factor_tail\n                | LT value_factor value_factor_tail\n                | EQ_EQ value_factor value_factor_tail\n                | GT_EQ value_factor value_factor_tail\n                | LT_EQ value_factor value_factor_tail\n                | NOT_EQ value_factor value_factor_tail\n                | AND value_factor value_factor_tail\n                | OR value_factor value_factor_tail\n                | empty\n    \n    value_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN \n              | CONVERT_TO_FLT LPAREN typecast_value RPAREN  \n              | CONVERT_TO_BLN LPAREN typecast_value RPAREN  \n              | CONVERT_TO_STR LPAREN typecast_value RPAREN \n    \n    typecast_value : typecast_expression                           \n                   | FUNCTION_NAME LPAREN RPAREN          \n                   | input_statement                     \n    \n    typecast_expression : typecast_factor typecast_factor_tail\n    \n    typecast_factor : var_call postfix           \n           | typecast_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN typecast_expression RPAREN    \n    \n    typecast_factor_tail : PLUS typecast_factor typecast_factor_tail\n                | MINUS typecast_factor typecast_factor_tail\n                | MULTIPLY typecast_factor typecast_factor_tail\n                | DIVISION typecast_factor typecast_factor_tail\n                | MODULO typecast_factor typecast_factor_tail\n                | EXPONENT typecast_factor typecast_factor_tail\n                | GT typecast_factor typecast_factor_tail\n                | LT typecast_factor typecast_factor_tail\n                | EQ_EQ typecast_factor typecast_factor_tail\n                | GT_EQ typecast_factor typecast_factor_tail\n                | LT_EQ typecast_factor typecast_factor_tail\n                | NOT_EQ typecast_factor typecast_factor_tail\n                | AND typecast_factor typecast_factor_tail\n                | OR typecast_factor typecast_factor_tail\n                | empty\n    \n    typecast_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    input_statement : INPUT LPAREN RPAREN  \n    empty :'
    
_lr_action_items = {'BIRTH':([0,],[2,]),'$end':([1,111,],[0,-1,]),'LBRACE':([2,112,171,262,520,629,659,1083,1201,1253,1297,],[3,170,219,318,748,841,873,1160,1256,1288,1302,]),'FUNCTION':([3,4,6,29,38,39,498,],[-610,17,-4,-610,-3,-5,17,]),'FUNCTION_INT':([3,4,6,29,38,39,498,],[-610,19,-4,-610,-3,-5,19,]),'FUNCTION_FLT':([3,4,6,29,38,39,498,],[-610,20,-4,-610,-3,-5,20,]),'FUNCTION_CHR':([3,4,6,29,38,39,498,],[-610,21,-4,-610,-3,-5,21,]),'FUNCTION_BLN':([3,4,6,29,38,39,498,],[-610,22,-4,-610,-3,-5,22,]),'FUNCTION_STR':([3,4,6,29,38,39,498,],[-610,23,-4,-610,-3,-5,23,]),'FUNCTION_LIST_INT':([3,4,6,29,38,39,498,],[-610,24,-4,-610,-3,-5,24,]),'FUNCTION_LIST_FLT':([3,4,6,29,38,39,498,],[-610,25,-4,-610,-3,-5,25,]),'FUNCTION_LIST_CHR':([3,4,6,29,38,39,498,],[-610,26,-4,-610,-3,-5,26,]),'FUNCTION_LIST_STR':([3,4,6,29,38,39,498,],[-610,27,-4,-610,-3,-5,27,]),'FUNCTION_LIST_BLN':([3,4,6,29,38,39,498,],[-610,28,-4,-610,-3,-5,28,]),'MAIN_CASPER':([3,4,6,14,16,29,38,39,498,713,714,715,],[-610,-610,-4,36,-96,-610,-3,-5,-610,-95,-97,-96,]),'INT':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,256,316,318,320,353,461,558,590,774,841,873,1151,1160,1161,1256,1262,1288,1292,1298,1301,1302,],[9,9,9,214,-171,214,214,9,214,214,214,214,214,214,-321,-322,-323,-410,447,214,-170,-467,-609,-466,-419,-409,214,214,-362,214,214,214,-400,214,-273,-324,-233,214,]),'FLT':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,256,318,320,353,461,558,590,774,841,873,1151,1160,1161,1256,1262,1288,1292,1298,1301,1302,],[10,10,10,215,-171,215,215,10,215,215,215,215,215,215,-321,-322,-323,-410,215,-170,-467,-609,-466,-419,-409,215,215,-362,215,215,215,-400,215,-273,-324,-233,215,]),'BLN':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,256,318,320,353,461,558,590,774,841,873,1151,1160,1161,1256,1262,1288,1292,1298,1301,1302,],[11,11,11,216,-171,216,216,11,216,216,216,216,216,216,-321,-322,-323,-410,216,-170,-467,-609,-466,-419,-409,216,216,-362,216,216,216,-400,216,-273,-324,-233,216,]),'CHR':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,256,318,320,353,461,558,590,774,841,873,1151,1160,1161,1256,1262,1288,1292,1298,1301,1302,],[12,12,12,217,-171,217,217,12,217,217,217,217,217,217,-321,-322,-323,-410,217,-170,-467,-609,-466,-419,-409,217,217,-362,217,217,217,-400,217,-273,-324,-233,217,]),'STR':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,256,318,320,353,461,558,590,774,841,873,1151,1160,1161,1256,1262,1288,1292,1298,1301,1302,],[13,13,13,218,-171,218,218,13,218,218,218,218,218,218,-321,-322,-323,-410,218,-170,-467,-609,-466,-419,-409,218,218,-362,218,218,218,-400,218,-273,-324,-233,218,]),'SEMICOLON':([5,7,30,31,34,40,41,42,43,44,46,47,49,50,52,53,54,55,56,57,62,63,65,66,81,88,89,90,91,92,93,94,107,109,110,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,137,168,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,207,208,212,239,240,264,265,268,282,294,295,296,297,303,305,306,307,309,310,311,312,313,314,321,322,323,324,325,326,327,333,334,335,337,338,339,340,341,342,343,344,351,356,357,358,359,365,366,367,369,370,371,372,373,374,380,381,382,383,389,390,391,393,394,395,396,397,398,399,401,407,422,424,425,426,427,428,429,430,431,433,446,461,462,463,465,471,486,487,488,489,490,491,492,493,494,496,497,499,500,501,502,508,509,510,512,513,514,515,516,517,528,543,544,545,546,547,548,549,550,551,553,554,564,579,580,581,582,583,584,585,586,587,589,591,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,687,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,711,712,722,737,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,798,800,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,860,861,862,863,865,866,867,868,869,870,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,995,996,1015,1030,1031,1032,1033,1034,1035,1036,1037,1038,1040,1041,1042,1043,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1107,1108,1110,1111,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1158,1159,1196,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1222,1251,1252,1259,1260,1263,1287,1299,],[29,-610,-6,-12,-610,-610,-610,-17,-18,-610,-610,-31,-89,-90,-610,-91,-92,-93,-7,-8,-13,-14,-16,-29,-86,-30,-534,-535,-407,-408,-32,-33,-527,-529,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-19,-34,-9,-10,-15,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-610,-11,-610,-528,-531,320,-182,-610,353,-610,-420,-421,-422,-610,-412,-610,-425,-455,-456,-610,-457,-458,-459,-610,-610,-187,-188,-189,-190,-191,-610,-610,-194,-224,-225,-610,-226,-227,-228,-172,-178,-530,-470,-471,-472,-473,-610,-610,-476,-506,-507,-610,-508,-509,-510,558,-536,-537,-538,-610,-610,-541,-571,-572,-610,-573,-574,-575,590,-465,-423,-454,-424,-432,-433,-430,-431,-426,-427,-429,-435,656,-609,-183,-184,-186,-192,-223,-193,-201,-202,-199,-200,-195,-196,-198,-204,-610,716,-117,-118,-119,-610,-610,-122,-152,-153,-610,-154,-155,-156,-474,-505,-475,-483,-484,-481,-482,-477,-478,-480,-486,774,-539,-570,-540,-548,-549,-546,-547,-542,-543,-545,-551,-610,-428,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-197,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-179,-180,-120,-151,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-544,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-464,-460,-461,-462,-463,-440,-441,-442,-443,-444,-445,-446,-447,-448,-449,-450,-451,-452,-453,-411,-610,1014,-610,-610,-327,-357,-358,-610,-359,-360,-361,-185,-229,-230,-231,-232,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,-221,-222,-610,-181,-125,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-469,-511,-512,-513,-514,-491,-492,-493,-494,-495,-496,-497,-498,-499,-500,-501,-502,-503,-504,-610,-576,-577,-578,-579,-556,-557,-558,-559,-560,-561,-562,-563,-564,-565,-566,-567,-568,-569,-610,-434,-437,-325,-356,-326,-334,-335,-332,-333,-328,-329,-331,-337,-401,-402,-403,-203,-206,-157,-158,-159,-160,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-610,-485,-488,-550,-553,-330,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-131,-134,-436,-342,-343,-344,-345,-346,-347,-348,-349,-350,-351,-352,-353,-354,-355,-610,1262,-205,-487,-552,-336,-339,-133,-468,-338,]),'COMMA':([7,34,40,41,42,43,44,46,47,49,50,52,53,54,55,56,57,66,81,83,84,85,86,87,88,89,90,91,92,93,94,107,109,110,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,137,168,169,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,207,208,212,239,240,268,294,295,296,297,303,305,306,307,309,310,311,312,313,314,321,322,323,324,325,326,327,333,334,335,337,338,339,340,341,342,343,344,349,351,377,378,379,381,382,383,389,390,391,393,394,395,396,397,398,407,422,424,425,426,427,428,429,430,431,433,461,471,486,487,488,489,490,491,492,493,494,496,497,564,579,580,581,582,583,584,585,586,587,589,591,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,687,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,711,712,749,750,775,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,800,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,937,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,995,996,1062,1063,1103,1104,1105,1110,1111,1196,1222,1252,],[32,-610,32,64,-17,-18,-610,-610,-31,-89,-90,-610,-91,-92,-93,-7,-8,-29,-86,133,133,-87,-88,-94,-30,-534,-535,-407,-408,-32,-33,-527,-529,-610,32,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-19,-34,-9,-10,221,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-610,-11,266,-528,-531,-610,400,-420,-421,-422,-610,-412,-610,-425,-455,-456,-610,-457,-458,-459,266,464,-187,-188,-189,-190,-191,-610,-610,-194,-224,-225,-610,-226,-227,-228,-172,-178,221,-530,556,-417,-418,-536,-537,-538,-610,-610,-541,-571,-572,-610,-573,-574,-575,-423,-454,-424,-432,-433,-430,-431,-426,-427,-429,-435,-609,-192,-223,-193,-201,-202,-199,-200,-195,-196,-198,-204,-610,-539,-570,-540,-548,-549,-546,-547,-542,-543,-545,-551,400,-428,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,266,-197,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-179,-180,937,-522,556,-544,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-460,-461,-462,-463,-440,-441,-442,-443,-444,-445,-446,-447,-448,-449,-450,-451,-452,-453,-411,-610,-229,-230,-231,-232,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,-221,-222,-610,-181,-610,-576,-577,-578,-579,-556,-557,-558,-559,-560,-561,-562,-563,-564,-565,-566,-567,-568,-569,-610,-434,-437,-203,-206,1193,-523,-524,-550,-553,-436,-205,-552,]),'EQ':([7,34,40,56,57,107,109,110,116,168,169,207,208,212,239,240,251,257,268,321,343,344,351,497,657,687,711,712,912,],[33,-610,33,-7,-8,-527,-529,-610,33,-9,-10,-610,-11,267,-528,-531,286,293,-610,267,-172,-178,-530,-610,871,267,-179,-180,-181,]),'IDENT':([8,9,10,11,12,13,32,33,51,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,108,114,139,140,141,142,143,144,145,146,147,148,149,150,151,152,162,170,210,211,213,214,215,216,217,218,219,238,243,245,246,247,248,249,252,253,254,256,258,266,267,270,271,281,284,285,286,287,288,289,290,291,292,293,299,315,317,318,320,329,347,353,361,385,400,402,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,423,432,434,447,448,461,464,466,468,469,470,472,473,474,475,476,477,478,479,480,481,482,483,484,485,495,504,523,525,526,527,529,530,531,532,533,534,535,536,537,538,539,540,541,542,552,556,558,559,561,562,563,565,566,567,568,569,570,571,572,573,574,575,576,577,578,588,590,592,631,632,633,634,635,636,637,638,639,640,641,642,643,644,654,656,661,662,663,664,665,666,667,668,669,670,671,672,673,674,684,717,719,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,736,746,774,803,804,805,806,807,808,809,810,811,812,813,814,815,816,841,859,871,873,936,994,1014,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1039,1060,1061,1089,1106,1109,1128,1151,1152,1157,1160,1161,1162,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1191,1204,1254,1256,1258,1262,1288,1292,1293,1298,1301,1302,],[34,-24,-25,-26,-27,-28,40,52,103,116,52,52,52,52,52,52,52,52,52,52,52,52,52,52,103,166,172,103,103,103,103,103,103,103,103,103,103,103,103,103,103,206,-610,-171,251,268,-173,-174,-175,-176,-177,-610,166,-610,-610,-610,-610,-610,-610,-321,-322,-323,-410,311,321,339,349,206,352,371,-515,-516,-517,-518,-519,-520,-521,52,395,311,442,456,-610,-170,339,514,-467,371,395,395,52,52,52,52,311,311,311,311,311,311,311,311,311,311,311,311,311,311,52,627,442,657,456,-609,687,52,52,52,52,339,339,339,339,339,339,339,339,339,339,339,339,339,339,709,514,52,52,52,52,371,371,371,371,371,371,371,371,371,371,371,371,371,371,773,52,-466,52,52,52,52,395,395,395,395,395,395,395,395,395,395,395,395,395,395,797,-419,52,442,442,442,442,442,442,442,442,442,442,442,442,442,442,858,867,456,456,456,456,456,456,456,456,456,456,456,456,456,456,890,52,52,52,52,514,514,514,514,514,514,514,514,514,514,514,514,514,514,934,-409,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-610,867,52,-610,1099,627,52,867,867,867,867,867,867,867,867,867,867,867,867,867,867,1150,456,709,1099,773,797,858,-362,890,934,-610,-610,52,52,52,52,1099,1099,1099,1099,1099,1099,1099,1099,1099,1099,1099,1099,1099,1099,1247,395,442,-610,1150,-400,-610,-273,1247,-324,-233,-610,]),'FUNCTION_NAME':([15,17,18,19,20,21,22,23,24,25,26,27,28,170,210,211,219,243,245,246,247,248,249,252,253,254,256,258,267,284,285,286,287,288,289,290,291,293,318,320,347,353,400,402,404,405,406,461,466,468,469,470,523,525,526,527,558,559,561,562,563,590,717,719,720,721,774,841,873,936,1151,1160,1161,1162,1164,1165,1166,1204,1256,1262,1288,1292,1298,1301,1302,],[37,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-610,-171,255,-610,-610,-610,-610,-610,-610,-610,-321,-322,-323,-410,304,304,304,-515,-516,-517,-518,-519,-520,-521,304,-610,-170,304,-467,304,595,595,595,595,-609,595,595,595,595,595,595,595,595,-466,595,595,595,595,-419,595,595,595,595,-409,-610,-610,304,-362,-610,-610,595,595,595,595,304,-610,-400,-610,-273,-324,-233,-610,]),'LBRACKET':([33,34,45,52,103,110,133,207,237,251,267,268,311,339,371,395,442,456,497,514,522,839,867,911,957,977,1012,1059,1082,1099,1193,1219,1286,],[45,58,45,108,162,167,45,238,271,108,45,345,432,495,552,588,654,684,710,746,45,994,1039,1061,1106,1109,1128,1152,1157,1191,45,1258,1293,]),'TILDE':([33,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,293,299,315,317,329,347,361,385,400,402,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,434,448,466,468,469,470,472,473,474,475,476,477,478,479,480,481,482,483,484,485,504,523,525,526,527,529,530,531,532,533,534,535,536,537,538,539,540,541,542,559,561,562,563,565,566,567,568,569,570,571,572,573,574,575,576,577,578,592,631,632,633,634,635,636,637,638,639,640,641,642,643,644,656,661,662,663,664,665,666,667,668,669,670,671,672,673,674,717,719,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,736,803,804,805,806,807,808,809,810,811,812,813,814,815,816,859,936,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1060,1089,1162,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1204,1254,],[48,100,48,48,48,48,48,48,48,48,48,48,48,48,48,48,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,308,336,368,-515,-516,-517,-518,-519,-520,-521,392,308,439,453,336,511,368,392,392,600,600,600,600,308,308,308,308,308,308,308,308,308,308,308,308,308,308,439,453,600,600,600,600,336,336,336,336,336,336,336,336,336,336,336,336,336,336,511,600,600,600,600,368,368,368,368,368,368,368,368,368,368,368,368,368,368,600,600,600,600,392,392,392,392,392,392,392,392,392,392,392,392,392,392,600,439,439,439,439,439,439,439,439,439,439,439,439,439,439,864,453,453,453,453,453,453,453,453,453,453,453,453,453,453,600,600,600,600,511,511,511,511,511,511,511,511,511,511,511,511,511,511,600,600,600,600,600,600,600,600,600,600,600,600,600,600,864,1096,864,864,864,864,864,864,864,864,864,864,864,864,864,864,453,1096,600,600,600,600,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,392,439,]),'LPAREN':([33,36,37,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,250,255,258,259,260,261,263,267,284,285,286,287,288,289,290,291,293,298,299,300,301,302,304,315,317,328,329,330,331,332,347,354,355,360,361,362,363,364,384,385,386,387,388,400,402,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,434,448,466,468,469,470,472,473,474,475,476,477,478,479,480,481,482,483,484,485,503,504,505,506,507,523,525,526,527,529,530,531,532,533,534,535,536,537,538,539,540,541,542,559,561,562,563,565,566,567,568,569,570,571,572,573,574,575,576,577,578,592,595,631,632,633,634,635,636,637,638,639,640,641,642,643,644,656,661,662,663,664,665,666,667,668,669,670,671,672,673,674,717,719,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,736,803,804,805,806,807,808,809,810,811,812,813,814,815,816,859,891,936,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1060,1088,1089,1090,1091,1092,1162,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1198,1204,1254,],[51,60,61,95,51,51,51,51,51,51,51,51,51,51,51,51,51,51,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,281,292,299,315,316,317,319,329,361,-515,-516,-517,-518,-519,-520,-521,385,402,299,404,405,406,423,434,448,466,329,468,469,470,504,521,522,523,361,525,526,527,559,385,561,562,563,385,592,592,592,592,299,299,299,299,299,299,299,299,299,299,299,299,299,299,434,448,592,592,592,592,329,329,329,329,329,329,329,329,329,329,329,329,329,329,717,504,719,720,721,592,592,592,592,361,361,361,361,361,361,361,361,361,361,361,361,361,361,592,592,592,592,385,385,385,385,385,385,385,385,385,385,385,385,385,385,592,801,434,434,434,434,434,434,434,434,434,434,434,434,434,434,859,448,448,448,448,448,448,448,448,448,448,448,448,448,448,592,592,592,592,504,504,504,504,504,504,504,504,504,504,504,504,504,504,592,592,592,592,592,592,592,592,592,592,592,592,592,592,859,1060,1089,859,859,859,859,859,859,859,859,859,859,859,859,859,859,448,1162,1089,1164,1165,1166,592,592,592,592,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1254,385,434,]),'INT_LIT':([33,45,48,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,100,108,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,162,238,258,267,271,284,285,286,287,288,289,290,291,292,293,299,308,315,317,329,336,347,361,368,385,392,400,402,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,423,432,434,439,448,453,466,468,469,470,472,473,474,475,476,477,478,479,480,481,482,483,484,485,495,504,511,521,522,523,525,526,527,529,530,531,532,533,534,535,536,537,538,539,540,541,542,552,556,559,561,562,563,565,566,567,568,569,570,571,572,573,574,575,576,577,578,588,592,600,631,632,633,634,635,636,637,638,639,640,641,642,643,644,654,656,661,662,663,664,665,666,667,668,669,670,671,672,673,674,684,717,719,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,736,746,803,804,805,806,807,808,809,810,811,812,813,814,815,816,859,864,871,936,937,994,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1039,1060,1061,1089,1096,1106,1109,1128,1152,1157,1162,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1191,1193,1204,1254,1258,1293,],[49,49,93,101,49,49,49,49,49,49,49,49,49,49,49,49,49,49,101,159,165,49,101,101,101,101,101,101,101,101,101,101,101,101,101,101,205,165,309,337,205,369,-515,-516,-517,-518,-519,-520,-521,49,393,309,429,440,454,337,492,512,369,549,393,585,393,601,601,601,601,309,309,309,309,309,309,309,309,309,309,309,309,309,309,49,626,440,651,454,681,601,601,601,601,337,337,337,337,337,337,337,337,337,337,337,337,337,337,708,512,743,750,49,601,601,601,601,369,369,369,369,369,369,369,369,369,369,369,369,369,369,772,49,601,601,601,601,393,393,393,393,393,393,393,393,393,393,393,393,393,393,796,601,819,440,440,440,440,440,440,440,440,440,440,440,440,440,440,857,865,454,454,454,454,454,454,454,454,454,454,454,454,454,454,889,601,601,601,601,512,512,512,512,512,512,512,512,512,512,512,512,512,512,933,601,601,601,601,601,601,601,601,601,601,601,601,601,601,865,1036,1042,1097,1105,626,865,865,865,865,865,865,865,865,865,865,865,865,865,865,1149,454,708,1097,1188,772,796,857,889,933,601,601,601,601,1097,1097,1097,1097,1097,1097,1097,1097,1097,1097,1097,1097,1097,1097,1246,49,393,440,1149,1246,]),'FLT_LIT':([33,45,48,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,100,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,292,293,299,308,315,317,329,336,347,361,368,385,392,400,402,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,423,434,439,448,453,466,468,469,470,472,473,474,475,476,477,478,479,480,481,482,483,484,485,504,511,522,523,525,526,527,529,530,531,532,533,534,535,536,537,538,539,540,541,542,556,559,561,562,563,565,566,567,568,569,570,571,572,573,574,575,576,577,578,592,600,631,632,633,634,635,636,637,638,639,640,641,642,643,644,656,661,662,663,664,665,666,667,668,669,670,671,672,673,674,717,719,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,736,803,804,805,806,807,808,809,810,811,812,813,814,815,816,859,864,936,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1060,1089,1096,1162,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1193,1204,1254,],[50,50,94,102,50,50,50,50,50,50,50,50,50,50,50,50,50,50,102,160,50,102,102,102,102,102,102,102,102,102,102,102,102,102,102,310,338,370,-515,-516,-517,-518,-519,-520,-521,50,394,310,430,441,455,338,493,513,370,550,394,586,394,602,602,602,602,310,310,310,310,310,310,310,310,310,310,310,310,310,310,50,441,652,455,682,602,602,602,602,338,338,338,338,338,338,338,338,338,338,338,338,338,338,513,744,50,602,602,602,602,370,370,370,370,370,370,370,370,370,370,370,370,370,370,50,602,602,602,602,394,394,394,394,394,394,394,394,394,394,394,394,394,394,602,820,441,441,441,441,441,441,441,441,441,441,441,441,441,441,866,455,455,455,455,455,455,455,455,455,455,455,455,455,455,602,602,602,602,513,513,513,513,513,513,513,513,513,513,513,513,513,513,602,602,602,602,602,602,602,602,602,602,602,602,602,602,866,1037,1098,866,866,866,866,866,866,866,866,866,866,866,866,866,866,455,1098,1189,602,602,602,602,1098,1098,1098,1098,1098,1098,1098,1098,1098,1098,1098,1098,1098,1098,50,394,441,]),'DAY':([33,45,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,292,293,299,315,317,329,347,361,385,400,402,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,423,434,448,466,468,469,470,472,473,474,475,476,477,478,479,480,481,482,483,484,485,504,522,523,525,526,527,529,530,531,532,533,534,535,536,537,538,539,540,541,542,556,559,561,562,563,565,566,567,568,569,570,571,572,573,574,575,576,577,578,592,631,632,633,634,635,636,637,638,639,640,641,642,643,644,656,661,662,663,664,665,666,667,668,669,670,671,672,673,674,717,719,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,736,803,804,805,806,807,808,809,810,811,812,813,814,815,816,859,936,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1060,1089,1162,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1193,1204,1254,],[53,53,104,53,53,53,53,53,53,53,53,53,53,53,53,53,53,104,53,104,104,104,104,104,104,104,104,104,104,104,104,104,104,312,340,372,-515,-516,-517,-518,-519,-520,-521,53,396,312,443,457,340,515,372,396,396,603,603,603,603,312,312,312,312,312,312,312,312,312,312,312,312,312,312,53,443,457,603,603,603,603,340,340,340,340,340,340,340,340,340,340,340,340,340,340,515,53,603,603,603,603,372,372,372,372,372,372,372,372,372,372,372,372,372,372,53,603,603,603,603,396,396,396,396,396,396,396,396,396,396,396,396,396,396,603,443,443,443,443,443,443,443,443,443,443,443,443,443,443,868,457,457,457,457,457,457,457,457,457,457,457,457,457,457,603,603,603,603,515,515,515,515,515,515,515,515,515,515,515,515,515,515,603,603,603,603,603,603,603,603,603,603,603,603,603,603,868,1100,868,868,868,868,868,868,868,868,868,868,868,868,868,868,457,1100,603,603,603,603,1100,1100,1100,1100,1100,1100,1100,1100,1100,1100,1100,1100,1100,1100,53,396,443,]),'NIGHT':([33,45,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,292,293,299,315,317,329,347,361,385,400,402,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,423,434,448,466,468,469,470,472,473,474,475,476,477,478,479,480,481,482,483,484,485,504,522,523,525,526,527,529,530,531,532,533,534,535,536,537,538,539,540,541,542,556,559,561,562,563,565,566,567,568,569,570,571,572,573,574,575,576,577,578,592,631,632,633,634,635,636,637,638,639,640,641,642,643,644,656,661,662,663,664,665,666,667,668,669,670,671,672,673,674,717,719,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,736,803,804,805,806,807,808,809,810,811,812,813,814,815,816,859,936,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1060,1089,1162,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1193,1204,1254,],[54,54,105,54,54,54,54,54,54,54,54,54,54,54,54,54,54,105,54,105,105,105,105,105,105,105,105,105,105,105,105,105,105,313,341,373,-515,-516,-517,-518,-519,-520,-521,54,397,313,444,458,341,516,373,397,397,604,604,604,604,313,313,313,313,313,313,313,313,313,313,313,313,313,313,54,444,458,604,604,604,604,341,341,341,341,341,341,341,341,341,341,341,341,341,341,516,54,604,604,604,604,373,373,373,373,373,373,373,373,373,373,373,373,373,373,54,604,604,604,604,397,397,397,397,397,397,397,397,397,397,397,397,397,397,604,444,444,444,444,444,444,444,444,444,444,444,444,444,444,869,458,458,458,458,458,458,458,458,458,458,458,458,458,458,604,604,604,604,516,516,516,516,516,516,516,516,516,516,516,516,516,516,604,604,604,604,604,604,604,604,604,604,604,604,604,604,869,1101,869,869,869,869,869,869,869,869,869,869,869,869,869,869,458,1101,604,604,604,604,1101,1101,1101,1101,1101,1101,1101,1101,1101,1101,1101,1101,1101,1101,54,397,444,]),'STR_LIT':([33,45,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,292,293,299,315,317,329,347,361,385,400,402,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,423,434,448,466,468,469,470,472,473,474,475,476,477,478,479,480,481,482,483,484,485,504,522,523,525,526,527,529,530,531,532,533,534,535,536,537,538,539,540,541,542,556,559,561,562,563,565,566,567,568,569,570,571,572,573,574,575,576,577,578,592,631,632,633,634,635,636,637,638,639,640,641,642,643,644,656,661,662,663,664,665,666,667,668,669,670,671,672,673,674,717,719,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,736,803,804,805,806,807,808,809,810,811,812,813,814,815,816,859,936,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1060,1089,1162,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1193,1204,1254,],[55,55,106,55,55,55,55,55,55,55,55,55,55,55,55,55,55,106,55,106,106,106,106,106,106,106,106,106,106,106,106,106,106,314,342,374,-515,-516,-517,-518,-519,-520,-521,55,398,314,445,459,342,517,374,398,398,605,605,605,605,314,314,314,314,314,314,314,314,314,314,314,314,314,314,55,445,459,605,605,605,605,342,342,342,342,342,342,342,342,342,342,342,342,342,342,517,55,605,605,605,605,374,374,374,374,374,374,374,374,374,374,374,374,374,374,55,605,605,605,605,398,398,398,398,398,398,398,398,398,398,398,398,398,398,605,445,445,445,445,445,445,445,445,445,445,445,445,445,445,870,459,459,459,459,459,459,459,459,459,459,459,459,459,459,605,605,605,605,517,517,517,517,517,517,517,517,517,517,517,517,517,517,605,605,605,605,605,605,605,605,605,605,605,605,605,605,870,1102,870,870,870,870,870,870,870,870,870,870,870,870,870,870,459,1102,605,605,605,605,1102,1102,1102,1102,1102,1102,1102,1102,1102,1102,1102,1102,1102,1102,55,398,445,]),'RBRACE':([35,170,209,210,211,219,241,242,243,244,245,246,247,248,249,252,253,254,256,269,275,276,277,278,279,280,318,320,346,348,353,460,461,558,590,716,774,841,873,997,1044,1151,1160,1224,1256,1262,1264,1288,1290,1292,1296,1298,1301,1302,1304,],[59,-610,241,-161,-610,-610,-2,-162,-610,-169,-610,-610,-610,-610,-610,-321,-322,-323,-410,-610,-163,-164,-165,-166,-167,-168,-610,-170,498,-116,-467,686,-609,-466,-419,-115,-409,-610,-610,1127,1151,-362,-610,1264,-610,-400,1292,-610,1298,-273,1301,-324,-233,-610,1305,]),'PLUS':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[67,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,139,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-610,-610,-528,-531,-46,-49,408,-610,-425,-455,-456,-610,-457,-458,-459,472,-610,-194,-224,-225,-610,-226,-227,-228,-530,529,-610,-476,-506,-507,-610,-508,-509,-510,565,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,631,-610,-238,-268,-269,-610,-270,-271,-272,661,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,723,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,803,-610,-585,-604,-605,-606,-607,-608,-428,408,408,408,408,408,408,408,408,408,408,408,408,408,408,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,472,472,472,472,472,472,472,472,472,472,472,472,472,472,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,529,529,529,529,529,529,529,529,529,529,529,529,529,529,-544,565,565,565,565,565,565,565,565,565,565,565,565,565,565,-584,-586,-587,-610,-241,631,631,631,631,631,631,631,631,631,631,631,631,631,631,1016,-610,-327,-357,-358,-610,-359,-360,-361,-368,661,661,661,661,661,661,661,661,661,661,661,661,661,661,-610,-125,723,723,723,723,723,723,723,723,723,723,723,723,723,723,-610,-610,-588,803,803,803,803,803,803,803,803,803,803,803,803,803,803,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1168,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'MINUS':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[68,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,140,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,140,140,140,140,140,140,140,140,140,140,140,140,140,140,-610,-610,-528,-531,-46,-49,409,-610,-425,-455,-456,-610,-457,-458,-459,473,-610,-194,-224,-225,-610,-226,-227,-228,-530,530,-610,-476,-506,-507,-610,-508,-509,-510,566,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,632,-610,-238,-268,-269,-610,-270,-271,-272,662,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,724,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,804,-610,-585,-604,-605,-606,-607,-608,-428,409,409,409,409,409,409,409,409,409,409,409,409,409,409,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,473,473,473,473,473,473,473,473,473,473,473,473,473,473,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,530,530,530,530,530,530,530,530,530,530,530,530,530,530,-544,566,566,566,566,566,566,566,566,566,566,566,566,566,566,-584,-586,-587,-610,-241,632,632,632,632,632,632,632,632,632,632,632,632,632,632,1017,-610,-327,-357,-358,-610,-359,-360,-361,-368,662,662,662,662,662,662,662,662,662,662,662,662,662,662,-610,-125,724,724,724,724,724,724,724,724,724,724,724,724,724,724,-610,-610,-588,804,804,804,804,804,804,804,804,804,804,804,804,804,804,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1169,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'MULTIPLY':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[69,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,141,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,141,141,141,141,141,141,141,141,141,141,141,141,141,141,-610,-610,-528,-531,-46,-49,410,-610,-425,-455,-456,-610,-457,-458,-459,474,-610,-194,-224,-225,-610,-226,-227,-228,-530,531,-610,-476,-506,-507,-610,-508,-509,-510,567,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,633,-610,-238,-268,-269,-610,-270,-271,-272,663,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,725,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,805,-610,-585,-604,-605,-606,-607,-608,-428,410,410,410,410,410,410,410,410,410,410,410,410,410,410,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,474,474,474,474,474,474,474,474,474,474,474,474,474,474,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,531,531,531,531,531,531,531,531,531,531,531,531,531,531,-544,567,567,567,567,567,567,567,567,567,567,567,567,567,567,-584,-586,-587,-610,-241,633,633,633,633,633,633,633,633,633,633,633,633,633,633,1018,-610,-327,-357,-358,-610,-359,-360,-361,-368,663,663,663,663,663,663,663,663,663,663,663,663,663,663,-610,-125,725,725,725,725,725,725,725,725,725,725,725,725,725,725,-610,-610,-588,805,805,805,805,805,805,805,805,805,805,805,805,805,805,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1170,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'DIVISION':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[70,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,142,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,142,142,142,142,142,142,142,142,142,142,142,142,142,142,-610,-610,-528,-531,-46,-49,411,-610,-425,-455,-456,-610,-457,-458,-459,475,-610,-194,-224,-225,-610,-226,-227,-228,-530,532,-610,-476,-506,-507,-610,-508,-509,-510,568,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,634,-610,-238,-268,-269,-610,-270,-271,-272,664,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,726,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,806,-610,-585,-604,-605,-606,-607,-608,-428,411,411,411,411,411,411,411,411,411,411,411,411,411,411,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,475,475,475,475,475,475,475,475,475,475,475,475,475,475,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,532,532,532,532,532,532,532,532,532,532,532,532,532,532,-544,568,568,568,568,568,568,568,568,568,568,568,568,568,568,-584,-586,-587,-610,-241,634,634,634,634,634,634,634,634,634,634,634,634,634,634,1019,-610,-327,-357,-358,-610,-359,-360,-361,-368,664,664,664,664,664,664,664,664,664,664,664,664,664,664,-610,-125,726,726,726,726,726,726,726,726,726,726,726,726,726,726,-610,-610,-588,806,806,806,806,806,806,806,806,806,806,806,806,806,806,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1171,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'MODULO':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[71,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,143,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,143,143,143,143,143,143,143,143,143,143,143,143,143,143,-610,-610,-528,-531,-46,-49,412,-610,-425,-455,-456,-610,-457,-458,-459,476,-610,-194,-224,-225,-610,-226,-227,-228,-530,533,-610,-476,-506,-507,-610,-508,-509,-510,569,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,635,-610,-238,-268,-269,-610,-270,-271,-272,665,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,727,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,807,-610,-585,-604,-605,-606,-607,-608,-428,412,412,412,412,412,412,412,412,412,412,412,412,412,412,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,476,476,476,476,476,476,476,476,476,476,476,476,476,476,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,533,533,533,533,533,533,533,533,533,533,533,533,533,533,-544,569,569,569,569,569,569,569,569,569,569,569,569,569,569,-584,-586,-587,-610,-241,635,635,635,635,635,635,635,635,635,635,635,635,635,635,1020,-610,-327,-357,-358,-610,-359,-360,-361,-368,665,665,665,665,665,665,665,665,665,665,665,665,665,665,-610,-125,727,727,727,727,727,727,727,727,727,727,727,727,727,727,-610,-610,-588,807,807,807,807,807,807,807,807,807,807,807,807,807,807,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1172,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'EXPONENT':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[72,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,144,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,144,144,144,144,144,144,144,144,144,144,144,144,144,144,-610,-610,-528,-531,-46,-49,413,-610,-425,-455,-456,-610,-457,-458,-459,477,-610,-194,-224,-225,-610,-226,-227,-228,-530,534,-610,-476,-506,-507,-610,-508,-509,-510,570,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,636,-610,-238,-268,-269,-610,-270,-271,-272,666,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,728,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,808,-610,-585,-604,-605,-606,-607,-608,-428,413,413,413,413,413,413,413,413,413,413,413,413,413,413,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,477,477,477,477,477,477,477,477,477,477,477,477,477,477,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,534,534,534,534,534,534,534,534,534,534,534,534,534,534,-544,570,570,570,570,570,570,570,570,570,570,570,570,570,570,-584,-586,-587,-610,-241,636,636,636,636,636,636,636,636,636,636,636,636,636,636,1021,-610,-327,-357,-358,-610,-359,-360,-361,-368,666,666,666,666,666,666,666,666,666,666,666,666,666,666,-610,-125,728,728,728,728,728,728,728,728,728,728,728,728,728,728,-610,-610,-588,808,808,808,808,808,808,808,808,808,808,808,808,808,808,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1173,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'GT':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[73,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,145,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,145,145,145,145,145,145,145,145,145,145,145,145,145,145,-610,-610,-528,-531,-46,-49,414,-610,-425,-455,-456,-610,-457,-458,-459,478,-610,-194,-224,-225,-610,-226,-227,-228,-530,535,-610,-476,-506,-507,-610,-508,-509,-510,571,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,637,-610,-238,-268,-269,-610,-270,-271,-272,667,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,729,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,809,-610,-585,-604,-605,-606,-607,-608,-428,414,414,414,414,414,414,414,414,414,414,414,414,414,414,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,478,478,478,478,478,478,478,478,478,478,478,478,478,478,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,535,535,535,535,535,535,535,535,535,535,535,535,535,535,-544,571,571,571,571,571,571,571,571,571,571,571,571,571,571,-584,-586,-587,-610,-241,637,637,637,637,637,637,637,637,637,637,637,637,637,637,1022,-610,-327,-357,-358,-610,-359,-360,-361,-368,667,667,667,667,667,667,667,667,667,667,667,667,667,667,-610,-125,729,729,729,729,729,729,729,729,729,729,729,729,729,729,-610,-610,-588,809,809,809,809,809,809,809,809,809,809,809,809,809,809,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1174,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'LT':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[74,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,146,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,146,146,146,146,146,146,146,146,146,146,146,146,146,146,-610,-610,-528,-531,-46,-49,415,-610,-425,-455,-456,-610,-457,-458,-459,479,-610,-194,-224,-225,-610,-226,-227,-228,-530,536,-610,-476,-506,-507,-610,-508,-509,-510,572,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,638,-610,-238,-268,-269,-610,-270,-271,-272,668,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,730,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,810,-610,-585,-604,-605,-606,-607,-608,-428,415,415,415,415,415,415,415,415,415,415,415,415,415,415,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,479,479,479,479,479,479,479,479,479,479,479,479,479,479,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,536,536,536,536,536,536,536,536,536,536,536,536,536,536,-544,572,572,572,572,572,572,572,572,572,572,572,572,572,572,-584,-586,-587,-610,-241,638,638,638,638,638,638,638,638,638,638,638,638,638,638,1023,-610,-327,-357,-358,-610,-359,-360,-361,-368,668,668,668,668,668,668,668,668,668,668,668,668,668,668,-610,-125,730,730,730,730,730,730,730,730,730,730,730,730,730,730,-610,-610,-588,810,810,810,810,810,810,810,810,810,810,810,810,810,810,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1175,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'EQ_EQ':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[75,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,147,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,147,147,147,147,147,147,147,147,147,147,147,147,147,147,-610,-610,-528,-531,-46,-49,416,-610,-425,-455,-456,-610,-457,-458,-459,480,-610,-194,-224,-225,-610,-226,-227,-228,-530,537,-610,-476,-506,-507,-610,-508,-509,-510,573,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,639,-610,-238,-268,-269,-610,-270,-271,-272,669,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,731,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,811,-610,-585,-604,-605,-606,-607,-608,-428,416,416,416,416,416,416,416,416,416,416,416,416,416,416,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,480,480,480,480,480,480,480,480,480,480,480,480,480,480,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,537,537,537,537,537,537,537,537,537,537,537,537,537,537,-544,573,573,573,573,573,573,573,573,573,573,573,573,573,573,-584,-586,-587,-610,-241,639,639,639,639,639,639,639,639,639,639,639,639,639,639,1024,-610,-327,-357,-358,-610,-359,-360,-361,-368,669,669,669,669,669,669,669,669,669,669,669,669,669,669,-610,-125,731,731,731,731,731,731,731,731,731,731,731,731,731,731,-610,-610,-588,811,811,811,811,811,811,811,811,811,811,811,811,811,811,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1176,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'GT_EQ':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[76,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,148,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,148,148,148,148,148,148,148,148,148,148,148,148,148,148,-610,-610,-528,-531,-46,-49,417,-610,-425,-455,-456,-610,-457,-458,-459,481,-610,-194,-224,-225,-610,-226,-227,-228,-530,538,-610,-476,-506,-507,-610,-508,-509,-510,574,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,640,-610,-238,-268,-269,-610,-270,-271,-272,670,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,732,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,812,-610,-585,-604,-605,-606,-607,-608,-428,417,417,417,417,417,417,417,417,417,417,417,417,417,417,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,481,481,481,481,481,481,481,481,481,481,481,481,481,481,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,538,538,538,538,538,538,538,538,538,538,538,538,538,538,-544,574,574,574,574,574,574,574,574,574,574,574,574,574,574,-584,-586,-587,-610,-241,640,640,640,640,640,640,640,640,640,640,640,640,640,640,1025,-610,-327,-357,-358,-610,-359,-360,-361,-368,670,670,670,670,670,670,670,670,670,670,670,670,670,670,-610,-125,732,732,732,732,732,732,732,732,732,732,732,732,732,732,-610,-610,-588,812,812,812,812,812,812,812,812,812,812,812,812,812,812,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1177,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1025,1025,1025,1025,1025,1025,1025,1025,1025,1025,1025,1025,1025,1025,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'LT_EQ':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[77,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,149,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,149,149,149,149,149,149,149,149,149,149,149,149,149,149,-610,-610,-528,-531,-46,-49,418,-610,-425,-455,-456,-610,-457,-458,-459,482,-610,-194,-224,-225,-610,-226,-227,-228,-530,539,-610,-476,-506,-507,-610,-508,-509,-510,575,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,641,-610,-238,-268,-269,-610,-270,-271,-272,671,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,733,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,813,-610,-585,-604,-605,-606,-607,-608,-428,418,418,418,418,418,418,418,418,418,418,418,418,418,418,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,482,482,482,482,482,482,482,482,482,482,482,482,482,482,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,539,539,539,539,539,539,539,539,539,539,539,539,539,539,-544,575,575,575,575,575,575,575,575,575,575,575,575,575,575,-584,-586,-587,-610,-241,641,641,641,641,641,641,641,641,641,641,641,641,641,641,1026,-610,-327,-357,-358,-610,-359,-360,-361,-368,671,671,671,671,671,671,671,671,671,671,671,671,671,671,-610,-125,733,733,733,733,733,733,733,733,733,733,733,733,733,733,-610,-610,-588,813,813,813,813,813,813,813,813,813,813,813,813,813,813,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1178,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'NOT_EQ':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[78,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,150,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,150,150,150,150,150,150,150,150,150,150,150,150,150,150,-610,-610,-528,-531,-46,-49,419,-610,-425,-455,-456,-610,-457,-458,-459,483,-610,-194,-224,-225,-610,-226,-227,-228,-530,540,-610,-476,-506,-507,-610,-508,-509,-510,576,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,642,-610,-238,-268,-269,-610,-270,-271,-272,672,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,734,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,814,-610,-585,-604,-605,-606,-607,-608,-428,419,419,419,419,419,419,419,419,419,419,419,419,419,419,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,483,483,483,483,483,483,483,483,483,483,483,483,483,483,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,540,540,540,540,540,540,540,540,540,540,540,540,540,540,-544,576,576,576,576,576,576,576,576,576,576,576,576,576,576,-584,-586,-587,-610,-241,642,642,642,642,642,642,642,642,642,642,642,642,642,642,1027,-610,-327,-357,-358,-610,-359,-360,-361,-368,672,672,672,672,672,672,672,672,672,672,672,672,672,672,-610,-125,734,734,734,734,734,734,734,734,734,734,734,734,734,734,-610,-610,-588,814,814,814,814,814,814,814,814,814,814,814,814,814,814,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1179,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1027,1027,1027,1027,1027,1027,1027,1027,1027,1027,1027,1027,1027,1027,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1179,1179,1179,1179,1179,1179,1179,1179,1179,1179,1179,1179,1179,1179,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'AND':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[79,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,151,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,151,151,151,151,151,151,151,151,151,151,151,151,151,151,-610,-610,-528,-531,-46,-49,420,-610,-425,-455,-456,-610,-457,-458,-459,484,-610,-194,-224,-225,-610,-226,-227,-228,-530,541,-610,-476,-506,-507,-610,-508,-509,-510,577,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,643,-610,-238,-268,-269,-610,-270,-271,-272,673,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,735,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,815,-610,-585,-604,-605,-606,-607,-608,-428,420,420,420,420,420,420,420,420,420,420,420,420,420,420,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,484,484,484,484,484,484,484,484,484,484,484,484,484,484,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,541,541,541,541,541,541,541,541,541,541,541,541,541,541,-544,577,577,577,577,577,577,577,577,577,577,577,577,577,577,-584,-586,-587,-610,-241,643,643,643,643,643,643,643,643,643,643,643,643,643,643,1028,-610,-327,-357,-358,-610,-359,-360,-361,-368,673,673,673,673,673,673,673,673,673,673,673,673,673,673,-610,-125,735,735,735,735,735,735,735,735,735,735,735,735,735,735,-610,-610,-588,815,815,815,815,815,815,815,815,815,815,815,815,815,815,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1180,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1028,1028,1028,1028,1028,1028,1028,1028,1028,1028,1028,1028,1028,1028,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1180,1180,1180,1180,1180,1180,1180,1180,1180,1180,1180,1180,1180,1180,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'OR':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,306,307,309,310,311,312,313,314,333,334,335,337,338,339,340,341,342,351,365,366,367,369,370,371,372,373,374,389,390,391,393,394,395,396,397,398,424,425,426,427,428,429,430,431,433,436,437,438,440,441,442,443,444,445,450,451,452,454,455,456,457,458,459,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,519,544,545,546,547,548,549,550,551,553,580,581,582,583,584,585,586,587,589,597,598,599,601,602,603,604,605,606,610,611,612,613,614,615,616,617,618,619,620,621,622,623,646,647,648,649,650,651,652,653,655,676,677,678,679,680,681,682,683,685,689,693,694,695,696,697,698,699,700,701,702,703,704,705,706,738,739,740,741,742,743,744,745,747,753,757,758,759,760,761,762,763,764,765,766,767,768,769,770,777,781,782,783,784,785,786,787,788,789,790,791,792,793,794,818,819,820,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,957,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,1012,1031,1032,1033,1034,1035,1036,1037,1038,1040,1059,1062,1063,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1129,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190,1192,1196,1219,1222,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[80,-610,-31,-89,-90,-610,-91,-92,-93,-30,-534,-535,-407,-408,-32,-33,152,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-610,-610,-528,-531,-46,-49,421,-610,-425,-455,-456,-610,-457,-458,-459,485,-610,-194,-224,-225,-610,-226,-227,-228,-530,542,-610,-476,-506,-507,-610,-508,-509,-510,578,-610,-541,-571,-572,-610,-573,-574,-575,-424,-432,-433,-430,-431,-426,-427,-429,-435,644,-610,-238,-268,-269,-610,-270,-271,-272,674,-610,-365,-395,-396,-610,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,736,-610,-122,-152,-153,-610,-154,-155,-156,-48,-475,-483,-484,-481,-482,-477,-478,-480,-486,-540,-548,-549,-546,-547,-542,-543,-545,-551,816,-610,-585,-604,-605,-606,-607,-608,-428,421,421,421,421,421,421,421,421,421,421,421,421,421,421,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,485,485,485,485,485,485,485,485,485,485,485,485,485,485,-121,-129,-130,-127,-128,-123,-124,-126,-132,-479,542,542,542,542,542,542,542,542,542,542,542,542,542,542,-544,578,578,578,578,578,578,578,578,578,578,578,578,578,578,-584,-586,-587,-610,-241,644,644,644,644,644,644,644,644,644,644,644,644,644,644,1029,-610,-327,-357,-358,-610,-359,-360,-361,-368,674,674,674,674,674,674,674,674,674,674,674,674,674,674,-610,-125,736,736,736,736,736,736,736,736,736,736,736,736,736,736,-610,-610,-588,816,816,816,816,816,816,816,816,816,816,816,816,816,816,-434,-437,-610,-326,-334,-335,-332,-333,-328,-329,-331,-337,-610,-203,-206,-610,1181,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-247,-250,-330,1029,1029,1029,1029,1029,1029,1029,1029,1029,1029,1029,1029,1029,1029,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-436,-610,-205,-283,1181,1181,1181,1181,1181,1181,1181,1181,1181,1181,1181,1181,1181,1181,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'CHR_LIT':([45,133,292,423,522,556,1193,],[87,87,87,87,87,87,87,]),'PLUS_PLUS':([46,52,98,103,107,109,161,163,207,237,239,240,272,273,306,311,334,339,351,366,371,390,395,431,433,437,442,451,456,494,496,509,514,519,551,553,587,589,598,653,655,683,685,745,747,839,862,867,911,957,977,995,996,1012,1038,1040,1059,1062,1063,1082,1094,1099,1107,1108,1110,1111,1129,1130,1133,1153,1154,1158,1159,1190,1192,1196,1219,1222,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[91,-610,157,-610,-527,-529,-41,-47,-610,-610,-528,-531,-46,-49,427,-610,490,-610,-530,547,-610,583,-610,-429,-435,649,-610,679,-610,-198,-204,741,-610,-48,-480,-486,-545,-551,91,-242,-248,-369,-375,-126,-132,-610,1034,-610,-610,-610,-610,-434,-437,-610,-331,-337,-610,-203,-206,-610,1186,-610,-485,-488,-550,-553,-247,-250,91,-374,-377,-131,-134,-284,-290,-436,-610,-205,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'MINUS_MINUS':([46,52,98,103,107,109,161,163,207,237,239,240,272,273,306,311,334,339,351,366,371,390,395,431,433,437,442,451,456,494,496,509,514,519,551,553,587,589,598,653,655,683,685,745,747,839,862,867,911,957,977,995,996,1012,1038,1040,1059,1062,1063,1082,1094,1099,1107,1108,1110,1111,1129,1130,1133,1153,1154,1158,1159,1190,1192,1196,1219,1222,1251,1252,1255,1259,1260,1261,1263,1286,1294,1295,1299,1303,],[92,-610,158,-610,-527,-529,-41,-47,-610,-610,-528,-531,-46,-49,428,-610,491,-610,-530,548,-610,584,-610,-429,-435,650,-610,680,-610,-198,-204,742,-610,-48,-480,-486,-545,-551,92,-242,-248,-369,-375,-126,-132,-610,1035,-610,-610,-610,-610,-434,-437,-610,-331,-337,-610,-203,-206,-610,1187,-610,-485,-488,-550,-553,-247,-250,92,-374,-377,-131,-134,-284,-290,-436,-610,-205,-487,-552,-249,-336,-339,-376,-133,-610,-289,-292,-338,-291,]),'RBRACKET':([49,50,53,54,55,58,82,83,84,85,86,87,131,132,134,135,164,165,166,167,188,204,205,206,274,345,350,625,626,627,707,708,709,710,771,772,773,795,796,797,856,857,858,888,889,890,932,933,934,1126,1148,1149,1150,1156,1194,1195,1200,1220,1223,1245,1246,1247,1291,1300,],[-89,-90,-91,-92,-93,110,131,-610,-610,-87,-88,-94,-19,-20,-23,-21,207,-532,-533,208,-22,237,-50,-51,351,497,519,839,-438,-439,911,-207,-208,912,957,-489,-490,977,-554,-555,1012,-251,-252,1059,-378,-379,1082,-135,-136,1196,1219,-340,-341,1222,1251,1252,1255,1261,1263,1286,-293,-294,1299,1303,]),'RPAREN':([49,50,52,53,54,55,60,61,83,84,85,86,87,89,90,91,92,96,97,98,99,101,102,103,104,105,106,107,109,113,115,131,132,134,135,136,138,153,154,155,156,157,158,159,160,161,163,172,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,272,273,292,303,305,306,307,309,310,311,312,313,314,319,333,334,335,337,338,339,340,341,342,349,351,352,365,366,367,369,370,371,372,373,374,375,376,377,378,379,381,382,383,389,390,391,393,394,395,396,397,398,403,407,422,423,424,425,426,427,428,429,430,431,433,435,436,437,438,440,441,442,443,444,445,449,450,451,452,454,455,456,457,458,459,461,467,471,486,487,488,489,490,491,492,493,494,496,508,509,510,512,513,514,515,516,517,518,519,524,528,543,544,545,546,547,548,549,550,551,553,555,557,560,564,579,580,581,582,583,584,585,586,587,589,593,594,596,597,598,599,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,628,630,645,646,647,648,649,650,651,652,653,655,658,660,675,676,677,678,679,680,681,682,683,685,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,718,722,737,738,739,740,741,742,743,744,745,747,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,799,801,802,817,818,819,820,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,863,865,866,867,868,869,870,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,996,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1015,1030,1031,1032,1033,1034,1035,1036,1037,1038,1040,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1062,1063,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1093,1094,1095,1097,1098,1099,1100,1101,1102,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1129,1130,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1153,1154,1155,1158,1159,1163,1167,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1196,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1248,1249,1250,1251,1252,1255,1257,1259,1260,1261,1263,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1289,1294,1295,1299,1303,],[-89,-90,-610,-91,-92,-93,112,-610,-610,-610,-87,-88,-94,-534,-535,-407,-408,137,-610,-610,-37,-67,-68,-610,-69,-70,-71,-527,-529,171,-112,-19,-20,-23,-21,189,-35,-66,-36,-44,-45,-42,-43,-38,-39,-41,-47,-610,-22,-40,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-111,-114,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-610,-528,-531,-46,-49,-610,-610,-412,-610,-425,-455,-456,-610,-457,-458,-459,461,-610,-610,-194,-224,-225,-610,-226,-227,-228,-610,-530,520,-610,-610,-476,-506,-507,-610,-508,-509,-510,554,-413,-610,-417,-418,-536,-537,-538,-610,-610,-541,-571,-572,-610,-573,-574,-575,606,-423,-454,-610,-424,-432,-433,-430,-431,-426,-427,-429,-435,629,-610,-610,-238,-268,-269,-610,-270,-271,-272,659,-610,-610,-365,-395,-396,-610,-397,-398,-399,-609,689,-192,-223,-193,-201,-202,-199,-200,-195,-196,-198,-204,-610,-610,-122,-152,-153,-610,-154,-155,-156,-113,-48,753,-474,-505,-475,-483,-484,-481,-482,-477,-478,-480,-486,-414,-416,777,-539,-570,-540,-548,-549,-546,-547,-542,-543,-545,-551,800,-580,-582,-610,-610,-585,-604,-605,-606,-607,-608,-428,821,822,823,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,838,840,-236,-267,-237,-245,-246,-243,-244,-239,-240,-242,-248,872,-363,-394,-364,-372,-373,-370,-371,-366,-367,-369,-375,893,-197,894,895,896,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,914,-120,-151,-121,-129,-130,-127,-128,-123,-124,-126,-132,938,939,-479,940,941,942,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,959,-544,960,961,962,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,978,979,-583,-603,-584,-586,-587,-440,-441,-442,-443,-444,-445,-446,-447,-448,-449,-450,-451,-452,-453,-411,-610,-241,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-327,-357,-358,-610,-359,-360,-361,-368,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,-221,-222,-610,1064,-125,1065,1066,1067,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-491,-492,-493,-494,-495,-496,-497,-498,-499,-500,-501,-502,-503,-504,-610,-415,-576,-577,-578,-579,-556,-557,-558,-559,-560,-561,-562,-563,-564,-565,-566,-567,-568,-569,-610,-588,-581,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-434,-437,-253,-254,-255,-256,-257,-258,-259,-260,-261,-262,-263,-264,-265,-266,-610,1131,-325,-356,-326,-334,-335,-332,-333,-328,-329,-331,-337,-380,-381,-382,-383,-384,-385,-386,-387,-388,-389,-390,-391,-392,-393,-610,-203,-206,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-610,-610,-610,-280,-310,-311,-610,-312,-313,-314,-485,-488,-550,-553,-589,-590,-591,-592,-593,-594,-595,-596,-597,-598,-599,-600,-601,-602,-247,-250,-330,1201,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-374,-377,1221,-131,-134,1227,-278,-309,-279,-287,-288,-285,-286,-281,-282,-284,-290,-610,-436,-404,-405,-342,-343,-344,-345,-346,-347,-348,-349,-350,-351,-352,-353,-354,-355,-610,-205,1268,-283,1269,1270,1271,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,1287,-525,-526,-487,-552,-249,-406,-336,-339,-376,-133,-295,-296,-297,-298,-299,-300,-301,-302,-303,-304,-305,-306,-307,-308,-610,1297,-289,-292,-338,-291,]),'PLUS_EQ':([52,107,109,207,239,240,251,351,1133,],[-610,-527,-529,-610,-528,-531,287,-530,287,]),'MINUS_EQ':([52,107,109,207,239,240,251,351,1133,],[-610,-527,-529,-610,-528,-531,288,-530,288,]),'MUL_EQ':([52,107,109,207,239,240,251,351,1133,],[-610,-527,-529,-610,-528,-531,289,-530,289,]),'DIV_EQ':([52,107,109,207,239,240,251,351,1133,],[-610,-527,-529,-610,-528,-531,290,-530,290,]),'MOD_EQ':([52,107,109,207,239,240,251,351,1133,],[-610,-527,-529,-610,-528,-531,291,-530,291,]),'GHOST':([59,],[111,]),'SWAP':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,318,320,353,461,558,590,774,841,873,1151,1160,1161,1256,1262,1288,1292,1298,1301,1302,],[-610,-171,250,-610,-610,-610,-610,-610,-610,-610,-321,-322,-323,-410,-610,-170,-467,-609,-466,-419,-409,-610,-610,-362,-610,-610,-610,-400,-610,-273,-324,-233,-610,]),'DISPLAY':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,318,320,353,461,558,590,774,841,873,1151,1160,1161,1256,1262,1288,1292,1298,1301,1302,],[-610,-171,258,-610,-610,-610,-610,-610,-610,-610,-321,-322,-323,-410,-610,-170,-467,-609,-466,-419,-409,-610,-610,-362,-610,-610,-610,-400,-610,-273,-324,-233,-610,]),'CHECK':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,318,320,353,461,558,590,774,841,873,1151,1160,1161,1256,1262,1288,1292,1298,1301,1302,],[-610,-171,259,-610,-610,-610,-610,-610,-610,-610,-321,-322,-323,-410,-610,-170,-467,-609,-466,-419,-409,-610,-610,-362,-610,-610,-610,-400,-610,-273,-324,-233,-610,]),'FOR':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,318,320,353,461,558,590,774,841,873,1151,1160,1161,1256,1262,1288,1292,1298,1301,1302,],[-610,-171,260,-610,-610,-610,-610,-610,-610,-610,-321,-322,-323,-410,-610,-170,-467,-609,-466,-419,-409,-610,-610,-362,-610,-610,-610,-400,-610,-273,-324,-233,-610,]),'UNTIL':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,318,320,353,461,558,590,686,774,841,873,1151,1160,1161,1256,1262,1288,1292,1298,1301,1302,],[-610,-171,261,-610,-610,-610,-610,-610,-610,-610,-321,-322,-323,-410,-610,-170,-467,-609,-466,-419,891,-409,-610,-610,-362,-610,-610,-610,-400,-610,-273,-324,-233,-610,]),'REPEAT':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,318,320,353,461,558,590,774,841,873,1151,1160,1161,1256,1262,1288,1292,1298,1301,1302,],[-610,-171,262,-610,-610,-610,-610,-610,-610,-610,-321,-322,-323,-410,-610,-170,-467,-609,-466,-419,-409,-610,-610,-362,-610,-610,-610,-400,-610,-273,-324,-233,-610,]),'INPUT':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,258,267,284,285,286,287,288,289,290,291,293,318,320,347,353,400,402,404,405,406,461,466,468,469,470,523,525,526,527,558,559,561,562,563,590,717,719,720,721,774,841,873,936,1151,1160,1161,1162,1164,1165,1166,1204,1256,1262,1288,1292,1298,1301,1302,],[-610,-171,263,-610,-610,-610,-610,-610,-610,-610,-321,-322,-323,-410,263,263,263,-515,-516,-517,-518,-519,-520,-521,263,-610,-170,263,-467,263,263,263,263,263,-609,263,263,263,263,263,263,263,263,-466,263,263,263,263,-419,263,263,263,263,-409,-610,-610,263,-362,-610,-610,263,263,263,263,263,-610,-400,-610,-273,-324,-233,-610,]),'REVIVE':([210,211,219,242,243,244,245,246,247,248,249,252,253,254,256,269,275,276,277,278,279,280,320,353,461,558,590,774,1151,1262,1292,1298,1301,],[-161,-610,-610,-162,-610,-169,-610,-610,-610,-610,-610,-321,-322,-323,-410,347,-163,-164,-165,-166,-167,-168,-170,-467,-609,-466,-419,-409,-362,-400,-273,-324,-233,]),'SHIFT':([210,211,242,243,244,245,246,247,248,249,252,253,254,256,275,276,277,278,279,280,320,353,461,558,590,748,774,1151,1161,1225,1262,1292,1298,1301,],[-161,-610,-162,-610,-169,-610,-610,-610,-610,-610,-321,-322,-323,-410,-163,-164,-165,-166,-167,-168,-170,-467,-609,-466,-419,936,-409,-362,-610,936,-400,-273,-324,-233,]),'OTHERWISE':([210,211,242,243,244,245,246,247,248,249,252,253,254,256,275,276,277,278,279,280,320,353,461,558,590,774,935,1127,1151,1161,1197,1199,1225,1262,1265,1266,1267,1292,1298,1301,1305,1306,],[-161,-610,-162,-610,-169,-610,-610,-610,-610,-610,-321,-322,-323,-410,-163,-164,-165,-166,-167,-168,-170,-467,-609,-466,-419,-409,1083,-610,-362,-610,1253,-235,-610,-400,-274,-319,-320,-273,-324,-233,-610,-234,]),'DOT':([251,],[283,]),'CONVERT_TO_INT':([258,267,284,285,286,287,288,289,290,291,293,347,400,936,1204,],[298,328,360,-515,-516,-517,-518,-519,-520,-521,384,503,384,1088,384,]),'CONVERT_TO_FLT':([258,267,284,285,286,287,288,289,290,291,293,347,400,936,1204,],[300,330,362,-515,-516,-517,-518,-519,-520,-521,386,505,386,1090,386,]),'CONVERT_TO_BLN':([258,267,284,285,286,287,288,289,290,291,293,347,400,936,1204,],[301,331,363,-515,-516,-517,-518,-519,-520,-521,387,506,387,1091,387,]),'CONVERT_TO_STR':([258,267,284,285,286,287,288,289,290,291,293,347,400,936,1204,],[302,332,364,-515,-516,-517,-518,-519,-520,-521,388,507,388,1092,388,]),'SPLICE':([283,],[354,]),'PUSH':([283,],[355,]),'COLON':([305,461,838,1084,1085,1086,1087,1093,1094,1095,1097,1098,1099,1100,1101,1102,1167,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1227,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1294,1295,1303,],[-412,-609,-411,1161,-275,-276,-277,-610,-610,-280,-310,-311,-610,-312,-313,-314,-278,-309,-279,-287,-288,-285,-286,-281,-282,-284,-290,-283,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-610,-315,-316,-317,-318,-295,-296,-297,-298,-299,-300,-301,-302,-303,-304,-305,-306,-307,-308,-610,-289,-292,-291,]),'OTHERWISE_CHECK':([1127,1305,],[1198,1198,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_dec':([3,29,],[4,39,]),'global_statement':([3,29,],[5,5,]),'empty':([3,4,7,29,34,40,41,44,46,52,61,83,84,97,98,103,110,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,170,172,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,211,212,219,237,243,245,246,247,248,249,251,268,269,292,294,303,306,311,318,321,322,333,334,339,349,365,366,371,377,389,390,395,423,436,437,442,450,451,456,497,498,508,509,514,591,597,598,610,611,612,613,614,615,616,617,618,619,620,621,622,623,687,693,694,695,696,697,698,699,700,701,702,703,704,705,706,757,758,759,760,761,762,763,764,765,766,767,768,769,770,775,781,782,783,784,785,786,787,788,789,790,791,792,793,794,839,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,861,862,867,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,911,918,919,920,921,922,923,924,925,926,927,928,929,930,931,937,957,977,980,981,982,983,984,985,986,987,988,989,990,991,992,993,1012,1059,1082,1093,1094,1099,1127,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1160,1161,1193,1219,1225,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1256,1286,1288,1302,1305,],[6,16,31,6,57,31,65,81,89,109,115,134,134,153,155,163,169,31,81,81,81,81,81,81,81,81,81,81,81,81,81,81,210,222,153,153,153,153,153,153,153,153,153,153,153,153,153,153,240,210,265,210,273,210,210,210,210,210,210,109,344,348,376,401,422,425,433,210,265,465,486,488,496,222,543,545,553,557,579,581,589,376,645,647,655,675,677,685,712,715,737,739,747,401,817,89,422,422,422,422,422,422,422,422,422,422,422,422,422,422,265,486,486,486,486,486,486,486,486,486,486,486,486,486,486,543,543,543,543,543,543,543,543,543,543,543,543,543,543,557,579,579,579,579,579,579,579,579,579,579,579,579,579,579,996,210,645,645,645,645,645,645,645,645,645,645,645,645,645,645,1030,1032,1040,210,675,675,675,675,675,675,675,675,675,675,675,675,675,675,1063,737,737,737,737,737,737,737,737,737,737,737,737,737,737,1104,1108,1111,817,817,817,817,817,817,817,817,817,817,817,817,817,817,1130,1154,1159,1182,1184,1192,1199,1030,1030,1030,1030,1030,1030,1030,1030,1030,1030,1030,1030,1030,1030,210,210,1249,1260,1267,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,210,1295,210,210,1199,]),'var_statement':([3,29,],[7,7,]),'data_type':([3,29,61,221,],[8,8,114,270,]),'function_statements':([4,498,],[14,714,]),'ret_type':([4,498,],[15,15,]),'function_dtype':([4,498,],[18,18,]),'global_statement_tail':([7,40,116,],[30,62,173,]),'main_function':([14,],[35,]),'global_tail':([29,],[38,]),'global_value':([33,],[41,]),'expression':([33,],[42,]),'list_value':([33,45,133,267,522,1193,],[43,84,84,324,84,84,]),'factor':([33,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[44,117,118,119,120,121,122,123,124,125,126,127,128,129,130,]),'var_call':([33,67,68,69,70,71,72,73,74,75,76,77,78,79,80,211,292,402,404,405,406,423,466,468,469,470,523,525,526,527,556,559,561,562,563,592,717,719,720,721,803,804,805,806,807,808,809,810,811,812,813,814,815,816,871,1014,1162,1164,1165,1166,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,257,379,598,598,598,598,379,598,598,598,598,598,598,598,598,379,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,1043,1133,598,598,598,598,]),'literal1':([33,45,67,68,69,70,71,72,73,74,75,76,77,78,79,80,133,292,423,522,556,1193,],[47,85,47,47,47,47,47,47,47,47,47,47,47,47,47,47,85,85,85,85,85,85,]),'list_dec':([34,],[56,]),'global_statement_tail2':([41,],[63,]),'factor_tail':([44,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[66,174,175,176,177,178,179,180,181,182,183,184,185,186,187,]),'list_element':([45,133,522,1193,],[82,188,751,1250,]),'literal':([45,133,292,423,522,556,1193,],[83,83,378,378,83,378,83,]),'literal2':([45,133,292,423,522,556,1193,],[86,86,86,86,86,86,86,]),'postfix':([46,598,],[88,818,]),'postfix_op':([46,598,1133,],[90,90,1203,]),'factor_expression':([51,95,],[96,136,]),'factor_expression_factor':([51,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,],[97,97,190,191,192,193,194,195,196,197,198,199,200,201,202,203,]),'factor_var_call':([51,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'factor_expression1':([51,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'list_index':([52,251,],[107,107,]),'parameters':([61,],[113,]),'element_tail':([83,84,],[132,135,]),'factor_expression_tail':([97,190,191,192,193,194,195,196,197,198,199,200,201,202,203,],[138,223,224,225,226,227,228,229,230,231,232,233,234,235,236,]),'factor_postfix':([98,],[154,]),'factor_postfix_op':([98,],[156,]),'factor_list_index':([103,],[161,]),'index':([108,238,],[164,274,]),'_2d_list':([110,],[168,]),'factor_index':([162,271,],[204,350,]),'statements':([170,211,219,243,245,246,247,248,249,318,841,873,1160,1161,1256,1288,1302,],[209,244,269,275,276,277,278,279,280,460,997,1044,1224,1225,1290,1296,1304,]),'local_dec':([170,211,219,243,245,246,247,248,249,318,841,873,1160,1161,1256,1288,1302,],[211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,]),'local_var_statement':([170,211,219,243,245,246,247,248,249,318,841,873,1160,1161,1256,1288,1302,],[212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,]),'local_data_type':([170,211,219,243,245,246,247,248,249,318,841,873,1160,1161,1256,1288,1302,],[213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,]),'parameters_tail':([172,349,],[220,518,]),'list_index2':([207,],[239,]),'statements_tail':([211,],[242,]),'switch_statement':([211,],[243,]),'loop_statement':([211,],[245,]),'function_call_statement':([211,],[246,]),'assignment_statement':([211,],[247,]),'output_statement':([211,],[248,]),'conditional_statement':([211,],[249,]),'for_loop':([211,],[252,]),'until_loop':([211,],[253,]),'repeat_until':([211,],[254,]),'input_statement':([211,258,267,284,293,347,400,402,404,405,406,466,468,469,470,523,525,526,527,559,561,562,563,717,719,720,721,936,1162,1164,1165,1166,1204,],[256,305,305,305,305,305,305,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,305,596,596,596,596,305,]),'local_dec_tail':([212,321,687,],[264,462,892,]),'factor_list_index2':([237,],[272,]),'assign_tail':([251,],[282,]),'assign_op':([251,],[284,]),'compound_op':([251,1133,],[285,1204,]),'output_value':([258,],[294,]),'output_type_cast':([258,],[295,]),'output_expression':([258,299,],[296,403,]),'function_call':([258,267,284,293,347,400,936,1204,],[297,327,359,383,502,383,1087,383,]),'output_factor':([258,299,408,409,410,411,412,413,414,415,416,417,418,419,420,421,],[303,303,610,611,612,613,614,615,616,617,618,619,620,621,622,623,]),'output_var_call':([258,299,408,409,410,411,412,413,414,415,416,417,418,419,420,421,],[306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,]),'output_factor1':([258,299,408,409,410,411,412,413,414,415,416,417,418,419,420,421,],[307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,]),'local_value':([267,],[322,]),'local_value_value':([267,],[323,]),'local_type_cast':([267,],[325,]),'local_expression':([267,329,],[326,467,]),'local_factor':([267,329,472,473,474,475,476,477,478,479,480,481,482,483,484,485,],[333,333,693,694,695,696,697,698,699,700,701,702,703,704,705,706,]),'local_var_call':([267,329,472,473,474,475,476,477,478,479,480,481,482,483,484,485,],[334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,]),'local_factor1':([267,329,472,473,474,475,476,477,478,479,480,481,482,483,484,485,],[335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,]),'local_list_dec':([268,],[343,]),'revive':([269,],[346,]),'assign_value':([284,],[356,]),'assign_type_cast':([284,],[357,]),'assign_expression':([284,361,],[358,524,]),'assign_factor':([284,361,529,530,531,532,533,534,535,536,537,538,539,540,541,542,],[365,365,757,758,759,760,761,762,763,764,765,766,767,768,769,770,]),'assign_var_call':([284,361,529,530,531,532,533,534,535,536,537,538,539,540,541,542,],[366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,]),'assign_factor1':([284,361,529,530,531,532,533,534,535,536,537,538,539,540,541,542,],[367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,]),'arguments':([292,423,],[375,624,]),'arg_value':([292,423,556,],[377,377,775,]),'value':([293,400,1204,],[380,591,1257,]),'type_cast':([293,400,1204,],[381,381,381,]),'value_expression':([293,385,400,1204,],[382,560,382,382,]),'value_factor':([293,385,400,565,566,567,568,569,570,571,572,573,574,575,576,577,578,1204,],[389,389,389,781,782,783,784,785,786,787,788,789,790,791,792,793,794,389,]),'value_var_call':([293,385,400,565,566,567,568,569,570,571,572,573,574,575,576,577,578,1204,],[390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,]),'value_factor1':([293,385,400,565,566,567,568,569,570,571,572,573,574,575,576,577,578,1204,],[391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,]),'next_val':([294,591,],[399,798,]),'output_factor_tail':([303,610,611,612,613,614,615,616,617,618,619,620,621,622,623,],[407,824,825,826,827,828,829,830,831,832,833,834,835,836,837,]),'output_postfix':([306,],[424,]),'output_postfix_op':([306,],[426,]),'output_list_index':([311,],[431,]),'condition':([315,434,1254,],[435,628,1289,]),'condition_factor':([315,434,631,632,633,634,635,636,637,638,639,640,641,642,643,644,1254,],[436,436,842,843,844,845,846,847,848,849,850,851,852,853,854,855,436,]),'condition_var_call':([315,434,631,632,633,634,635,636,637,638,639,640,641,642,643,644,1254,],[437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,]),'condition1':([315,434,631,632,633,634,635,636,637,638,639,640,641,642,643,644,1254,],[438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,]),'control_variable':([316,],[446,]),'until_expression':([317,448,1060,],[449,658,1155,]),'until_factor':([317,448,661,662,663,664,665,666,667,668,669,670,671,672,673,674,1060,],[450,450,874,875,876,877,878,879,880,881,882,883,884,885,886,887,450,]),'until_var_call':([317,448,661,662,663,664,665,666,667,668,669,670,671,672,673,674,1060,],[451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,]),'until_factor1':([317,448,661,662,663,664,665,666,667,668,669,670,671,672,673,674,1060,],[452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,]),'local_dec_tail2':([322,],[463,]),'local_factor_tail':([333,693,694,695,696,697,698,699,700,701,702,703,704,705,706,],[471,897,898,899,900,901,902,903,904,905,906,907,908,909,910,]),'local_postfix':([334,],[487,]),'local_postfix_op':([334,],[489,]),'local_list_index':([339,],[494,]),'revive_value':([347,],[499,]),'revive_type_cast':([347,],[500,]),'revive_expression':([347,504,],[501,718,]),'revive_factor':([347,504,723,724,725,726,727,728,729,730,731,732,733,734,735,736,],[508,508,918,919,920,921,922,923,924,925,926,927,928,929,930,931,]),'revive_var_call':([347,504,723,724,725,726,727,728,729,730,731,732,733,734,735,736,],[509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,]),'revive_factor1':([347,504,723,724,725,726,727,728,729,730,731,732,733,734,735,736,],[510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,]),'assign_factor_tail':([365,757,758,759,760,761,762,763,764,765,766,767,768,769,770,],[528,943,944,945,946,947,948,949,950,951,952,953,954,955,956,]),'assign_postfix':([366,],[544,]),'assign_postfix_op':([366,],[546,]),'assign_list_index':([371,],[551,]),'arg_tail':([377,775,],[555,958,]),'value_factor_tail':([389,781,782,783,784,785,786,787,788,789,790,791,792,793,794,],[564,963,964,965,966,967,968,969,970,971,972,973,974,975,976,]),'value_postfix':([390,],[580,]),'value_postfix_op':([390,],[582,]),'value_list_index':([395,],[587,]),'typecast_value':([402,404,405,406,466,468,469,470,523,525,526,527,559,561,562,563,717,719,720,721,1162,1164,1165,1166,],[593,607,608,609,688,690,691,692,752,754,755,756,776,778,779,780,913,915,916,917,1226,1228,1229,1230,]),'typecast_expression':([402,404,405,406,466,468,469,470,523,525,526,527,559,561,562,563,592,717,719,720,721,1162,1164,1165,1166,],[594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,799,594,594,594,594,594,594,594,594,]),'typecast_factor':([402,404,405,406,466,468,469,470,523,525,526,527,559,561,562,563,592,717,719,720,721,803,804,805,806,807,808,809,810,811,812,813,814,815,816,1162,1164,1165,1166,],[597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,980,981,982,983,984,985,986,987,988,989,990,991,992,993,597,597,597,597,]),'typecast_factor1':([402,404,405,406,466,468,469,470,523,525,526,527,559,561,562,563,592,717,719,720,721,803,804,805,806,807,808,809,810,811,812,813,814,815,816,1162,1164,1165,1166,],[599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,]),'output_index':([432,994,],[625,1126,]),'condition_tail':([436,842,843,844,845,846,847,848,849,850,851,852,853,854,855,],[630,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,]),'condition_postfix':([437,],[646,]),'condition_postfix_op':([437,],[648,]),'condition_list_index':([442,],[653,]),'until_factor_tail':([450,874,875,876,877,878,879,880,881,882,883,884,885,886,887,],[660,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,]),'until_postfix':([451,],[676,]),'until_postfix_op':([451,],[678,]),'until_list_index':([456,],[683,]),'local_index':([495,1061,],[707,1156,]),'local_2d_list':([497,],[711,]),'function_statements_tail':([498,],[713,]),'revive_factor_tail':([508,918,919,920,921,922,923,924,925,926,927,928,929,930,931,],[722,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,]),'revive_postfix':([509,],[738,]),'revive_postfix_op':([509,],[740,]),'revive_list_index':([514,],[745,]),'start':([521,],[749,]),'assign_index':([552,1106,],[771,1194,]),'value_index':([588,1109,],[795,1195,]),'typecast_factor_tail':([597,980,981,982,983,984,985,986,987,988,989,990,991,992,993,],[802,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,]),'condition_index':([654,1128,],[856,1200,]),'for_expression':([656,859,],[860,1013,]),'for_factor':([656,859,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,],[861,861,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,]),'for_var_call':([656,859,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,],[862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,]),'for_factor1':([656,859,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,],[863,863,863,863,863,863,863,863,863,863,863,863,863,863,863,863,]),'until_index':([684,1152,],[888,1220,]),'revive_index':([746,1157,],[932,1223,]),'switch_condition':([748,1225,],[935,1266,]),'output_list_index2':([839,],[995,]),'for_factor_tail':([861,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,],[1015,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,]),'for_postfix':([862,],[1031,]),'for_postfix_op':([862,],[1033,]),'for_list_index':([867,],[1038,]),'control_var_tail':([871,],[1041,]),'local_list_index2':([911,],[1062,]),'switch_value':([936,],[1084,]),'switch_type_cast':([936,],[1085,]),'switch_expression':([936,1089,],[1086,1163,]),'switch_factor':([936,1089,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,],[1093,1093,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,]),'switch_var_call':([936,1089,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,],[1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,]),'switch_factor1':([936,1089,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,],[1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,]),'deleteCount':([937,],[1103,]),'assign_list_index2':([957,],[1107,]),'value_list_index2':([977,],[1110,]),'condition_list_index2':([1012,],[1129,]),'update':([1014,],[1132,]),'for_index':([1039,1258,],[1148,1291,]),'until_list_index2':([1059,],[1153,]),'revive_list_index2':([1082,],[1158,]),'switch_factor_tail':([1093,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,],[1167,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,]),'switch_postfix':([1094,],[1183,]),'switch_postfix_op':([1094,],[1185,]),'switch_list_index':([1099,],[1190,]),'conditional_tail':([1127,1305,],[1197,1306,]),'update_tail':([1133,],[1202,]),'switch_index':([1191,1293,],[1245,1300,]),'splice_items':([1193,],[1248,]),'for_list_index2':([1219,],[1259,]),'switchcond_tail':([1225,],[1265,]),'switch_list_index2':([1286,],[1294,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BIRTH LBRACE global_dec function_statements main_function RBRACE GHOST','program',7,'p_program','Parser.py',41),
  ('main_function -> MAIN_CASPER LPAREN RPAREN LBRACE statements RBRACE','main_function',6,'p_main_function','Parser.py',49),
  ('global_dec -> global_statement SEMICOLON global_tail','global_dec',3,'p_global_dec','Parser.py',61),
  ('global_dec -> empty','global_dec',1,'p_global_dec','Parser.py',62),
  ('global_tail -> global_dec','global_tail',1,'p_global_tail','Parser.py',75),
  ('global_statement -> var_statement global_statement_tail','global_statement',2,'p_global_statement','Parser.py',85),
  ('var_statement -> data_type IDENT list_dec','var_statement',3,'p_var_statement','Parser.py',118),
  ('list_dec -> empty','list_dec',1,'p_list_dec','Parser.py',133),
  ('list_dec -> LBRACKET RBRACKET _2d_list','list_dec',3,'p_list_dec','Parser.py',134),
  ('_2d_list -> empty','_2d_list',1,'p_2d_list','Parser.py',149),
  ('_2d_list -> LBRACKET RBRACKET','_2d_list',2,'p_2d_list','Parser.py',150),
  ('global_statement_tail -> empty','global_statement_tail',1,'p_global_statement_tail','Parser.py',165),
  ('global_statement_tail -> COMMA IDENT global_statement_tail','global_statement_tail',3,'p_global_statement_tail','Parser.py',166),
  ('global_statement_tail -> EQ global_value global_statement_tail2','global_statement_tail',3,'p_global_statement_tail','Parser.py',167),
  ('global_statement_tail2 -> COMMA IDENT global_statement_tail','global_statement_tail2',3,'p_global_statement_tail2','Parser.py',184),
  ('global_statement_tail2 -> empty','global_statement_tail2',1,'p_global_statement_tail2','Parser.py',185),
  ('global_value -> expression','global_value',1,'p_global_value','Parser.py',200),
  ('global_value -> list_value','global_value',1,'p_global_value','Parser.py',201),
  ('list_value -> LBRACKET list_element RBRACKET','list_value',3,'p_list_value','Parser.py',211),
  ('list_element -> literal element_tail','list_element',2,'p_list_element','Parser.py',223),
  ('list_element -> list_value element_tail','list_element',2,'p_list_element','Parser.py',224),
  ('element_tail -> COMMA list_element','element_tail',2,'p_element_tail','Parser.py',240),
  ('element_tail -> empty','element_tail',1,'p_element_tail','Parser.py',241),
  ('data_type -> INT','data_type',1,'p_data_type','Parser.py',258),
  ('data_type -> FLT','data_type',1,'p_data_type','Parser.py',259),
  ('data_type -> BLN','data_type',1,'p_data_type','Parser.py',260),
  ('data_type -> CHR','data_type',1,'p_data_type','Parser.py',261),
  ('data_type -> STR','data_type',1,'p_data_type','Parser.py',262),
  ('expression -> factor factor_tail','expression',2,'p_expression','Parser.py',272),
  ('factor -> var_call postfix','factor',2,'p_factor','Parser.py',289),
  ('factor -> literal1','factor',1,'p_factor','Parser.py',290),
  ('factor -> TILDE INT_LIT','factor',2,'p_factor','Parser.py',291),
  ('factor -> TILDE FLT_LIT','factor',2,'p_factor','Parser.py',292),
  ('factor -> LPAREN factor_expression RPAREN','factor',3,'p_factor','Parser.py',293),
  ('factor_expression -> factor_expression_factor factor_expression_tail','factor_expression',2,'p_factor_expression','Parser.py',315),
  ('factor_expression_factor -> factor_var_call factor_postfix','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',325),
  ('factor_expression_factor -> factor_expression1','factor_expression_factor',1,'p_factor_expression_factor','Parser.py',326),
  ('factor_expression_factor -> TILDE INT_LIT','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',327),
  ('factor_expression_factor -> TILDE FLT_LIT','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',328),
  ('factor_expression_factor -> LPAREN factor_expression RPAREN','factor_expression_factor',3,'p_factor_expression_factor','Parser.py',329),
  ('factor_var_call -> IDENT factor_list_index','factor_var_call',2,'p_factor_var_call','Parser.py',350),
  ('factor_postfix_op -> PLUS_PLUS','factor_postfix_op',1,'p_factor_postfix_op','Parser.py',356),
  ('factor_postfix_op -> MINUS_MINUS','factor_postfix_op',1,'p_factor_postfix_op','Parser.py',357),
  ('factor_postfix -> empty','factor_postfix',1,'p_factor_postfix','Parser.py',362),
  ('factor_postfix -> factor_postfix_op','factor_postfix',1,'p_factor_postfix','Parser.py',363),
  ('factor_list_index -> LBRACKET factor_index RBRACKET factor_list_index2','factor_list_index',4,'p_factor_list_index','Parser.py',369),
  ('factor_list_index -> empty','factor_list_index',1,'p_factor_list_index','Parser.py',370),
  ('factor_list_index2 -> LBRACKET factor_index RBRACKET','factor_list_index2',3,'p_factor_list_index2','Parser.py',380),
  ('factor_list_index2 -> empty','factor_list_index2',1,'p_factor_list_index2','Parser.py',381),
  ('factor_index -> INT_LIT','factor_index',1,'p_factor__int_lit','Parser.py',391),
  ('factor_index -> IDENT','factor_index',1,'p_factor_index_ident','Parser.py',396),
  ('factor_expression_tail -> PLUS factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',402),
  ('factor_expression_tail -> MINUS factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',403),
  ('factor_expression_tail -> MULTIPLY factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',404),
  ('factor_expression_tail -> DIVISION factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',405),
  ('factor_expression_tail -> MODULO factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',406),
  ('factor_expression_tail -> EXPONENT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',407),
  ('factor_expression_tail -> GT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',408),
  ('factor_expression_tail -> LT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',409),
  ('factor_expression_tail -> EQ_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',410),
  ('factor_expression_tail -> GT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',411),
  ('factor_expression_tail -> LT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',412),
  ('factor_expression_tail -> NOT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',413),
  ('factor_expression_tail -> AND factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',414),
  ('factor_expression_tail -> OR factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',415),
  ('factor_expression_tail -> empty','factor_expression_tail',1,'p_factor_expression_tail','Parser.py',416),
  ('factor_expression1 -> INT_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',430),
  ('factor_expression1 -> FLT_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',431),
  ('factor_expression1 -> DAY','factor_expression1',1,'p_factor_expression1','Parser.py',432),
  ('factor_expression1 -> NIGHT','factor_expression1',1,'p_factor_expression1','Parser.py',433),
  ('factor_expression1 -> STR_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',434),
  ('factor_tail -> PLUS factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',458),
  ('factor_tail -> MINUS factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',459),
  ('factor_tail -> MULTIPLY factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',460),
  ('factor_tail -> DIVISION factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',461),
  ('factor_tail -> MODULO factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',462),
  ('factor_tail -> EXPONENT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',463),
  ('factor_tail -> GT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',464),
  ('factor_tail -> LT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',465),
  ('factor_tail -> EQ_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',466),
  ('factor_tail -> GT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',467),
  ('factor_tail -> LT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',468),
  ('factor_tail -> NOT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',469),
  ('factor_tail -> AND factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',470),
  ('factor_tail -> OR factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',471),
  ('factor_tail -> empty','factor_tail',1,'p_factor_tail','Parser.py',472),
  ('literal -> literal1','literal',1,'p_literal','Parser.py',490),
  ('literal -> literal2','literal',1,'p_literal','Parser.py',491),
  ('literal1 -> INT_LIT','literal1',1,'p_literal1','Parser.py',512),
  ('literal1 -> FLT_LIT','literal1',1,'p_literal1','Parser.py',513),
  ('literal1 -> DAY','literal1',1,'p_literal1','Parser.py',514),
  ('literal1 -> NIGHT','literal1',1,'p_literal1','Parser.py',515),
  ('literal1 -> STR_LIT','literal1',1,'p_literal1','Parser.py',516),
  ('literal2 -> CHR_LIT','literal2',1,'p_literal2','Parser.py',521),
  ('function_statements -> ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements revive RBRACE function_statements_tail','function_statements',10,'p_function_statements','Parser.py',532),
  ('function_statements -> empty','function_statements',1,'p_function_statements','Parser.py',533),
  ('function_statements_tail -> function_statements','function_statements_tail',1,'p_function_statements_tail','Parser.py',583),
  ('function_statements_tail -> empty','function_statements_tail',1,'p_function_statements_tail','Parser.py',584),
  ('ret_type -> FUNCTION','ret_type',1,'p_ret_type','Parser.py',597),
  ('ret_type -> function_dtype','ret_type',1,'p_ret_type','Parser.py',598),
  ('function_dtype -> FUNCTION_INT','function_dtype',1,'p_function_dtype','Parser.py',619),
  ('function_dtype -> FUNCTION_FLT','function_dtype',1,'p_function_dtype','Parser.py',620),
  ('function_dtype -> FUNCTION_CHR','function_dtype',1,'p_function_dtype','Parser.py',621),
  ('function_dtype -> FUNCTION_BLN','function_dtype',1,'p_function_dtype','Parser.py',622),
  ('function_dtype -> FUNCTION_STR','function_dtype',1,'p_function_dtype','Parser.py',623),
  ('function_dtype -> FUNCTION_LIST_INT','function_dtype',1,'p_function_dtype','Parser.py',624),
  ('function_dtype -> FUNCTION_LIST_FLT','function_dtype',1,'p_function_dtype','Parser.py',625),
  ('function_dtype -> FUNCTION_LIST_CHR','function_dtype',1,'p_function_dtype','Parser.py',626),
  ('function_dtype -> FUNCTION_LIST_STR','function_dtype',1,'p_function_dtype','Parser.py',627),
  ('function_dtype -> FUNCTION_LIST_BLN','function_dtype',1,'p_function_dtype','Parser.py',628),
  ('parameters -> data_type IDENT parameters_tail','parameters',3,'p_parameters','Parser.py',638),
  ('parameters -> empty','parameters',1,'p_parameters','Parser.py',639),
  ('parameters_tail -> COMMA data_type IDENT parameters_tail','parameters_tail',4,'p_parameters_tail','Parser.py',653),
  ('parameters_tail -> empty','parameters_tail',1,'p_parameters_tail','Parser.py',654),
  ('revive -> REVIVE revive_value SEMICOLON','revive',3,'p_revive','Parser.py',666),
  ('revive -> empty','revive',1,'p_revive','Parser.py',667),
  ('revive_value -> revive_type_cast','revive_value',1,'p_revive_value','Parser.py',677),
  ('revive_value -> revive_expression','revive_value',1,'p_revive_value','Parser.py',678),
  ('revive_value -> function_call','revive_value',1,'p_revive_value','Parser.py',679),
  ('revive_expression -> revive_factor revive_factor_tail','revive_expression',2,'p_revive_expression','Parser.py',685),
  ('revive_factor -> revive_var_call revive_postfix','revive_factor',2,'p_revive_factor','Parser.py',695),
  ('revive_factor -> revive_factor1','revive_factor',1,'p_revive_factor','Parser.py',696),
  ('revive_factor -> TILDE INT_LIT','revive_factor',2,'p_revive_factor','Parser.py',697),
  ('revive_factor -> TILDE FLT_LIT','revive_factor',2,'p_revive_factor','Parser.py',698),
  ('revive_factor -> LPAREN revive_expression RPAREN','revive_factor',3,'p_revive_factor','Parser.py',699),
  ('revive_var_call -> IDENT revive_list_index','revive_var_call',2,'p_revive_var_call','Parser.py',719),
  ('revive_postfix_op -> PLUS_PLUS','revive_postfix_op',1,'p_revive_postfix_op','Parser.py',725),
  ('revive_postfix_op -> MINUS_MINUS','revive_postfix_op',1,'p_revive_postfix_op','Parser.py',726),
  ('revive_postfix -> empty','revive_postfix',1,'p_revive_postfix','Parser.py',731),
  ('revive_postfix -> revive_postfix_op','revive_postfix',1,'p_revive_postfix','Parser.py',732),
  ('revive_list_index -> LBRACKET revive_index RBRACKET revive_list_index2','revive_list_index',4,'p_revive_list_index','Parser.py',738),
  ('revive_list_index -> empty','revive_list_index',1,'p_revive_list_index','Parser.py',739),
  ('revive_list_index2 -> LBRACKET revive_index RBRACKET','revive_list_index2',3,'p_revive_list_index2','Parser.py',749),
  ('revive_list_index2 -> empty','revive_list_index2',1,'p_revive_list_index2','Parser.py',750),
  ('revive_index -> INT_LIT','revive_index',1,'p_revive_int_lit','Parser.py',759),
  ('revive_index -> IDENT','revive_index',1,'p_revive_index_ident','Parser.py',764),
  ('revive_factor_tail -> PLUS revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',768),
  ('revive_factor_tail -> MINUS revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',769),
  ('revive_factor_tail -> MULTIPLY revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',770),
  ('revive_factor_tail -> DIVISION revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',771),
  ('revive_factor_tail -> MODULO revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',772),
  ('revive_factor_tail -> EXPONENT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',773),
  ('revive_factor_tail -> GT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',774),
  ('revive_factor_tail -> LT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',775),
  ('revive_factor_tail -> EQ_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',776),
  ('revive_factor_tail -> GT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',777),
  ('revive_factor_tail -> LT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',778),
  ('revive_factor_tail -> NOT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',779),
  ('revive_factor_tail -> AND revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',780),
  ('revive_factor_tail -> OR revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',781),
  ('revive_factor_tail -> empty','revive_factor_tail',1,'p_revive_factor_tail','Parser.py',782),
  ('revive_factor1 -> INT_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',796),
  ('revive_factor1 -> FLT_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',797),
  ('revive_factor1 -> DAY','revive_factor1',1,'p_revive_factor1','Parser.py',798),
  ('revive_factor1 -> NIGHT','revive_factor1',1,'p_revive_factor1','Parser.py',799),
  ('revive_factor1 -> STR_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',800),
  ('revive_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',805),
  ('revive_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',806),
  ('revive_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',807),
  ('revive_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',808),
  ('statements -> empty','statements',1,'p_statements','Parser.py',815),
  ('statements -> local_dec statements_tail','statements',2,'p_statements','Parser.py',816),
  ('statements_tail -> switch_statement statements','statements_tail',2,'p_statements_tail','Parser.py',830),
  ('statements_tail -> loop_statement statements','statements_tail',2,'p_statements_tail','Parser.py',831),
  ('statements_tail -> function_call_statement statements','statements_tail',2,'p_statements_tail','Parser.py',832),
  ('statements_tail -> assignment_statement statements','statements_tail',2,'p_statements_tail','Parser.py',833),
  ('statements_tail -> output_statement statements','statements_tail',2,'p_statements_tail','Parser.py',834),
  ('statements_tail -> conditional_statement statements','statements_tail',2,'p_statements_tail','Parser.py',835),
  ('statements_tail -> statements','statements_tail',1,'p_statements_tail','Parser.py',836),
  ('local_dec -> local_var_statement local_dec_tail SEMICOLON','local_dec',3,'p_local_dec','Parser.py',852),
  ('local_dec -> empty','local_dec',1,'p_local_dec','Parser.py',853),
  ('local_var_statement -> local_data_type IDENT local_list_dec','local_var_statement',3,'p_local_var_statement','Parser.py',871),
  ('local_data_type -> INT','local_data_type',1,'p_local_data_type','Parser.py',881),
  ('local_data_type -> FLT','local_data_type',1,'p_local_data_type','Parser.py',882),
  ('local_data_type -> BLN','local_data_type',1,'p_local_data_type','Parser.py',883),
  ('local_data_type -> CHR','local_data_type',1,'p_local_data_type','Parser.py',884),
  ('local_data_type -> STR','local_data_type',1,'p_local_data_type','Parser.py',885),
  ('local_list_dec -> empty','local_list_dec',1,'p_local_list_dec','Parser.py',891),
  ('local_list_dec -> LBRACKET RBRACKET local_2d_list','local_list_dec',3,'p_local_list_dec','Parser.py',892),
  ('local_2d_list -> empty','local_2d_list',1,'p_local_2d_list','Parser.py',903),
  ('local_2d_list -> LBRACKET RBRACKET','local_2d_list',2,'p_local_2d_list','Parser.py',904),
  ('local_dec_tail -> empty','local_dec_tail',1,'p_local_dec_tail','Parser.py',919),
  ('local_dec_tail -> COMMA IDENT local_dec_tail','local_dec_tail',3,'p_local_dec_tail','Parser.py',920),
  ('local_dec_tail -> EQ local_value local_dec_tail2','local_dec_tail',3,'p_local_dec_tail','Parser.py',921),
  ('local_dec_tail2 -> COMMA IDENT local_dec_tail','local_dec_tail2',3,'p_local_dec_tail2','Parser.py',936),
  ('local_dec_tail2 -> empty','local_dec_tail2',1,'p_local_dec_tail2','Parser.py',937),
  ('local_value -> local_value_value','local_value',1,'p_local_value','Parser.py',951),
  ('local_value -> list_value','local_value',1,'p_local_value','Parser.py',952),
  ('local_value_value -> local_type_cast','local_value_value',1,'p_local_value_value','Parser.py',957),
  ('local_value_value -> local_expression','local_value_value',1,'p_local_value_value','Parser.py',958),
  ('local_value_value -> function_call','local_value_value',1,'p_local_value_value','Parser.py',959),
  ('local_expression -> local_factor local_factor_tail','local_expression',2,'p_local_expression','Parser.py',964),
  ('local_factor -> local_var_call local_postfix','local_factor',2,'p_local_factor','Parser.py',974),
  ('local_factor -> local_factor1','local_factor',1,'p_local_factor','Parser.py',975),
  ('local_factor -> TILDE INT_LIT','local_factor',2,'p_local_factor','Parser.py',976),
  ('local_factor -> TILDE FLT_LIT','local_factor',2,'p_local_factor','Parser.py',977),
  ('local_factor -> LPAREN local_expression RPAREN','local_factor',3,'p_local_factor','Parser.py',978),
  ('local_var_call -> IDENT local_list_index','local_var_call',2,'p_local_var_call','Parser.py',999),
  ('local_postfix_op -> PLUS_PLUS','local_postfix_op',1,'p_local_postfix_op','Parser.py',1005),
  ('local_postfix_op -> MINUS_MINUS','local_postfix_op',1,'p_local_postfix_op','Parser.py',1006),
  ('local_postfix -> empty','local_postfix',1,'p_local_postfix','Parser.py',1011),
  ('local_postfix -> local_postfix_op','local_postfix',1,'p_local_postfix','Parser.py',1012),
  ('local_list_index -> LBRACKET local_index RBRACKET local_list_index2','local_list_index',4,'p_local_list_index','Parser.py',1018),
  ('local_list_index -> empty','local_list_index',1,'p_local_list_index','Parser.py',1019),
  ('local_list_index2 -> LBRACKET local_index RBRACKET','local_list_index2',3,'p_local_list_index2','Parser.py',1029),
  ('local_list_index2 -> empty','local_list_index2',1,'p_local_list_index2','Parser.py',1030),
  ('local_index -> INT_LIT','local_index',1,'p_local_int_lit','Parser.py',1039),
  ('local_index -> IDENT','local_index',1,'p_local_index_ident','Parser.py',1044),
  ('local_factor_tail -> PLUS local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1048),
  ('local_factor_tail -> MINUS local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1049),
  ('local_factor_tail -> MULTIPLY local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1050),
  ('local_factor_tail -> DIVISION local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1051),
  ('local_factor_tail -> MODULO local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1052),
  ('local_factor_tail -> EXPONENT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1053),
  ('local_factor_tail -> GT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1054),
  ('local_factor_tail -> LT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1055),
  ('local_factor_tail -> EQ_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1056),
  ('local_factor_tail -> GT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1057),
  ('local_factor_tail -> LT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1058),
  ('local_factor_tail -> NOT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1059),
  ('local_factor_tail -> AND local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1060),
  ('local_factor_tail -> OR local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1061),
  ('local_factor_tail -> empty','local_factor_tail',1,'p_local_factor_tail','Parser.py',1062),
  ('local_factor1 -> INT_LIT','local_factor1',1,'p_local_factor1','Parser.py',1076),
  ('local_factor1 -> FLT_LIT','local_factor1',1,'p_local_factor1','Parser.py',1077),
  ('local_factor1 -> DAY','local_factor1',1,'p_local_factor1','Parser.py',1078),
  ('local_factor1 -> NIGHT','local_factor1',1,'p_local_factor1','Parser.py',1079),
  ('local_factor1 -> STR_LIT','local_factor1',1,'p_local_factor1','Parser.py',1080),
  ('local_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',1085),
  ('local_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',1086),
  ('local_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',1087),
  ('local_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',1088),
  ('conditional_statement -> CHECK LPAREN condition RPAREN LBRACE statements RBRACE conditional_tail OTHERWISE LBRACE statements RBRACE','conditional_statement',12,'p_conditional_statement','Parser.py',1095),
  ('conditional_tail -> OTHERWISE_CHECK LPAREN condition RPAREN LBRACE statements RBRACE conditional_tail','conditional_tail',8,'p_conditional_tail','Parser.py',1106),
  ('conditional_tail -> empty','conditional_tail',1,'p_conditional_tail','Parser.py',1107),
  ('condition -> condition_factor condition_tail','condition',2,'p_condition','Parser.py',1117),
  ('condition_factor -> condition_var_call condition_postfix','condition_factor',2,'p_condition_factor','Parser.py',1127),
  ('condition_factor -> condition1','condition_factor',1,'p_condition_factor','Parser.py',1128),
  ('condition_factor -> TILDE INT_LIT','condition_factor',2,'p_condition_factor','Parser.py',1129),
  ('condition_factor -> TILDE FLT_LIT','condition_factor',2,'p_condition_factor','Parser.py',1130),
  ('condition_factor -> LPAREN condition RPAREN','condition_factor',3,'p_condition_factor','Parser.py',1131),
  ('condition_var_call -> IDENT condition_list_index','condition_var_call',2,'p_condition_var_call','Parser.py',1151),
  ('condition_postfix_op -> PLUS_PLUS','condition_postfix_op',1,'p_condition_postfix_op','Parser.py',1157),
  ('condition_postfix_op -> MINUS_MINUS','condition_postfix_op',1,'p_condition_postfix_op','Parser.py',1158),
  ('condition_postfix -> empty','condition_postfix',1,'p_condition_postfix','Parser.py',1163),
  ('condition_postfix -> condition_postfix_op','condition_postfix',1,'p_condition_postfix','Parser.py',1164),
  ('condition_list_index -> LBRACKET condition_index RBRACKET condition_list_index2','condition_list_index',4,'p_condition_list_index','Parser.py',1170),
  ('condition_list_index -> empty','condition_list_index',1,'p_condition_list_index','Parser.py',1171),
  ('condition_list_index2 -> LBRACKET condition_index RBRACKET','condition_list_index2',3,'p_condition_list_index2','Parser.py',1181),
  ('condition_list_index2 -> empty','condition_list_index2',1,'p_condition_list_index2','Parser.py',1182),
  ('condition_index -> INT_LIT','condition_index',1,'p_condition_int_lit','Parser.py',1191),
  ('condition_index -> IDENT','condition_index',1,'p_condition_index_ident','Parser.py',1196),
  ('condition_tail -> PLUS condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1200),
  ('condition_tail -> MINUS condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1201),
  ('condition_tail -> MULTIPLY condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1202),
  ('condition_tail -> DIVISION condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1203),
  ('condition_tail -> MODULO condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1204),
  ('condition_tail -> EXPONENT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1205),
  ('condition_tail -> GT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1206),
  ('condition_tail -> LT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1207),
  ('condition_tail -> EQ_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1208),
  ('condition_tail -> GT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1209),
  ('condition_tail -> LT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1210),
  ('condition_tail -> NOT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1211),
  ('condition_tail -> AND condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1212),
  ('condition_tail -> OR condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1213),
  ('condition_tail -> empty','condition_tail',1,'p_condition_tail','Parser.py',1214),
  ('condition1 -> INT_LIT','condition1',1,'p_condition1','Parser.py',1228),
  ('condition1 -> FLT_LIT','condition1',1,'p_condition1','Parser.py',1229),
  ('condition1 -> DAY','condition1',1,'p_condition1','Parser.py',1230),
  ('condition1 -> NIGHT','condition1',1,'p_condition1','Parser.py',1231),
  ('condition1 -> STR_LIT','condition1',1,'p_condition1','Parser.py',1232),
  ('switch_statement -> SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE LBRACE statements RBRACE RBRACE','switch_statement',11,'p_switch_statement','Parser.py',1244),
  ('switch_condition -> SHIFT switch_value COLON statements switchcond_tail','switch_condition',5,'p_switch_condition','Parser.py',1258),
  ('switch_value -> switch_type_cast','switch_value',1,'p_switch_value','Parser.py',1264),
  ('switch_value -> switch_expression','switch_value',1,'p_switch_value','Parser.py',1265),
  ('switch_value -> function_call','switch_value',1,'p_switch_value','Parser.py',1266),
  ('switch_expression -> switch_factor switch_factor_tail','switch_expression',2,'p_switch_expression','Parser.py',1271),
  ('switch_factor -> switch_var_call switch_postfix','switch_factor',2,'p_switch_factor','Parser.py',1281),
  ('switch_factor -> switch_factor1','switch_factor',1,'p_switch_factor','Parser.py',1282),
  ('switch_factor -> TILDE INT_LIT','switch_factor',2,'p_switch_factor','Parser.py',1283),
  ('switch_factor -> TILDE FLT_LIT','switch_factor',2,'p_switch_factor','Parser.py',1284),
  ('switch_factor -> LPAREN switch_expression RPAREN','switch_factor',3,'p_switch_factor','Parser.py',1285),
  ('switch_var_call -> IDENT switch_list_index','switch_var_call',2,'p_switch_var_call','Parser.py',1305),
  ('switch_postfix_op -> PLUS_PLUS','switch_postfix_op',1,'p_switch_postfix_op','Parser.py',1311),
  ('switch_postfix_op -> MINUS_MINUS','switch_postfix_op',1,'p_switch_postfix_op','Parser.py',1312),
  ('switch_postfix -> empty','switch_postfix',1,'p_switch_postfix','Parser.py',1317),
  ('switch_postfix -> switch_postfix_op','switch_postfix',1,'p_switch_postfix','Parser.py',1318),
  ('switch_list_index -> LBRACKET switch_index RBRACKET switch_list_index2','switch_list_index',4,'p_switch_list_index','Parser.py',1324),
  ('switch_list_index -> empty','switch_list_index',1,'p_switch_list_index','Parser.py',1325),
  ('switch_list_index2 -> LBRACKET switch_index RBRACKET','switch_list_index2',3,'p_switch_list_index2','Parser.py',1335),
  ('switch_list_index2 -> empty','switch_list_index2',1,'p_switch_list_index2','Parser.py',1336),
  ('switch_index -> INT_LIT','switch_index',1,'p_switch_int_lit','Parser.py',1344),
  ('switch_index -> IDENT','switch_index',1,'p_switch_index_ident','Parser.py',1349),
  ('switch_factor_tail -> PLUS switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1354),
  ('switch_factor_tail -> MINUS switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1355),
  ('switch_factor_tail -> MULTIPLY switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1356),
  ('switch_factor_tail -> DIVISION switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1357),
  ('switch_factor_tail -> MODULO switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1358),
  ('switch_factor_tail -> EXPONENT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1359),
  ('switch_factor_tail -> GT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1360),
  ('switch_factor_tail -> LT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1361),
  ('switch_factor_tail -> EQ_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1362),
  ('switch_factor_tail -> GT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1363),
  ('switch_factor_tail -> LT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1364),
  ('switch_factor_tail -> NOT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1365),
  ('switch_factor_tail -> AND switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1366),
  ('switch_factor_tail -> OR switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1367),
  ('switch_factor_tail -> empty','switch_factor_tail',1,'p_switch_factor_tail','Parser.py',1368),
  ('switch_factor1 -> INT_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1382),
  ('switch_factor1 -> FLT_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1383),
  ('switch_factor1 -> DAY','switch_factor1',1,'p_switch_factor1','Parser.py',1384),
  ('switch_factor1 -> NIGHT','switch_factor1',1,'p_switch_factor1','Parser.py',1385),
  ('switch_factor1 -> STR_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1386),
  ('switch_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1391),
  ('switch_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1392),
  ('switch_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1393),
  ('switch_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1394),
  ('switchcond_tail -> switch_condition','switchcond_tail',1,'p_switchcond_tail','Parser.py',1402),
  ('switchcond_tail -> empty','switchcond_tail',1,'p_switchcond_tail','Parser.py',1403),
  ('loop_statement -> for_loop','loop_statement',1,'p_loop_statement','Parser.py',1418),
  ('loop_statement -> until_loop','loop_statement',1,'p_loop_statement','Parser.py',1419),
  ('loop_statement -> repeat_until','loop_statement',1,'p_loop_statement','Parser.py',1420),
  ('for_loop -> FOR LPAREN control_variable SEMICOLON for_expression SEMICOLON update RPAREN LBRACE statements RBRACE','for_loop',11,'p_for_loop','Parser.py',1428),
  ('for_expression -> for_factor for_factor_tail','for_expression',2,'p_for_expression','Parser.py',1433),
  ('for_factor -> for_var_call for_postfix','for_factor',2,'p_for_factor','Parser.py',1443),
  ('for_factor -> for_factor1','for_factor',1,'p_for_factor','Parser.py',1444),
  ('for_factor -> TILDE INT_LIT','for_factor',2,'p_for_factor','Parser.py',1445),
  ('for_factor -> TILDE FLT_LIT','for_factor',2,'p_for_factor','Parser.py',1446),
  ('for_factor -> LPAREN for_expression RPAREN','for_factor',3,'p_for_factor','Parser.py',1447),
  ('for_var_call -> IDENT for_list_index','for_var_call',2,'p_for_var_call','Parser.py',1467),
  ('for_postfix_op -> PLUS_PLUS','for_postfix_op',1,'p_for_postfix_op','Parser.py',1473),
  ('for_postfix_op -> MINUS_MINUS','for_postfix_op',1,'p_for_postfix_op','Parser.py',1474),
  ('for_postfix -> empty','for_postfix',1,'p_for_postfix','Parser.py',1479),
  ('for_postfix -> for_postfix_op','for_postfix',1,'p_for_postfix','Parser.py',1480),
  ('for_list_index -> LBRACKET for_index RBRACKET for_list_index2','for_list_index',4,'p_for_list_index','Parser.py',1486),
  ('for_list_index -> empty','for_list_index',1,'p_for_list_index','Parser.py',1487),
  ('for_list_index2 -> LBRACKET for_index RBRACKET','for_list_index2',3,'p_for_list_index2','Parser.py',1497),
  ('for_list_index2 -> empty','for_list_index2',1,'p_for_list_index2','Parser.py',1498),
  ('for_index -> INT_LIT','for_index',1,'p_for_int_lit','Parser.py',1507),
  ('for_index -> IDENT','for_index',1,'p_for_index_ident','Parser.py',1512),
  ('for_factor_tail -> PLUS for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1519),
  ('for_factor_tail -> MINUS for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1520),
  ('for_factor_tail -> MULTIPLY for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1521),
  ('for_factor_tail -> DIVISION for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1522),
  ('for_factor_tail -> MODULO for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1523),
  ('for_factor_tail -> EXPONENT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1524),
  ('for_factor_tail -> GT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1525),
  ('for_factor_tail -> LT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1526),
  ('for_factor_tail -> EQ_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1527),
  ('for_factor_tail -> GT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1528),
  ('for_factor_tail -> LT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1529),
  ('for_factor_tail -> NOT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1530),
  ('for_factor_tail -> AND for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1531),
  ('for_factor_tail -> OR for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1532),
  ('for_factor_tail -> empty','for_factor_tail',1,'p_for_factor_tail','Parser.py',1533),
  ('for_factor1 -> INT_LIT','for_factor1',1,'p_for_factor1','Parser.py',1547),
  ('for_factor1 -> FLT_LIT','for_factor1',1,'p_for_factor1','Parser.py',1548),
  ('for_factor1 -> DAY','for_factor1',1,'p_for_factor1','Parser.py',1549),
  ('for_factor1 -> NIGHT','for_factor1',1,'p_for_factor1','Parser.py',1550),
  ('for_factor1 -> STR_LIT','for_factor1',1,'p_for_factor1','Parser.py',1551),
  ('until_loop -> UNTIL LPAREN until_expression RPAREN LBRACE statements RBRACE','until_loop',7,'p_until_loop','Parser.py',1559),
  ('until_expression -> until_factor until_factor_tail','until_expression',2,'p_until_expression','Parser.py',1566),
  ('until_factor -> until_var_call until_postfix','until_factor',2,'p_until_factor','Parser.py',1576),
  ('until_factor -> until_factor1','until_factor',1,'p_until_factor','Parser.py',1577),
  ('until_factor -> TILDE INT_LIT','until_factor',2,'p_until_factor','Parser.py',1578),
  ('until_factor -> TILDE FLT_LIT','until_factor',2,'p_until_factor','Parser.py',1579),
  ('until_factor -> LPAREN until_expression RPAREN','until_factor',3,'p_until_factor','Parser.py',1580),
  ('until_var_call -> IDENT until_list_index','until_var_call',2,'p_until_var_call','Parser.py',1600),
  ('until_postfix_op -> PLUS_PLUS','until_postfix_op',1,'p_until_postfix_op','Parser.py',1606),
  ('until_postfix_op -> MINUS_MINUS','until_postfix_op',1,'p_until_postfix_op','Parser.py',1607),
  ('until_postfix -> empty','until_postfix',1,'p_until_postfix','Parser.py',1612),
  ('until_postfix -> until_postfix_op','until_postfix',1,'p_until_postfix','Parser.py',1613),
  ('until_list_index -> LBRACKET until_index RBRACKET until_list_index2','until_list_index',4,'p_until_list_index','Parser.py',1619),
  ('until_list_index -> empty','until_list_index',1,'p_until_list_index','Parser.py',1620),
  ('until_list_index2 -> LBRACKET until_index RBRACKET','until_list_index2',3,'p_until_list_index2','Parser.py',1630),
  ('until_list_index2 -> empty','until_list_index2',1,'p_until_list_index2','Parser.py',1631),
  ('until_index -> INT_LIT','until_index',1,'p_until_int_lit','Parser.py',1641),
  ('until_index -> IDENT','until_index',1,'p_until_index_ident','Parser.py',1646),
  ('until_factor_tail -> PLUS until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1651),
  ('until_factor_tail -> MINUS until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1652),
  ('until_factor_tail -> MULTIPLY until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1653),
  ('until_factor_tail -> DIVISION until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1654),
  ('until_factor_tail -> MODULO until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1655),
  ('until_factor_tail -> EXPONENT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1656),
  ('until_factor_tail -> GT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1657),
  ('until_factor_tail -> LT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1658),
  ('until_factor_tail -> EQ_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1659),
  ('until_factor_tail -> GT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1660),
  ('until_factor_tail -> LT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1661),
  ('until_factor_tail -> NOT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1662),
  ('until_factor_tail -> AND until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1663),
  ('until_factor_tail -> OR until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1664),
  ('until_factor_tail -> empty','until_factor_tail',1,'p_until_factor_tail','Parser.py',1665),
  ('until_factor1 -> INT_LIT','until_factor1',1,'p_until_factor1','Parser.py',1679),
  ('until_factor1 -> FLT_LIT','until_factor1',1,'p_until_factor1','Parser.py',1680),
  ('until_factor1 -> DAY','until_factor1',1,'p_until_factor1','Parser.py',1681),
  ('until_factor1 -> NIGHT','until_factor1',1,'p_until_factor1','Parser.py',1682),
  ('until_factor1 -> STR_LIT','until_factor1',1,'p_until_factor1','Parser.py',1683),
  ('repeat_until -> REPEAT LBRACE statements RBRACE UNTIL LPAREN until_expression RPAREN SEMICOLON','repeat_until',9,'p_repeat_until','Parser.py',1691),
  ('control_variable -> INT IDENT EQ control_var_tail','control_variable',4,'p_control_variable','Parser.py',1699),
  ('control_var_tail -> INT_LIT','control_var_tail',1,'p_control_var_tail','Parser.py',1713),
  ('control_var_tail -> var_call','control_var_tail',1,'p_control_var_tail','Parser.py',1714),
  ('update -> var_call update_tail','update',2,'p_update','Parser.py',1727),
  ('update_tail -> postfix_op','update_tail',1,'p_update_tail','Parser.py',1737),
  ('update_tail -> compound_op value','update_tail',2,'p_update_tail','Parser.py',1738),
  ('postfix_op -> PLUS_PLUS','postfix_op',1,'p_postfix_op','Parser.py',1751),
  ('postfix_op -> MINUS_MINUS','postfix_op',1,'p_postfix_op','Parser.py',1752),
  ('function_call_statement -> FUNCTION_NAME LPAREN arguments RPAREN SEMICOLON','function_call_statement',5,'p_function_call_statement','Parser.py',1763),
  ('function_call_statement -> input_statement','function_call_statement',1,'p_function_call_statement','Parser.py',1764),
  ('function_call -> FUNCTION_NAME LPAREN arguments RPAREN','function_call',4,'p_function_call','Parser.py',1776),
  ('function_call -> input_statement','function_call',1,'p_function_call','Parser.py',1777),
  ('arguments -> empty','arguments',1,'p_arguments','Parser.py',1792),
  ('arguments -> arg_value arg_tail','arguments',2,'p_arguments','Parser.py',1793),
  ('arg_tail -> COMMA arg_value arg_tail','arg_tail',3,'p_arg_tail','Parser.py',1806),
  ('arg_tail -> empty','arg_tail',1,'p_arg_tail','Parser.py',1807),
  ('arg_value -> literal','arg_value',1,'p_arg_value','Parser.py',1820),
  ('arg_value -> var_call','arg_value',1,'p_arg_value','Parser.py',1821),
  ('output_statement -> DISPLAY output_value next_val SEMICOLON','output_statement',4,'p_output_statement','Parser.py',1830),
  ('output_value -> output_type_cast','output_value',1,'p_output_value','Parser.py',1837),
  ('output_value -> output_expression','output_value',1,'p_output_value','Parser.py',1838),
  ('output_value -> function_call','output_value',1,'p_output_value','Parser.py',1839),
  ('output_expression -> output_factor output_factor_tail','output_expression',2,'p_output_expression','Parser.py',1845),
  ('output_factor -> output_var_call output_postfix','output_factor',2,'p_output_factor','Parser.py',1855),
  ('output_factor -> output_factor1','output_factor',1,'p_output_factor','Parser.py',1856),
  ('output_factor -> TILDE INT_LIT','output_factor',2,'p_output_factor','Parser.py',1857),
  ('output_factor -> TILDE FLT_LIT','output_factor',2,'p_output_factor','Parser.py',1858),
  ('output_factor -> LPAREN output_expression RPAREN','output_factor',3,'p_output_factor','Parser.py',1859),
  ('output_var_call -> IDENT output_list_index','output_var_call',2,'p_output_var_call','Parser.py',1879),
  ('output_postfix_op -> PLUS_PLUS','output_postfix_op',1,'p_output_postfix_op','Parser.py',1885),
  ('output_postfix_op -> MINUS_MINUS','output_postfix_op',1,'p_output_postfix_op','Parser.py',1886),
  ('output_postfix -> empty','output_postfix',1,'p_output_postfix','Parser.py',1891),
  ('output_postfix -> output_postfix_op','output_postfix',1,'p_output_postfix','Parser.py',1892),
  ('output_list_index -> LBRACKET output_index RBRACKET output_list_index2','output_list_index',4,'p_output_list_index','Parser.py',1898),
  ('output_list_index -> empty','output_list_index',1,'p_output_list_index','Parser.py',1899),
  ('output_list_index2 -> LBRACKET output_index RBRACKET','output_list_index2',3,'p_output_list_index2','Parser.py',1909),
  ('output_list_index2 -> empty','output_list_index2',1,'p_output_list_index2','Parser.py',1910),
  ('output_index -> INT_LIT','output_index',1,'p_output_int_lit','Parser.py',1919),
  ('output_index -> IDENT','output_index',1,'p_output_index_ident','Parser.py',1924),
  ('output_factor_tail -> PLUS output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1929),
  ('output_factor_tail -> MINUS output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1930),
  ('output_factor_tail -> MULTIPLY output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1931),
  ('output_factor_tail -> DIVISION output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1932),
  ('output_factor_tail -> MODULO output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1933),
  ('output_factor_tail -> EXPONENT output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1934),
  ('output_factor_tail -> GT output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1935),
  ('output_factor_tail -> LT output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1936),
  ('output_factor_tail -> EQ_EQ output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1937),
  ('output_factor_tail -> GT_EQ output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1938),
  ('output_factor_tail -> LT_EQ output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1939),
  ('output_factor_tail -> NOT_EQ output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1940),
  ('output_factor_tail -> AND output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1941),
  ('output_factor_tail -> OR output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1942),
  ('output_factor_tail -> empty','output_factor_tail',1,'p_output_factor_tail','Parser.py',1943),
  ('output_factor1 -> INT_LIT','output_factor1',1,'p_output_factor1','Parser.py',1957),
  ('output_factor1 -> FLT_LIT','output_factor1',1,'p_output_factor1','Parser.py',1958),
  ('output_factor1 -> DAY','output_factor1',1,'p_output_factor1','Parser.py',1959),
  ('output_factor1 -> NIGHT','output_factor1',1,'p_output_factor1','Parser.py',1960),
  ('output_factor1 -> STR_LIT','output_factor1',1,'p_output_factor1','Parser.py',1961),
  ('output_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','output_type_cast',4,'p_output_type_cast','Parser.py',1966),
  ('output_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','output_type_cast',4,'p_output_type_cast','Parser.py',1967),
  ('output_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','output_type_cast',4,'p_output_type_cast','Parser.py',1968),
  ('output_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','output_type_cast',4,'p_output_type_cast','Parser.py',1969),
  ('next_val -> COMMA value next_val','next_val',3,'p_next_val','Parser.py',1977),
  ('next_val -> empty','next_val',1,'p_next_val','Parser.py',1978),
  ('assignment_statement -> var_call EQ value SEMICOLON','assignment_statement',4,'p_assignment_statement_indexed','Parser.py',1991),
  ('assignment_statement -> IDENT assign_tail SEMICOLON','assignment_statement',3,'p_assignment_statement','Parser.py',2005),
  ('assign_tail -> DOT SPLICE LPAREN start COMMA deleteCount COMMA splice_items RPAREN','assign_tail',9,'p_assign_tail','Parser.py',2022),
  ('assign_tail -> DOT PUSH LPAREN list_element RPAREN','assign_tail',5,'p_assign_tail','Parser.py',2023),
  ('assign_tail -> assign_op assign_value','assign_tail',2,'p_assign_tail','Parser.py',2024),
  ('assign_value -> assign_type_cast','assign_value',1,'p_assign_value','Parser.py',2034),
  ('assign_value -> assign_expression','assign_value',1,'p_assign_value','Parser.py',2035),
  ('assign_value -> function_call','assign_value',1,'p_assign_value','Parser.py',2036),
  ('assign_expression -> assign_factor assign_factor_tail','assign_expression',2,'p_assign_expression','Parser.py',2042),
  ('assign_factor -> assign_var_call assign_postfix','assign_factor',2,'p_assign_factor','Parser.py',2052),
  ('assign_factor -> assign_factor1','assign_factor',1,'p_assign_factor','Parser.py',2053),
  ('assign_factor -> TILDE INT_LIT','assign_factor',2,'p_assign_factor','Parser.py',2054),
  ('assign_factor -> TILDE FLT_LIT','assign_factor',2,'p_assign_factor','Parser.py',2055),
  ('assign_factor -> LPAREN assign_expression RPAREN','assign_factor',3,'p_assign_factor','Parser.py',2056),
  ('assign_var_call -> IDENT assign_list_index','assign_var_call',2,'p_assign_var_call','Parser.py',2076),
  ('assign_postfix_op -> PLUS_PLUS','assign_postfix_op',1,'p_assign_postfix_op','Parser.py',2082),
  ('assign_postfix_op -> MINUS_MINUS','assign_postfix_op',1,'p_assign_postfix_op','Parser.py',2083),
  ('assign_postfix -> empty','assign_postfix',1,'p_assign_postfix','Parser.py',2088),
  ('assign_postfix -> assign_postfix_op','assign_postfix',1,'p_assign_postfix','Parser.py',2089),
  ('assign_list_index -> LBRACKET assign_index RBRACKET assign_list_index2','assign_list_index',4,'p_assign_list_index','Parser.py',2095),
  ('assign_list_index -> empty','assign_list_index',1,'p_assign_list_index','Parser.py',2096),
  ('assign_list_index2 -> LBRACKET assign_index RBRACKET','assign_list_index2',3,'p_assign_list_index2','Parser.py',2106),
  ('assign_list_index2 -> empty','assign_list_index2',1,'p_assign_list_index2','Parser.py',2107),
  ('assign_index -> INT_LIT','assign_index',1,'p_assign_int_lit','Parser.py',2116),
  ('assign_index -> IDENT','assign_index',1,'p_assign_index_ident','Parser.py',2121),
  ('assign_factor_tail -> PLUS assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2126),
  ('assign_factor_tail -> MINUS assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2127),
  ('assign_factor_tail -> MULTIPLY assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2128),
  ('assign_factor_tail -> DIVISION assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2129),
  ('assign_factor_tail -> MODULO assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2130),
  ('assign_factor_tail -> EXPONENT assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2131),
  ('assign_factor_tail -> GT assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2132),
  ('assign_factor_tail -> LT assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2133),
  ('assign_factor_tail -> EQ_EQ assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2134),
  ('assign_factor_tail -> GT_EQ assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2135),
  ('assign_factor_tail -> LT_EQ assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2136),
  ('assign_factor_tail -> NOT_EQ assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2137),
  ('assign_factor_tail -> AND assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2138),
  ('assign_factor_tail -> OR assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2139),
  ('assign_factor_tail -> empty','assign_factor_tail',1,'p_assign_factor_tail','Parser.py',2140),
  ('assign_factor1 -> INT_LIT','assign_factor1',1,'p_assign_factor1','Parser.py',2154),
  ('assign_factor1 -> FLT_LIT','assign_factor1',1,'p_assign_factor1','Parser.py',2155),
  ('assign_factor1 -> DAY','assign_factor1',1,'p_assign_factor1','Parser.py',2156),
  ('assign_factor1 -> NIGHT','assign_factor1',1,'p_assign_factor1','Parser.py',2157),
  ('assign_factor1 -> STR_LIT','assign_factor1',1,'p_assign_factor1','Parser.py',2158),
  ('assign_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','assign_type_cast',4,'p_assign_type_cast','Parser.py',2163),
  ('assign_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','assign_type_cast',4,'p_assign_type_cast','Parser.py',2164),
  ('assign_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','assign_type_cast',4,'p_assign_type_cast','Parser.py',2165),
  ('assign_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','assign_type_cast',4,'p_assign_type_cast','Parser.py',2166),
  ('assign_op -> compound_op','assign_op',1,'p_assign_op','Parser.py',2175),
  ('assign_op -> EQ','assign_op',1,'p_assign_op','Parser.py',2176),
  ('compound_op -> PLUS_EQ','compound_op',1,'p_compound_op','Parser.py',2189),
  ('compound_op -> MINUS_EQ','compound_op',1,'p_compound_op','Parser.py',2190),
  ('compound_op -> MUL_EQ','compound_op',1,'p_compound_op','Parser.py',2191),
  ('compound_op -> DIV_EQ','compound_op',1,'p_compound_op','Parser.py',2192),
  ('compound_op -> MOD_EQ','compound_op',1,'p_compound_op','Parser.py',2193),
  ('start -> INT_LIT','start',1,'p_start','Parser.py',2202),
  ('deleteCount -> empty','deleteCount',1,'p_deleteCount','Parser.py',2212),
  ('deleteCount -> INT_LIT','deleteCount',1,'p_deleteCount','Parser.py',2213),
  ('splice_items -> empty','splice_items',1,'p_splice_items','Parser.py',2226),
  ('splice_items -> list_element','splice_items',1,'p_splice_items','Parser.py',2227),
  ('var_call -> IDENT list_index','var_call',2,'p_var_call','Parser.py',2239),
  ('list_index -> LBRACKET index RBRACKET list_index2','list_index',4,'p_list_index','Parser.py',2250),
  ('list_index -> empty','list_index',1,'p_list_index','Parser.py',2251),
  ('list_index2 -> LBRACKET index RBRACKET','list_index2',3,'p_list_index2','Parser.py',2264),
  ('list_index2 -> empty','list_index2',1,'p_list_index2','Parser.py',2265),
  ('index -> INT_LIT','index',1,'p_index_int_lit','Parser.py',2278),
  ('index -> IDENT','index',1,'p_index_ident','Parser.py',2282),
  ('postfix -> empty','postfix',1,'p_postfix','Parser.py',2291),
  ('postfix -> postfix_op','postfix',1,'p_postfix','Parser.py',2292),
  ('value -> type_cast','value',1,'p_value','Parser.py',2303),
  ('value -> value_expression','value',1,'p_value','Parser.py',2304),
  ('value -> function_call','value',1,'p_value','Parser.py',2305),
  ('value_expression -> value_factor value_factor_tail','value_expression',2,'p_value_expression','Parser.py',2312),
  ('value_factor -> value_var_call value_postfix','value_factor',2,'p_value_factor','Parser.py',2322),
  ('value_factor -> value_factor1','value_factor',1,'p_value_factor','Parser.py',2323),
  ('value_factor -> TILDE INT_LIT','value_factor',2,'p_value_factor','Parser.py',2324),
  ('value_factor -> TILDE FLT_LIT','value_factor',2,'p_value_factor','Parser.py',2325),
  ('value_factor -> LPAREN value_expression RPAREN','value_factor',3,'p_value_factor','Parser.py',2326),
  ('value_var_call -> IDENT value_list_index','value_var_call',2,'p_value_var_call','Parser.py',2347),
  ('value_postfix_op -> PLUS_PLUS','value_postfix_op',1,'p_value_postfix_op','Parser.py',2353),
  ('value_postfix_op -> MINUS_MINUS','value_postfix_op',1,'p_value_postfix_op','Parser.py',2354),
  ('value_postfix -> empty','value_postfix',1,'p_value_postfix','Parser.py',2359),
  ('value_postfix -> value_postfix_op','value_postfix',1,'p_value_postfix','Parser.py',2360),
  ('value_list_index -> LBRACKET value_index RBRACKET value_list_index2','value_list_index',4,'p_value_list_index','Parser.py',2366),
  ('value_list_index -> empty','value_list_index',1,'p_value_list_index','Parser.py',2367),
  ('value_list_index2 -> LBRACKET value_index RBRACKET','value_list_index2',3,'p_value_list_index2','Parser.py',2377),
  ('value_list_index2 -> empty','value_list_index2',1,'p_value_list_index2','Parser.py',2378),
  ('value_index -> INT_LIT','value_index',1,'p_value_int_lit','Parser.py',2387),
  ('value_index -> IDENT','value_index',1,'p_value_index_ident','Parser.py',2392),
  ('value_factor_tail -> PLUS value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2397),
  ('value_factor_tail -> MINUS value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2398),
  ('value_factor_tail -> MULTIPLY value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2399),
  ('value_factor_tail -> DIVISION value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2400),
  ('value_factor_tail -> MODULO value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2401),
  ('value_factor_tail -> EXPONENT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2402),
  ('value_factor_tail -> GT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2403),
  ('value_factor_tail -> LT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2404),
  ('value_factor_tail -> EQ_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2405),
  ('value_factor_tail -> GT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2406),
  ('value_factor_tail -> LT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2407),
  ('value_factor_tail -> NOT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2408),
  ('value_factor_tail -> AND value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2409),
  ('value_factor_tail -> OR value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2410),
  ('value_factor_tail -> empty','value_factor_tail',1,'p_value_factor_tail','Parser.py',2411),
  ('value_factor1 -> INT_LIT','value_factor1',1,'p_value_factor1','Parser.py',2425),
  ('value_factor1 -> FLT_LIT','value_factor1',1,'p_value_factor1','Parser.py',2426),
  ('value_factor1 -> DAY','value_factor1',1,'p_value_factor1','Parser.py',2427),
  ('value_factor1 -> NIGHT','value_factor1',1,'p_value_factor1','Parser.py',2428),
  ('value_factor1 -> STR_LIT','value_factor1',1,'p_value_factor1','Parser.py',2429),
  ('type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',2440),
  ('type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',2441),
  ('type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',2442),
  ('type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',2443),
  ('typecast_value -> typecast_expression','typecast_value',1,'p_typecast_value','Parser.py',2455),
  ('typecast_value -> FUNCTION_NAME LPAREN RPAREN','typecast_value',3,'p_typecast_value','Parser.py',2456),
  ('typecast_value -> input_statement','typecast_value',1,'p_typecast_value','Parser.py',2457),
  ('typecast_expression -> typecast_factor typecast_factor_tail','typecast_expression',2,'p_typecast_expression','Parser.py',2467),
  ('typecast_factor -> var_call postfix','typecast_factor',2,'p_typecast_factor','Parser.py',2477),
  ('typecast_factor -> typecast_factor1','typecast_factor',1,'p_typecast_factor','Parser.py',2478),
  ('typecast_factor -> TILDE INT_LIT','typecast_factor',2,'p_typecast_factor','Parser.py',2479),
  ('typecast_factor -> TILDE FLT_LIT','typecast_factor',2,'p_typecast_factor','Parser.py',2480),
  ('typecast_factor -> LPAREN typecast_expression RPAREN','typecast_factor',3,'p_typecast_factor','Parser.py',2481),
  ('typecast_factor_tail -> PLUS typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2502),
  ('typecast_factor_tail -> MINUS typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2503),
  ('typecast_factor_tail -> MULTIPLY typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2504),
  ('typecast_factor_tail -> DIVISION typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2505),
  ('typecast_factor_tail -> MODULO typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2506),
  ('typecast_factor_tail -> EXPONENT typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2507),
  ('typecast_factor_tail -> GT typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2508),
  ('typecast_factor_tail -> LT typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2509),
  ('typecast_factor_tail -> EQ_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2510),
  ('typecast_factor_tail -> GT_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2511),
  ('typecast_factor_tail -> LT_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2512),
  ('typecast_factor_tail -> NOT_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2513),
  ('typecast_factor_tail -> AND typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2514),
  ('typecast_factor_tail -> OR typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2515),
  ('typecast_factor_tail -> empty','typecast_factor_tail',1,'p_typecast_factor_tail','Parser.py',2516),
  ('typecast_factor1 -> INT_LIT','typecast_factor1',1,'p_typecast_factor1','Parser.py',2530),
  ('typecast_factor1 -> FLT_LIT','typecast_factor1',1,'p_typecast_factor1','Parser.py',2531),
  ('typecast_factor1 -> DAY','typecast_factor1',1,'p_typecast_factor1','Parser.py',2532),
  ('typecast_factor1 -> NIGHT','typecast_factor1',1,'p_typecast_factor1','Parser.py',2533),
  ('typecast_factor1 -> STR_LIT','typecast_factor1',1,'p_typecast_factor1','Parser.py',2534),
  ('input_statement -> INPUT LPAREN RPAREN','input_statement',3,'p_input_statement','Parser.py',2542),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',2547),
]
