
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEXPONENTrightNOTMINUSleftMULTIPLYDIVISIONMODULOleftPLUSMINUSleftPLUS_PLUSMINUS_MINUSleftEQ_EQNOT_EQLTGTLT_EQGT_EQleftANDleftORrightEQPLUS_EQMINUS_EQMUL_EQDIV_EQMOD_EQAND BIRTH BLN BLN_LIT CHECK CHR CHR_LIT COLON COMMA COMMENT CONVERT_TO_BLN CONVERT_TO_FLT CONVERT_TO_INT CONVERT_TO_STR DAY DISPLAY DIVISION DIV_EQ DOUBLE_LT DOUBLE_SLASH EOF EQ EQ_EQ EXPONENT FLT FLT_LIT FOR FUNCTION FUNCTION_BLN FUNCTION_CHR FUNCTION_FLT FUNCTION_INT FUNCTION_LIST_BLN FUNCTION_LIST_BLN2D FUNCTION_LIST_CHR FUNCTION_LIST_CHR2D FUNCTION_LIST_FLT FUNCTION_LIST_FLT2D FUNCTION_LIST_INT FUNCTION_LIST_INT2D FUNCTION_LIST_STR FUNCTION_LIST_STR2D FUNCTION_NAME FUNCTION_STR GHOST GLOBAL GT GT_EQ IDENT ILLEGAL IN INPUT INT INT_LIT LBRACE LBRACKET LIST_BLN LIST_BLN2D LIST_CHR LIST_CHR2D LIST_FLT LIST_FLT2D LIST_INT LIST_INT2D LIST_STR LIST_STR2D LPAREN LT LT_EQ MEASURE MINUS MINUS_EQ MINUS_MINUS MODULO MOD_EQ MULTIPLY MUL_EQ NEWLINE NIGHT NOT NOT_EQ OR OTHERWISE OTHERWISE_CHECK PLUS PLUS_EQ PLUS_PLUS POW RBRACE RBRACKET REPEAT REVIVE RPAREN SEMICOLON SHIFT SKIP STOP STR STR_LIT SWAP TILDE TYPE UNTILprogram : BIRTH global_declarations statements GHOSTvar_call : IDENTvar_dec : INT IDENT\n               | FLT IDENT\n               | STR IDENT\n               | CHR IDENT\n               | BLN IDENTvar_initialization : var_dec EQ expressionlist_dec : INT LBRACKET RBRACKET IDENT\n                 | FLT LBRACKET RBRACKET IDENT\n                 | STR LBRACKET RBRACKET IDENT\n                 | CHR LBRACKET RBRACKET IDENT\n                 | BLN LBRACKET RBRACKET IDENTglobal_declarations : GLOBAL var_call\n                            | var_dec\n                            | var_initialization\n                            | list_dec\n                            | emptystatements : statement\n                  | statements statement\n                  | statements NEWLINE\n                  | emptystatement : variable_declaration\n                 | assignment\n                 | function_call\n                 | function_declaration\n                 | loop\n                 | conditional\n                 | io_statement\n                 | switch_statement\n                 | return_statement\n                 | stop_statement\n                 | skip_statement\n                 | measure_statementfunction_declaration : FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE\n                              | FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE\n                              | FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE\n                              | FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE\n                              | FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE\n                              | FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACEparameters : INT IDENT COMMA parameters\n                   | FLT IDENT COMMA parameters\n                   | STR IDENT COMMA parameters\n                   | CHR IDENT COMMA parameters\n                   | BLN IDENT COMMA parameters\n                   | INT IDENT\n                   | FLT IDENT\n                   | STR IDENT\n                   | CHR IDENT\n                   | BLN IDENT\n                   | emptyvariable_declaration : INT IDENT EQ expression\n                            | FLT IDENT EQ expression\n                            | STR IDENT EQ expression\n                            | CHR IDENT EQ expression\n                            | BLN IDENT EQ expressionassignment : IDENT EQ expressionfunction_call : FUNCTION_NAME LPAREN arguments RPARENloop : FOR LPAREN control_variable SEMICOLON relational_expression SEMICOLON update RPAREN LBRACE statements RBRACEcontrol_variable : INT IDENT EQ INT_LIT\n                        | FLT IDENT EQ FLT_LIT\n                        | STR IDENT EQ STR_LIT\n                        | CHR IDENT EQ CHR_LIT\n                        | BLN IDENT EQ BLN_LIT\n                        | var_callrelational_expression : expressionupdate : unary\n              | assignment_statementunary : IDENT unary_opunary_op : PLUS_PLUS\n                | MINUS_MINUSassignment_statement : var_call assign_op valuevalue : literal\n             | expression\n             | var_call\n             | function_call\n             | type_cast\n             | not_op\n             | negative_valassign_op : EQ\n                 | PLUS_EQ\n                 | MINUS_EQ\n                 | MUL_EQ\n                 | DIV_EQ\n                 | MOD_EQconditional : CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPARENio_statement : DISPLAY LPAREN expression RPAREN\n                    | INPUT LPAREN IDENT RPARENswitch_statement : SWAP LPAREN expression RPAREN LBRACE case_list RBRACEcase_list : case\n                 | case_list casecase : SHIFT expression COLON statementsreturn_statement : REVIVE expressionstop_statement : STOPskip_statement : SKIPmeasure_statement : MEASURE LPAREN expression RPARENexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVISION expression\n                  | expression MODULO expression\n                  | expression EXPONENT expression\n                  | expression EQ_EQ expression\n                  | expression NOT_EQ expression\n                  | expression LT expression\n                  | expression GT expression\n                  | expression LT_EQ expression\n                  | expression GT_EQ expression\n                  | expression AND expression\n                  | expression OR expression\n                  | NOT expression\n                  | LPAREN expression RPAREN\n                  | IDENT\n                  | INT_LIT\n                  | FLT_LIT\n                  | STR_LIT\n                  | BLN_LIT\n                  | function_callarguments : expression COMMA arguments\n                 | expression\n                 | emptyempty :literal : INT_LIT\n               | FLT_LIT\n               | STR_LIT\n               | BLN_LIT\n               | CHR_LITtype_cast : CONVERT_TO_INT LPAREN value RPAREN\n                 | CONVERT_TO_FLT LPAREN value RPAREN\n                 | CONVERT_TO_STR LPAREN value RPAREN\n                 | CONVERT_TO_BLN LPAREN value RPARENnot_op : NOT valuenegative_val : MINUS value'
    
_lr_action_items = {'BIRTH':([0,],[2,]),'$end':([1,64,],[0,-1,]),'GLOBAL':([2,],[4,]),'INT':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,80,85,88,89,90,91,92,93,95,102,110,111,112,113,114,115,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,216,217,218,219,220,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[9,29,-15,-16,-17,-18,29,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,117,-93,-113,-114,-115,-116,-117,-118,-8,-57,157,157,157,157,157,157,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,29,29,157,157,157,157,157,29,29,29,29,29,29,29,29,29,29,29,29,-89,-35,-36,-37,-38,-39,-40,29,29,29,29,29,29,-59,-86,]),'FLT':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,80,85,88,89,90,91,92,93,95,102,110,111,112,113,114,115,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,216,217,218,219,220,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[10,31,-15,-16,-17,-18,31,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,118,-93,-113,-114,-115,-116,-117,-118,-8,-57,158,158,158,158,158,158,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,31,31,158,158,158,158,158,31,31,31,31,31,31,31,31,31,31,31,31,-89,-35,-36,-37,-38,-39,-40,31,31,31,31,31,31,-59,-86,]),'STR':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,80,85,88,89,90,91,92,93,95,102,110,111,112,113,114,115,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,216,217,218,219,220,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[11,32,-15,-16,-17,-18,32,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,119,-93,-113,-114,-115,-116,-117,-118,-8,-57,159,159,159,159,159,159,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,32,32,159,159,159,159,159,32,32,32,32,32,32,32,32,32,32,32,32,-89,-35,-36,-37,-38,-39,-40,32,32,32,32,32,32,-59,-86,]),'CHR':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,80,85,88,89,90,91,92,93,95,102,110,111,112,113,114,115,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,216,217,218,219,220,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[12,33,-15,-16,-17,-18,33,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,120,-93,-113,-114,-115,-116,-117,-118,-8,-57,160,160,160,160,160,160,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,33,33,160,160,160,160,160,33,33,33,33,33,33,33,33,33,33,33,33,-89,-35,-36,-37,-38,-39,-40,33,33,33,33,33,33,-59,-86,]),'BLN':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,80,85,88,89,90,91,92,93,95,102,110,111,112,113,114,115,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,216,217,218,219,220,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[13,34,-15,-16,-17,-18,34,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,121,-93,-113,-114,-115,-116,-117,-118,-8,-57,161,161,161,161,161,161,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,34,34,161,161,161,161,161,34,34,34,34,34,34,34,34,34,34,34,34,-89,-35,-36,-37,-38,-39,-40,34,34,34,34,34,34,-59,-86,]),'IDENT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,47,48,49,51,52,53,54,56,58,60,62,65,66,68,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,168,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,226,232,235,236,242,243,244,245,246,253,256,257,258,259,260,261,266,267,268,269,270,271,272,274,275,289,290,296,297,298,307,308,309,310,311,312,323,325,],[-122,30,52,-15,-16,-17,-18,54,56,58,60,62,30,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,67,69,70,71,72,88,-94,-95,-14,-2,88,-3,-4,-5,-6,-7,-20,-21,88,88,52,88,88,125,88,-93,88,88,-113,-114,-115,-116,-117,-118,88,-8,144,145,146,147,148,88,-57,88,88,88,88,169,170,171,172,173,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,88,196,197,198,199,200,88,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,30,30,30,30,30,30,30,250,30,88,30,30,30,30,30,30,-89,-35,-36,-37,-38,-39,-40,291,-80,-81,-82,-83,-84,-85,30,30,291,291,30,30,30,291,291,291,291,30,-59,88,-86,]),'FUNCTION_NAME':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,36,37,38,39,40,41,47,48,49,51,52,53,54,56,58,60,62,65,66,68,73,81,82,84,85,86,87,88,89,90,91,92,93,94,95,101,102,103,104,105,106,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,147,148,149,150,151,152,153,154,155,168,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,235,236,242,243,244,245,246,253,256,257,258,259,260,261,266,267,268,269,270,271,272,274,275,289,290,296,297,298,307,308,309,310,311,312,323,325,],[-122,35,-15,-16,-17,-18,35,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,74,75,76,77,78,79,35,-94,-95,-14,-2,35,-3,-4,-5,-6,-7,-20,-21,35,35,35,35,35,-93,35,35,-113,-114,-115,-116,-117,-118,35,-8,35,-57,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,35,35,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-89,-35,-36,-37,-38,-39,-40,35,-80,-81,-82,-83,-84,-85,35,35,35,35,35,35,35,35,35,35,35,35,-59,35,-86,]),'FUNCTION':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,36,-15,-16,-17,-18,36,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-89,-35,-36,-37,-38,-39,-40,36,36,36,36,36,36,-59,-86,]),'FUNCTION_INT':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,37,-15,-16,-17,-18,37,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-89,-35,-36,-37,-38,-39,-40,37,37,37,37,37,37,-59,-86,]),'FUNCTION_FLT':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,38,-15,-16,-17,-18,38,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-89,-35,-36,-37,-38,-39,-40,38,38,38,38,38,38,-59,-86,]),'FUNCTION_STR':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,39,-15,-16,-17,-18,39,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-89,-35,-36,-37,-38,-39,-40,39,39,39,39,39,39,-59,-86,]),'FUNCTION_CHR':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,40,-15,-16,-17,-18,40,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-89,-35,-36,-37,-38,-39,-40,40,40,40,40,40,40,-59,-86,]),'FUNCTION_BLN':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,41,-15,-16,-17,-18,41,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-89,-35,-36,-37,-38,-39,-40,41,41,41,41,41,41,-59,-86,]),'FOR':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,42,-15,-16,-17,-18,42,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-89,-35,-36,-37,-38,-39,-40,42,42,42,42,42,42,-59,-86,]),'CHECK':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,43,-15,-16,-17,-18,43,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-89,-35,-36,-37,-38,-39,-40,43,43,43,43,43,43,-59,-86,]),'DISPLAY':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,44,-15,-16,-17,-18,44,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-89,-35,-36,-37,-38,-39,-40,44,44,44,44,44,44,-59,-86,]),'INPUT':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,45,-15,-16,-17,-18,45,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-89,-35,-36,-37,-38,-39,-40,45,45,45,45,45,45,-59,-86,]),'SWAP':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,46,-15,-16,-17,-18,46,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-89,-35,-36,-37,-38,-39,-40,46,46,46,46,46,46,-59,-86,]),'REVIVE':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,47,-15,-16,-17,-18,47,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-89,-35,-36,-37,-38,-39,-40,47,47,47,47,47,47,-59,-86,]),'STOP':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,48,-15,-16,-17,-18,48,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-89,-35,-36,-37,-38,-39,-40,48,48,48,48,48,48,-59,-86,]),'SKIP':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,49,-15,-16,-17,-18,49,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-89,-35,-36,-37,-38,-39,-40,49,49,49,49,49,49,-59,-86,]),'MEASURE':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,50,-15,-16,-17,-18,50,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-89,-35,-36,-37,-38,-39,-40,50,50,50,50,50,50,-59,-86,]),'GHOST':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,253,256,257,258,259,260,261,312,325,],[-122,-122,-15,-16,-17,-18,64,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,-89,-35,-36,-37,-38,-39,-40,-59,-86,]),'NEWLINE':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,51,52,54,56,58,60,62,65,66,85,88,89,90,91,92,93,95,102,141,144,145,146,147,148,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,236,242,243,244,245,246,253,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-122,-122,-15,-16,-17,-18,66,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-14,-2,-3,-4,-5,-6,-7,-20,-21,-93,-113,-114,-115,-116,-117,-118,-8,-57,-111,-9,-10,-11,-12,-13,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,-122,-122,-122,-122,-122,-122,-122,66,66,66,66,66,66,66,-89,-35,-36,-37,-38,-39,-40,-122,-122,-122,66,66,66,-59,-86,]),'EQ':([5,30,54,56,58,60,62,67,69,70,71,72,169,170,171,172,173,250,251,],[53,68,-3,-4,-5,-6,-7,101,103,104,105,106,208,209,210,211,212,-2,267,]),'LBRACKET':([9,10,11,12,13,],[55,57,59,61,63,]),'RBRACE':([15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,65,66,85,88,89,90,91,92,93,102,141,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,213,215,221,222,223,224,225,232,233,234,236,242,243,244,245,246,253,254,256,257,258,259,260,261,274,275,296,297,298,311,312,325,],[-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-20,-21,-93,-113,-114,-115,-116,-117,-118,-57,-111,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,-122,-122,-122,-122,-122,-122,-122,252,253,-90,256,257,258,259,260,261,-89,-91,-35,-36,-37,-38,-39,-40,-122,-122,-122,-92,312,317,-59,-86,]),'SHIFT':([15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,49,65,66,85,88,89,90,91,92,93,102,141,149,150,151,152,153,154,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,214,233,234,253,254,256,257,258,259,260,261,274,297,312,325,],[-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-94,-95,-20,-21,-93,-113,-114,-115,-116,-117,-118,-57,-111,-52,-53,-54,-55,-56,-58,-87,-88,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-96,235,235,-90,-89,-91,-35,-36,-37,-38,-39,-40,-122,-92,-59,-86,]),'LPAREN':([35,42,43,44,45,46,47,50,53,68,73,74,75,76,77,78,79,81,82,84,86,87,94,101,103,104,105,106,127,128,129,130,131,132,133,134,135,136,137,138,139,140,155,168,235,266,267,268,269,270,271,272,289,290,292,293,294,295,307,308,309,310,322,323,],[73,80,81,82,83,84,87,94,87,87,87,110,111,112,113,114,115,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-80,-81,-82,-83,-84,-85,87,87,307,308,309,310,87,87,87,87,323,87,]),'NOT':([47,53,68,73,81,82,84,86,87,94,101,103,104,105,106,127,128,129,130,131,132,133,134,135,136,137,138,139,140,155,168,235,266,267,268,269,270,271,272,289,290,307,308,309,310,323,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,290,-80,-81,-82,-83,-84,-85,290,290,290,290,290,290,86,]),'INT_LIT':([47,53,68,73,81,82,84,86,87,94,101,103,104,105,106,127,128,129,130,131,132,133,134,135,136,137,138,139,140,155,168,208,235,266,267,268,269,270,271,272,289,290,307,308,309,310,323,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,227,89,284,-80,-81,-82,-83,-84,-85,284,302,284,284,284,284,89,]),'FLT_LIT':([47,53,68,73,81,82,84,86,87,94,101,103,104,105,106,127,128,129,130,131,132,133,134,135,136,137,138,139,140,155,168,209,235,266,267,268,269,270,271,272,289,290,307,308,309,310,323,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,228,90,285,-80,-81,-82,-83,-84,-85,285,303,285,285,285,285,90,]),'STR_LIT':([47,53,68,73,81,82,84,86,87,94,101,103,104,105,106,127,128,129,130,131,132,133,134,135,136,137,138,139,140,155,168,210,235,266,267,268,269,270,271,272,289,290,307,308,309,310,323,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,229,91,286,-80,-81,-82,-83,-84,-85,286,304,286,286,286,286,91,]),'BLN_LIT':([47,53,68,73,81,82,84,86,87,94,101,103,104,105,106,127,128,129,130,131,132,133,134,135,136,137,138,139,140,155,168,212,235,266,267,268,269,270,271,272,289,290,307,308,309,310,323,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,231,92,287,-80,-81,-82,-83,-84,-85,287,305,287,287,287,287,92,]),'SEMICOLON':([52,88,89,90,91,92,93,116,122,141,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,206,207,227,228,229,230,231,],[-2,-113,-114,-115,-116,-117,-118,168,-65,-111,-58,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,226,-66,-60,-61,-62,-63,-64,]),'RBRACKET':([55,57,59,61,63,],[96,97,98,99,100,]),'RPAREN':([73,88,89,90,91,92,93,107,108,109,110,111,112,113,114,115,123,124,125,126,141,142,143,154,155,156,162,163,164,165,166,167,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,197,198,199,200,216,217,218,219,220,237,238,239,240,241,247,248,249,263,264,265,276,277,278,279,280,281,282,283,284,285,286,287,288,291,299,300,301,302,303,304,305,306,313,314,315,316,318,319,320,321,324,],[-122,-113,-114,-115,-116,-117,-118,154,-120,-121,-122,-122,-122,-122,-122,-122,174,175,176,177,-111,192,193,-58,-122,195,-51,201,202,203,204,205,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-119,-46,-47,-48,-49,-50,-122,-122,-122,-122,-122,-41,-42,-43,-44,-45,262,-67,-68,-69,-70,-71,-75,-72,-73,-74,-76,-77,-78,-79,-114,-115,-116,-117,-127,-2,-133,-74,-132,-114,-115,-116,-117,-76,318,319,320,321,-128,-129,-130,-131,325,]),'PLUS':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,279,280,284,285,286,287,291,300,302,303,304,305,306,324,],[127,-113,-114,-115,-116,-117,-118,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-58,-97,127,127,127,127,127,-103,-104,-105,-106,-107,-108,-109,-110,-112,127,127,127,-118,-114,-115,-116,-117,-113,127,-114,-115,-116,-117,-118,127,]),'MINUS':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,266,267,268,269,270,271,272,279,280,284,285,286,287,289,290,291,300,302,303,304,305,306,307,308,309,310,324,],[128,-113,-114,-115,-116,-117,-118,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-58,-97,128,-99,-100,-101,128,-103,-104,-105,-106,-107,-108,-109,-110,-112,128,128,289,-80,-81,-82,-83,-84,-85,128,-118,-114,-115,-116,-117,289,289,-113,128,-114,-115,-116,-117,-118,289,289,289,289,128,]),'MULTIPLY':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,279,280,284,285,286,287,291,300,302,303,304,305,306,324,],[129,-113,-114,-115,-116,-117,-118,129,129,129,129,129,129,129,129,129,129,129,129,129,129,-58,-97,129,-99,-100,-101,129,-103,-104,-105,-106,-107,-108,-109,-110,-112,129,129,129,-118,-114,-115,-116,-117,-113,129,-114,-115,-116,-117,-118,129,]),'DIVISION':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,279,280,284,285,286,287,291,300,302,303,304,305,306,324,],[130,-113,-114,-115,-116,-117,-118,130,130,130,130,130,130,130,130,130,130,130,130,130,130,-58,-97,130,-99,-100,-101,130,-103,-104,-105,-106,-107,-108,-109,-110,-112,130,130,130,-118,-114,-115,-116,-117,-113,130,-114,-115,-116,-117,-118,130,]),'MODULO':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,279,280,284,285,286,287,291,300,302,303,304,305,306,324,],[131,-113,-114,-115,-116,-117,-118,131,131,131,131,131,131,131,131,131,131,131,131,131,131,-58,-97,131,-99,-100,-101,131,-103,-104,-105,-106,-107,-108,-109,-110,-112,131,131,131,-118,-114,-115,-116,-117,-113,131,-114,-115,-116,-117,-118,131,]),'EXPONENT':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,279,280,284,285,286,287,291,300,302,303,304,305,306,324,],[132,-113,-114,-115,-116,-117,-118,132,132,132,132,132,132,-111,132,132,132,132,132,132,132,-58,-97,-98,-99,-100,-101,132,-103,-104,-105,-106,-107,-108,-109,-110,-112,132,132,132,-118,-114,-115,-116,-117,-113,-111,-114,-115,-116,-117,-118,132,]),'EQ_EQ':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,279,280,284,285,286,287,291,300,302,303,304,305,306,324,],[133,-113,-114,-115,-116,-117,-118,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-58,133,133,133,133,133,133,-103,-104,-105,-106,-107,-108,-109,-110,-112,133,133,133,-118,-114,-115,-116,-117,-113,133,-114,-115,-116,-117,-118,133,]),'NOT_EQ':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,279,280,284,285,286,287,291,300,302,303,304,305,306,324,],[134,-113,-114,-115,-116,-117,-118,134,134,134,134,134,134,134,134,134,134,134,134,134,134,-58,134,134,134,134,134,134,-103,-104,-105,-106,-107,-108,-109,-110,-112,134,134,134,-118,-114,-115,-116,-117,-113,134,-114,-115,-116,-117,-118,134,]),'LT':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,279,280,284,285,286,287,291,300,302,303,304,305,306,324,],[135,-113,-114,-115,-116,-117,-118,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-58,135,135,135,135,135,135,-103,-104,-105,-106,-107,-108,-109,-110,-112,135,135,135,-118,-114,-115,-116,-117,-113,135,-114,-115,-116,-117,-118,135,]),'GT':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,279,280,284,285,286,287,291,300,302,303,304,305,306,324,],[136,-113,-114,-115,-116,-117,-118,136,136,136,136,136,136,136,136,136,136,136,136,136,136,-58,136,136,136,136,136,136,-103,-104,-105,-106,-107,-108,-109,-110,-112,136,136,136,-118,-114,-115,-116,-117,-113,136,-114,-115,-116,-117,-118,136,]),'LT_EQ':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,279,280,284,285,286,287,291,300,302,303,304,305,306,324,],[137,-113,-114,-115,-116,-117,-118,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-58,137,137,137,137,137,137,-103,-104,-105,-106,-107,-108,-109,-110,-112,137,137,137,-118,-114,-115,-116,-117,-113,137,-114,-115,-116,-117,-118,137,]),'GT_EQ':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,279,280,284,285,286,287,291,300,302,303,304,305,306,324,],[138,-113,-114,-115,-116,-117,-118,138,138,138,138,138,138,138,138,138,138,138,138,138,138,-58,138,138,138,138,138,138,-103,-104,-105,-106,-107,-108,-109,-110,-112,138,138,138,-118,-114,-115,-116,-117,-113,138,-114,-115,-116,-117,-118,138,]),'AND':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,279,280,284,285,286,287,291,300,302,303,304,305,306,324,],[139,-113,-114,-115,-116,-117,-118,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-58,139,139,139,139,139,139,139,139,139,139,139,139,-109,-110,-112,139,139,139,-118,-114,-115,-116,-117,-113,139,-114,-115,-116,-117,-118,139,]),'OR':([85,88,89,90,91,92,93,95,102,108,123,124,126,141,142,143,149,150,151,152,153,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,207,255,279,280,284,285,286,287,291,300,302,303,304,305,306,324,],[140,-113,-114,-115,-116,-117,-118,140,140,140,140,140,140,140,140,140,140,140,140,140,140,-58,140,140,140,140,140,140,140,140,140,140,140,140,140,-110,-112,140,140,140,-118,-114,-115,-116,-117,-113,140,-114,-115,-116,-117,-118,140,]),'COMMA':([88,89,90,91,92,93,108,141,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,196,197,198,199,200,],[-113,-114,-115,-116,-117,-118,155,-111,-58,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,216,217,218,219,220,]),'COLON':([88,89,90,91,92,93,141,154,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,255,],[-113,-114,-115,-116,-117,-118,-111,-58,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,274,]),'LBRACE':([174,177,195,201,202,203,204,205,262,273,],[213,214,215,221,222,223,224,225,275,296,]),'CHR_LIT':([211,266,267,268,269,270,271,272,289,290,307,308,309,310,],[230,288,-80,-81,-82,-83,-84,-85,288,288,288,288,288,288,]),'PLUS_EQ':([250,251,],[-2,268,]),'MINUS_EQ':([250,251,],[-2,269,]),'MUL_EQ':([250,251,],[-2,270,]),'DIV_EQ':([250,251,],[-2,271,]),'MOD_EQ':([250,251,],[-2,272,]),'PLUS_PLUS':([250,],[264,]),'MINUS_MINUS':([250,],[265,]),'OTHERWISE':([252,],[273,]),'CONVERT_TO_INT':([266,267,268,269,270,271,272,289,290,307,308,309,310,],[292,-80,-81,-82,-83,-84,-85,292,292,292,292,292,292,]),'CONVERT_TO_FLT':([266,267,268,269,270,271,272,289,290,307,308,309,310,],[293,-80,-81,-82,-83,-84,-85,293,293,293,293,293,293,]),'CONVERT_TO_STR':([266,267,268,269,270,271,272,289,290,307,308,309,310,],[294,-80,-81,-82,-83,-84,-85,294,294,294,294,294,294,]),'CONVERT_TO_BLN':([266,267,268,269,270,271,272,289,290,307,308,309,310,],[295,-80,-81,-82,-83,-84,-85,295,295,295,295,295,295,]),'OTHERWISE_CHECK':([317,],[322,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_declarations':([2,],[3,]),'var_dec':([2,],[5,]),'var_initialization':([2,],[6,]),'list_dec':([2,],[7,]),'empty':([2,3,73,110,111,112,113,114,115,155,213,215,216,217,218,219,220,221,222,223,224,225,274,275,296,],[8,16,109,162,162,162,162,162,162,109,16,16,162,162,162,162,162,16,16,16,16,16,16,16,16,]),'statements':([3,213,215,221,222,223,224,225,274,275,296,],[14,232,236,242,243,244,245,246,297,298,311,]),'statement':([3,14,213,215,221,222,223,224,225,232,236,242,243,244,245,246,274,275,296,297,298,311,],[15,65,15,15,15,15,15,15,15,65,65,65,65,65,65,65,15,15,15,65,65,65,]),'variable_declaration':([3,14,213,215,221,222,223,224,225,232,236,242,243,244,245,246,274,275,296,297,298,311,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'assignment':([3,14,213,215,221,222,223,224,225,232,236,242,243,244,245,246,274,275,296,297,298,311,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'function_call':([3,14,47,53,68,73,81,82,84,86,87,94,101,103,104,105,106,127,128,129,130,131,132,133,134,135,136,137,138,139,140,155,168,213,215,221,222,223,224,225,232,235,236,242,243,244,245,246,266,274,275,289,290,296,297,298,307,308,309,310,311,323,],[19,19,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,19,19,19,19,19,19,19,19,93,19,19,19,19,19,19,280,19,19,280,306,19,19,19,280,280,280,280,19,93,]),'function_declaration':([3,14,213,215,221,222,223,224,225,232,236,242,243,244,245,246,274,275,296,297,298,311,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'loop':([3,14,213,215,221,222,223,224,225,232,236,242,243,244,245,246,274,275,296,297,298,311,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'conditional':([3,14,213,215,221,222,223,224,225,232,236,242,243,244,245,246,274,275,296,297,298,311,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'io_statement':([3,14,213,215,221,222,223,224,225,232,236,242,243,244,245,246,274,275,296,297,298,311,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'switch_statement':([3,14,213,215,221,222,223,224,225,232,236,242,243,244,245,246,274,275,296,297,298,311,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'return_statement':([3,14,213,215,221,222,223,224,225,232,236,242,243,244,245,246,274,275,296,297,298,311,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'stop_statement':([3,14,213,215,221,222,223,224,225,232,236,242,243,244,245,246,274,275,296,297,298,311,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'skip_statement':([3,14,213,215,221,222,223,224,225,232,236,242,243,244,245,246,274,275,296,297,298,311,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'measure_statement':([3,14,213,215,221,222,223,224,225,232,236,242,243,244,245,246,274,275,296,297,298,311,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'var_call':([4,80,226,266,289,290,307,308,309,310,],[51,122,251,276,276,276,276,276,276,276,]),'expression':([47,53,68,73,81,82,84,86,87,94,101,103,104,105,106,127,128,129,130,131,132,133,134,135,136,137,138,139,140,155,168,235,266,289,290,307,308,309,310,323,],[85,95,102,108,123,124,126,141,142,143,149,150,151,152,153,178,179,180,181,182,183,184,185,186,187,188,189,190,191,108,207,255,279,279,300,279,279,279,279,324,]),'arguments':([73,155,],[107,194,]),'control_variable':([80,],[116,]),'parameters':([110,111,112,113,114,115,216,217,218,219,220,],[156,163,164,165,166,167,237,238,239,240,241,]),'relational_expression':([168,],[206,]),'case_list':([214,],[233,]),'case':([214,233,],[234,254,]),'update':([226,],[247,]),'unary':([226,],[248,]),'assignment_statement':([226,],[249,]),'unary_op':([250,],[263,]),'assign_op':([251,],[266,]),'value':([266,289,290,307,308,309,310,],[277,299,301,313,314,315,316,]),'literal':([266,289,290,307,308,309,310,],[278,278,278,278,278,278,278,]),'type_cast':([266,289,290,307,308,309,310,],[281,281,281,281,281,281,281,]),'not_op':([266,289,290,307,308,309,310,],[282,282,282,282,282,282,282,]),'negative_val':([266,289,290,307,308,309,310,],[283,283,283,283,283,283,283,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BIRTH global_declarations statements GHOST','program',4,'p_program','Parser.py',37),
  ('var_call -> IDENT','var_call',1,'p_var_call','Parser.py',42),
  ('var_dec -> INT IDENT','var_dec',2,'p_var_dec','Parser.py',46),
  ('var_dec -> FLT IDENT','var_dec',2,'p_var_dec','Parser.py',47),
  ('var_dec -> STR IDENT','var_dec',2,'p_var_dec','Parser.py',48),
  ('var_dec -> CHR IDENT','var_dec',2,'p_var_dec','Parser.py',49),
  ('var_dec -> BLN IDENT','var_dec',2,'p_var_dec','Parser.py',50),
  ('var_initialization -> var_dec EQ expression','var_initialization',3,'p_var_initialization','Parser.py',54),
  ('list_dec -> INT LBRACKET RBRACKET IDENT','list_dec',4,'p_list_dec','Parser.py',58),
  ('list_dec -> FLT LBRACKET RBRACKET IDENT','list_dec',4,'p_list_dec','Parser.py',59),
  ('list_dec -> STR LBRACKET RBRACKET IDENT','list_dec',4,'p_list_dec','Parser.py',60),
  ('list_dec -> CHR LBRACKET RBRACKET IDENT','list_dec',4,'p_list_dec','Parser.py',61),
  ('list_dec -> BLN LBRACKET RBRACKET IDENT','list_dec',4,'p_list_dec','Parser.py',62),
  ('global_declarations -> GLOBAL var_call','global_declarations',2,'p_global_declarations','Parser.py',66),
  ('global_declarations -> var_dec','global_declarations',1,'p_global_declarations','Parser.py',67),
  ('global_declarations -> var_initialization','global_declarations',1,'p_global_declarations','Parser.py',68),
  ('global_declarations -> list_dec','global_declarations',1,'p_global_declarations','Parser.py',69),
  ('global_declarations -> empty','global_declarations',1,'p_global_declarations','Parser.py',70),
  ('statements -> statement','statements',1,'p_statements','Parser.py',75),
  ('statements -> statements statement','statements',2,'p_statements','Parser.py',76),
  ('statements -> statements NEWLINE','statements',2,'p_statements','Parser.py',77),
  ('statements -> empty','statements',1,'p_statements','Parser.py',78),
  ('statement -> variable_declaration','statement',1,'p_statement','Parser.py',90),
  ('statement -> assignment','statement',1,'p_statement','Parser.py',91),
  ('statement -> function_call','statement',1,'p_statement','Parser.py',92),
  ('statement -> function_declaration','statement',1,'p_statement','Parser.py',93),
  ('statement -> loop','statement',1,'p_statement','Parser.py',94),
  ('statement -> conditional','statement',1,'p_statement','Parser.py',95),
  ('statement -> io_statement','statement',1,'p_statement','Parser.py',96),
  ('statement -> switch_statement','statement',1,'p_statement','Parser.py',97),
  ('statement -> return_statement','statement',1,'p_statement','Parser.py',98),
  ('statement -> stop_statement','statement',1,'p_statement','Parser.py',99),
  ('statement -> skip_statement','statement',1,'p_statement','Parser.py',100),
  ('statement -> measure_statement','statement',1,'p_statement','Parser.py',101),
  ('function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE','function_declaration',8,'p_function_declaration','Parser.py',105),
  ('function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE','function_declaration',8,'p_function_declaration','Parser.py',106),
  ('function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE','function_declaration',8,'p_function_declaration','Parser.py',107),
  ('function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE','function_declaration',8,'p_function_declaration','Parser.py',108),
  ('function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE','function_declaration',8,'p_function_declaration','Parser.py',109),
  ('function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE','function_declaration',8,'p_function_declaration','Parser.py',110),
  ('parameters -> INT IDENT COMMA parameters','parameters',4,'p_parameters','Parser.py',114),
  ('parameters -> FLT IDENT COMMA parameters','parameters',4,'p_parameters','Parser.py',115),
  ('parameters -> STR IDENT COMMA parameters','parameters',4,'p_parameters','Parser.py',116),
  ('parameters -> CHR IDENT COMMA parameters','parameters',4,'p_parameters','Parser.py',117),
  ('parameters -> BLN IDENT COMMA parameters','parameters',4,'p_parameters','Parser.py',118),
  ('parameters -> INT IDENT','parameters',2,'p_parameters','Parser.py',119),
  ('parameters -> FLT IDENT','parameters',2,'p_parameters','Parser.py',120),
  ('parameters -> STR IDENT','parameters',2,'p_parameters','Parser.py',121),
  ('parameters -> CHR IDENT','parameters',2,'p_parameters','Parser.py',122),
  ('parameters -> BLN IDENT','parameters',2,'p_parameters','Parser.py',123),
  ('parameters -> empty','parameters',1,'p_parameters','Parser.py',124),
  ('variable_declaration -> INT IDENT EQ expression','variable_declaration',4,'p_variable_declaration','Parser.py',134),
  ('variable_declaration -> FLT IDENT EQ expression','variable_declaration',4,'p_variable_declaration','Parser.py',135),
  ('variable_declaration -> STR IDENT EQ expression','variable_declaration',4,'p_variable_declaration','Parser.py',136),
  ('variable_declaration -> CHR IDENT EQ expression','variable_declaration',4,'p_variable_declaration','Parser.py',137),
  ('variable_declaration -> BLN IDENT EQ expression','variable_declaration',4,'p_variable_declaration','Parser.py',138),
  ('assignment -> IDENT EQ expression','assignment',3,'p_assignment','Parser.py',143),
  ('function_call -> FUNCTION_NAME LPAREN arguments RPAREN','function_call',4,'p_function_call','Parser.py',148),
  ('loop -> FOR LPAREN control_variable SEMICOLON relational_expression SEMICOLON update RPAREN LBRACE statements RBRACE','loop',11,'p_loop','Parser.py',153),
  ('control_variable -> INT IDENT EQ INT_LIT','control_variable',4,'p_control_variable','Parser.py',157),
  ('control_variable -> FLT IDENT EQ FLT_LIT','control_variable',4,'p_control_variable','Parser.py',158),
  ('control_variable -> STR IDENT EQ STR_LIT','control_variable',4,'p_control_variable','Parser.py',159),
  ('control_variable -> CHR IDENT EQ CHR_LIT','control_variable',4,'p_control_variable','Parser.py',160),
  ('control_variable -> BLN IDENT EQ BLN_LIT','control_variable',4,'p_control_variable','Parser.py',161),
  ('control_variable -> var_call','control_variable',1,'p_control_variable','Parser.py',162),
  ('relational_expression -> expression','relational_expression',1,'p_relational_expression','Parser.py',169),
  ('update -> unary','update',1,'p_update','Parser.py',173),
  ('update -> assignment_statement','update',1,'p_update','Parser.py',174),
  ('unary -> IDENT unary_op','unary',2,'p_unary','Parser.py',178),
  ('unary_op -> PLUS_PLUS','unary_op',1,'p_unary_op','Parser.py',182),
  ('unary_op -> MINUS_MINUS','unary_op',1,'p_unary_op','Parser.py',183),
  ('assignment_statement -> var_call assign_op value','assignment_statement',3,'p_assignment_statement','Parser.py',187),
  ('value -> literal','value',1,'p_value','Parser.py',191),
  ('value -> expression','value',1,'p_value','Parser.py',192),
  ('value -> var_call','value',1,'p_value','Parser.py',193),
  ('value -> function_call','value',1,'p_value','Parser.py',194),
  ('value -> type_cast','value',1,'p_value','Parser.py',195),
  ('value -> not_op','value',1,'p_value','Parser.py',196),
  ('value -> negative_val','value',1,'p_value','Parser.py',197),
  ('assign_op -> EQ','assign_op',1,'p_assign_op','Parser.py',202),
  ('assign_op -> PLUS_EQ','assign_op',1,'p_assign_op','Parser.py',203),
  ('assign_op -> MINUS_EQ','assign_op',1,'p_assign_op','Parser.py',204),
  ('assign_op -> MUL_EQ','assign_op',1,'p_assign_op','Parser.py',205),
  ('assign_op -> DIV_EQ','assign_op',1,'p_assign_op','Parser.py',206),
  ('assign_op -> MOD_EQ','assign_op',1,'p_assign_op','Parser.py',207),
  ('conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN','conditional',15,'p_conditional','Parser.py',211),
  ('io_statement -> DISPLAY LPAREN expression RPAREN','io_statement',4,'p_io_statement','Parser.py',216),
  ('io_statement -> INPUT LPAREN IDENT RPAREN','io_statement',4,'p_io_statement','Parser.py',217),
  ('switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE','switch_statement',7,'p_switch_statement','Parser.py',226),
  ('case_list -> case','case_list',1,'p_case_list','Parser.py',231),
  ('case_list -> case_list case','case_list',2,'p_case_list','Parser.py',232),
  ('case -> SHIFT expression COLON statements','case',4,'p_case','Parser.py',240),
  ('return_statement -> REVIVE expression','return_statement',2,'p_return_statement','Parser.py',245),
  ('stop_statement -> STOP','stop_statement',1,'p_stop_statement','Parser.py',249),
  ('skip_statement -> SKIP','skip_statement',1,'p_skip_statement','Parser.py',253),
  ('measure_statement -> MEASURE LPAREN expression RPAREN','measure_statement',4,'p_measure_statement','Parser.py',257),
  ('expression -> expression PLUS expression','expression',3,'p_expression','Parser.py',264),
  ('expression -> expression MINUS expression','expression',3,'p_expression','Parser.py',265),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','Parser.py',266),
  ('expression -> expression DIVISION expression','expression',3,'p_expression','Parser.py',267),
  ('expression -> expression MODULO expression','expression',3,'p_expression','Parser.py',268),
  ('expression -> expression EXPONENT expression','expression',3,'p_expression','Parser.py',269),
  ('expression -> expression EQ_EQ expression','expression',3,'p_expression','Parser.py',270),
  ('expression -> expression NOT_EQ expression','expression',3,'p_expression','Parser.py',271),
  ('expression -> expression LT expression','expression',3,'p_expression','Parser.py',272),
  ('expression -> expression GT expression','expression',3,'p_expression','Parser.py',273),
  ('expression -> expression LT_EQ expression','expression',3,'p_expression','Parser.py',274),
  ('expression -> expression GT_EQ expression','expression',3,'p_expression','Parser.py',275),
  ('expression -> expression AND expression','expression',3,'p_expression','Parser.py',276),
  ('expression -> expression OR expression','expression',3,'p_expression','Parser.py',277),
  ('expression -> NOT expression','expression',2,'p_expression','Parser.py',278),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','Parser.py',279),
  ('expression -> IDENT','expression',1,'p_expression','Parser.py',280),
  ('expression -> INT_LIT','expression',1,'p_expression','Parser.py',281),
  ('expression -> FLT_LIT','expression',1,'p_expression','Parser.py',282),
  ('expression -> STR_LIT','expression',1,'p_expression','Parser.py',283),
  ('expression -> BLN_LIT','expression',1,'p_expression','Parser.py',284),
  ('expression -> function_call','expression',1,'p_expression','Parser.py',285),
  ('arguments -> expression COMMA arguments','arguments',3,'p_arguments','Parser.py',322),
  ('arguments -> expression','arguments',1,'p_arguments','Parser.py',323),
  ('arguments -> empty','arguments',1,'p_arguments','Parser.py',324),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',334),
  ('literal -> INT_LIT','literal',1,'p_literal','Parser.py',347),
  ('literal -> FLT_LIT','literal',1,'p_literal','Parser.py',348),
  ('literal -> STR_LIT','literal',1,'p_literal','Parser.py',349),
  ('literal -> BLN_LIT','literal',1,'p_literal','Parser.py',350),
  ('literal -> CHR_LIT','literal',1,'p_literal','Parser.py',351),
  ('type_cast -> CONVERT_TO_INT LPAREN value RPAREN','type_cast',4,'p_type_cast','Parser.py',355),
  ('type_cast -> CONVERT_TO_FLT LPAREN value RPAREN','type_cast',4,'p_type_cast','Parser.py',356),
  ('type_cast -> CONVERT_TO_STR LPAREN value RPAREN','type_cast',4,'p_type_cast','Parser.py',357),
  ('type_cast -> CONVERT_TO_BLN LPAREN value RPAREN','type_cast',4,'p_type_cast','Parser.py',358),
  ('not_op -> NOT value','not_op',2,'p_not_op','Parser.py',362),
  ('negative_val -> MINUS value','negative_val',2,'p_negative_val','Parser.py',366),
]
