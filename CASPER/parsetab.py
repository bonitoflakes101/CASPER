
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEXPONENTrightNOTMINUSleftMULTIPLYDIVISIONMODULOleftPLUSMINUSleftPLUS_PLUSMINUS_MINUSleftEQ_EQNOT_EQLTGTLT_EQGT_EQleftANDleftORrightEQPLUS_EQMINUS_EQMUL_EQDIV_EQMOD_EQAND BIRTH BLN BLN_LIT CHECK CHR CHR_LIT COLON COMMA COMMENT CONVERT_TO_BLN CONVERT_TO_FLT CONVERT_TO_INT CONVERT_TO_STR DAY DISPLAY DIVISION DIV_EQ DOUBLE_LT DOUBLE_SLASH EOF EQ EQ_EQ EXPONENT FLT FLT_LIT FOR FUNCTION FUNCTION_BLN FUNCTION_CHR FUNCTION_FLT FUNCTION_INT FUNCTION_LIST_BLN FUNCTION_LIST_BLN2D FUNCTION_LIST_CHR FUNCTION_LIST_CHR2D FUNCTION_LIST_FLT FUNCTION_LIST_FLT2D FUNCTION_LIST_INT FUNCTION_LIST_INT2D FUNCTION_LIST_STR FUNCTION_LIST_STR2D FUNCTION_NAME FUNCTION_STR GHOST GLOBAL GT GT_EQ IDENT ILLEGAL IN INPUT INT INT_LIT LBRACE LBRACKET LIST_BLN LIST_BLN2D LIST_CHR LIST_CHR2D LIST_FLT LIST_FLT2D LIST_INT LIST_INT2D LIST_STR LIST_STR2D LPAREN LT LT_EQ MEASURE MINUS MINUS_EQ MINUS_MINUS MODULO MOD_EQ MULTIPLY MUL_EQ NEWLINE NIGHT NOT NOT_EQ OR OTHERWISE OTHERWISE_CHECK PLUS PLUS_EQ PLUS_PLUS POW RBRACE RBRACKET REPEAT REVIVE RPAREN SEMICOLON SHIFT SKIP STOP STR STR_LIT SWAP TILDE TYPE UNTILprogram : BIRTH global_dec function_statements main_function GHOSTmain_function : FUNCTION_NAME LPAREN RPAREN LBRACE statements RBRACEglobal_dec : global_statement global_tail\n                  | emptyglobal_tail : global_dec\n                   | emptyglobal_statement : data_type IDENT global_statement_tailglobal_statement_tail : empty\n                             | COMMA IDENT global_statement_tail\n                             | EQ global_dec_value global_tail2global_tail2 : empty\n                    | COMMA IDENT global_statement_tailglobal_dec_value : global_value\n                        | LBRACKET list_element RBRACKETglobal_value : factor\n                    | expressionvar_statement : data_type IDENT var_tailvar_tail : empty\n                | EQ tail_value var_tail2\n                | COMMA IDENT var_tailvar_tail2 : empty\n                 | COMMA IDENT var_tailtail_value : value\n                  | LBRACKET list_element RBRACKETlist_element : literal element_tailelement_tail : empty\n                    | COMMA list_elementindex : INT_LIT\n             | IDENTdata_type : INT\n                 | FLT\n                 | BLN\n                 | CHR\n                 | STRvalue : factor\n             | type_cast\n             | expression\n             | function_calltype_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPARENtypecast_value : IDENT\n                      | literal\n                      | expression\n                      | FUNCTION_NAME LPAREN RPAREN\n                      | input_statementliteral : INT_LIT\n               | FLT_LIT\n               | DAY\n               | NIGHT\n               | CHR_LIT\n               | STR_LITexpression : expr_head expr_tailexpr_head : term term_tailterm : factor factor_tailfactor : var_call\n              | literal\n              | TILDE literal\n              | LPAREN expression RPARENfactor_tail : empty\n                   | PLUS expression\n                   | MINUS expression\n                   | MULTIPLY expression\n                   | DIVISION expression\n                   | MODULO expression\n                   | EXPONENT expressionterm_tail : empty\n                 | GT expression\n                 | LT expression\n                 | EQ_EQ expression\n                 | GT_EQ expression\n                 | LT_EQ expression\n                 | NOT_EQ expressionexpr_tail : empty\n                 | AND expression\n                 | OR expressionvar_call : IDENT var_call_tailvar_call_tail : empty\n                     | LBRACKET index RBRACKETfunction_statements : ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements revive RBRACE\n                         | emptyret_type : FUNCTION\n                | function_dtypefunction_dtype : FUNCTION_INT\n                      | FUNCTION_FLT\n                      | FUNCTION_CHR\n                      | FUNCTION_BLN\n                      | FUNCTION_STR\n                      | FUNCTION_LIST_INT\n                      | FUNCTION_LIST_FLT\n                      | FUNCTION_LIST_CHR\n                      | FUNCTION_LIST_STR\n                      | FUNCTION_LIST_BLNparameters : data_type IDENT parameters_tail\n                  | emptyparameters_tail : empty\n                       | COMMA data_type IDENT parameters_tailrevive : REVIVE value\n              | emptystatements : empty\n                  | local_dec statements_tailstatements_tail : empty\n                       | statements\n                       | conditional_statement statements_tail\n                       | switch_statement statements_tail\n                       | loop_statement statements_tail\n                       | function_call statements_tail\n                       | string_operation_statement statements_tail\n                       | global_reference statements_tail\n                       | output_statement statements_taillocal_dec : var_statement\n                 | emptyconditional_statement : CHECK LPAREN expression RPAREN LBRACE statements RBRACE conditional_tailconditional_tail : empty\n                        | OTHERWISE_CHECK LPAREN expression RPAREN LBRACE statements RBRACE\n                        | OTHERWISE LBRACE statements RBRACEswitch_statement : SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE statements RBRACEswitch_condition : SHIFT value COLON statements switchcond_tailswitchcond_tail : empty\n                       | switch_conditionloop_statement : for_loop\n                      | until_loop\n                      | repeat_untilfor_loop : FOR LPAREN control_variable SEMICOLON expression SEMICOLON update RPAREN LBRACE statements RBRACEuntil_loop : UNTIL LPAREN expression RPAREN LBRACE statements RBRACErepeat_until : REPEAT LBRACE statements RBRACE UNTIL LPAREN expression RPARENcontrol_variable : INT IDENT EQ INT_LITupdate : var_call update_tailupdate_tail : postfix\n                   | assign_op valuepostfix : PLUS_PLUS\n               | MINUS_MINUSfunction_call : FUNCTION_NAME LPAREN arguments RPAREN\n                     | input_statementarguments : empty\n                 | arg_value arg_tailarg_tail : empty\n                | COMMA arg_value arg_tailarg_value : literal\n                 | var_calloutput_statement : DISPLAY value next_valnext_val : empty\n                | COMMA value next_valinput_statement : INPUT LPAREN RPARENstring_operation_statement : var_call string_operation_tailstring_operation_tail : assign_op value\n                             | PLUS string_val stringcon_tailassign_op : PLUS_EQ\n                 | MINUS_EQ\n                 | MUL_EQ\n                 | DIV_EQ\n                 | MOD_EQstringcon_tail : empty\n                      | PLUS string_val stringcon_tailstring_val : var_call\n                  | STR_LITglobal_reference : GLOBAL var_call EQ valueempty :'
    
_lr_action_items = {'BIRTH':([0,],[2,]),'$end':([1,38,],[0,-1,]),'FUNCTION':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-159,15,-159,-4,-3,-5,-4,-159,-7,-8,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_INT':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-159,17,-159,-4,-3,-5,-4,-159,-7,-8,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_FLT':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-159,18,-159,-4,-3,-5,-4,-159,-7,-8,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_CHR':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-159,19,-159,-4,-3,-5,-4,-159,-7,-8,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_BLN':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-159,20,-159,-4,-3,-5,-4,-159,-7,-8,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_STR':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-159,21,-159,-4,-3,-5,-4,-159,-7,-8,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_LIST_INT':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-159,22,-159,-4,-3,-5,-4,-159,-7,-8,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_LIST_FLT':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-159,23,-159,-4,-3,-5,-4,-159,-7,-8,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_LIST_CHR':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-159,24,-159,-4,-3,-5,-4,-159,-7,-8,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_LIST_STR':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-159,25,-159,-4,-3,-5,-4,-159,-7,-8,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_LIST_BLN':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-159,26,-159,-4,-3,-5,-4,-159,-7,-8,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_NAME':([2,3,4,5,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,96,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,131,133,136,138,139,140,141,142,143,144,147,148,149,151,154,159,172,173,175,176,177,178,179,181,182,183,184,185,192,194,195,196,199,209,210,211,212,213,214,215,216,217,218,219,220,225,226,227,229,230,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,280,282,288,289,290,294,296,297,301,305,308,310,311,313,322,323,324,326,],[-159,-159,-159,-4,32,33,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-3,-5,-4,-159,-7,-8,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,150,-112,-159,-12,-80,-113,150,150,150,150,150,150,150,-122,-123,-124,-135,150,-159,-146,150,-149,-150,-151,-152,-153,-159,-35,-36,-37,-38,-159,-17,-18,150,150,-147,-159,-156,-157,150,-142,-143,150,248,248,248,248,-145,-159,-23,-159,-81,-134,-148,-154,-158,-159,-19,-21,-20,-159,-159,-144,-39,-40,-41,-42,-159,-159,-24,150,-155,-22,-159,-159,-126,-114,-115,-159,150,-127,-159,-118,-159,-117,-125,-159,-116,]),'INT':([2,4,30,34,35,40,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,96,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,130,131,133,136,138,139,140,141,142,143,144,147,148,149,151,159,172,181,182,183,184,185,190,192,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,282,288,289,290,294,296,297,301,308,310,311,313,322,323,324,326,],[7,7,-159,-7,-8,7,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,7,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,7,-112,7,7,-12,-80,-113,7,7,7,7,7,7,7,-122,-123,-124,-135,-159,-146,-159,-35,-36,-37,-38,222,7,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,7,-159,-144,-39,-40,-41,-42,7,-159,-24,-155,-22,-159,7,-126,-114,-115,7,-127,7,-118,7,-117,-125,7,-116,]),'FLT':([2,4,30,34,35,40,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,96,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,130,131,133,136,138,139,140,141,142,143,144,147,148,149,151,159,172,181,182,183,184,185,192,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,282,288,289,290,294,296,297,301,308,310,311,313,322,323,324,326,],[8,8,-159,-7,-8,8,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,8,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,8,-112,8,8,-12,-80,-113,8,8,8,8,8,8,8,-122,-123,-124,-135,-159,-146,-159,-35,-36,-37,-38,8,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,8,-159,-144,-39,-40,-41,-42,8,-159,-24,-155,-22,-159,8,-126,-114,-115,8,-127,8,-118,8,-117,-125,8,-116,]),'BLN':([2,4,30,34,35,40,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,96,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,130,131,133,136,138,139,140,141,142,143,144,147,148,149,151,159,172,181,182,183,184,185,192,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,282,288,289,290,294,296,297,301,308,310,311,313,322,323,324,326,],[9,9,-159,-7,-8,9,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,9,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,9,-112,9,9,-12,-80,-113,9,9,9,9,9,9,9,-122,-123,-124,-135,-159,-146,-159,-35,-36,-37,-38,9,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,9,-159,-144,-39,-40,-41,-42,9,-159,-24,-155,-22,-159,9,-126,-114,-115,9,-127,9,-118,9,-117,-125,9,-116,]),'CHR':([2,4,30,34,35,40,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,96,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,130,131,133,136,138,139,140,141,142,143,144,147,148,149,151,159,172,181,182,183,184,185,192,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,282,288,289,290,294,296,297,301,308,310,311,313,322,323,324,326,],[10,10,-159,-7,-8,10,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,10,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,10,-112,10,10,-12,-80,-113,10,10,10,10,10,10,10,-122,-123,-124,-135,-159,-146,-159,-35,-36,-37,-38,10,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,10,-159,-144,-39,-40,-41,-42,10,-159,-24,-155,-22,-159,10,-126,-114,-115,10,-127,10,-118,10,-117,-125,10,-116,]),'STR':([2,4,30,34,35,40,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,96,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,130,131,133,136,138,139,140,141,142,143,144,147,148,149,151,159,172,181,182,183,184,185,192,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,282,288,289,290,294,296,297,301,308,310,311,313,322,323,324,326,],[11,11,-159,-7,-8,11,-159,-159,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-9,-10,-11,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,11,-159,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,11,-112,11,11,-12,-80,-113,11,11,11,11,11,11,11,-122,-123,-124,-135,-159,-146,-159,-35,-36,-37,-38,11,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,11,-159,-144,-39,-40,-41,-42,11,-159,-24,-155,-22,-159,11,-126,-114,-115,11,-127,11,-118,11,-117,-125,11,-116,]),'IDENT':([6,7,8,9,10,11,36,37,47,48,50,51,52,53,54,55,56,57,58,59,62,67,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,126,127,133,136,138,139,140,141,142,143,144,147,148,149,151,153,154,159,161,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,191,192,194,195,196,197,199,209,210,211,212,213,214,215,216,217,218,219,220,222,225,226,227,229,235,238,239,240,241,242,243,253,257,258,259,261,262,265,266,267,269,270,271,274,276,277,280,282,284,287,288,289,290,294,296,297,301,305,308,309,310,311,313,322,323,324,326,],[30,-30,-31,-32,-33,-34,41,52,-57,-58,52,-159,-159,-48,-49,-50,-51,-52,-53,-159,98,99,-56,-61,52,52,52,52,52,52,-59,-159,-54,-75,52,52,-78,-79,115,-55,-68,52,52,52,52,52,52,-159,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,52,-112,159,-159,-80,-113,52,52,52,52,52,52,52,-122,-123,-124,-135,52,52,-159,201,52,203,52,-146,52,52,-149,-150,-151,-152,-153,-159,-35,-36,-37,-38,52,-159,-17,-18,52,229,52,-147,-159,-156,-157,52,-142,-143,52,245,245,245,245,254,-145,-159,-23,-159,-134,52,52,-148,-154,-158,-159,52,-19,-21,276,-20,-159,-159,-144,-39,-40,-41,-42,-159,-159,-24,52,-155,52,52,-22,-159,-159,-126,-114,-115,-159,52,-127,52,-159,-118,-159,-117,-125,-159,-116,]),'COMMA':([30,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,69,70,71,78,80,81,82,85,86,88,89,98,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,151,159,181,182,183,184,185,201,206,207,208,225,226,227,229,235,243,264,267,269,270,271,276,277,],[36,36,67,-13,-15,-16,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,103,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,130,36,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-135,197,216,-35,-36,-37,-38,130,238,-140,-141,-145,259,-23,197,-134,216,238,-39,-40,-41,-42,197,-24,]),'EQ':([30,41,52,85,86,99,133,159,180,229,254,276,],[37,37,-159,-78,-79,37,-80,196,213,196,273,196,]),'GHOST':([31,134,],[38,-2,]),'LPAREN':([32,33,37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,145,146,150,154,155,156,158,169,173,175,176,177,178,179,186,187,188,189,191,196,199,213,216,217,218,219,220,248,253,275,280,287,298,305,309,],[39,40,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,169,170,171,50,190,191,193,50,50,-149,-150,-151,-152,-153,217,218,219,220,50,50,50,50,50,50,50,50,50,268,50,287,50,50,309,50,50,]),'LBRACKET':([37,52,196,245,],[44,87,228,87,]),'TILDE':([37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,154,169,173,175,176,177,178,179,191,196,199,213,216,217,218,219,220,253,280,287,305,309,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-149,-150,-151,-152,-153,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'INT_LIT':([37,44,49,50,72,73,74,75,76,77,83,84,87,90,91,92,93,94,95,103,154,169,171,173,175,176,177,178,179,191,196,199,213,216,217,218,219,220,228,238,253,273,280,287,305,309,],[53,53,53,53,53,53,53,53,53,53,53,53,114,53,53,53,53,53,53,53,53,53,53,53,-149,-150,-151,-152,-153,53,53,53,53,53,53,53,53,53,53,53,53,285,53,53,53,53,]),'FLT_LIT':([37,44,49,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,103,154,169,171,173,175,176,177,178,179,191,196,199,213,216,217,218,219,220,228,238,253,280,287,305,309,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-149,-150,-151,-152,-153,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'DAY':([37,44,49,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,103,154,169,171,173,175,176,177,178,179,191,196,199,213,216,217,218,219,220,228,238,253,280,287,305,309,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-149,-150,-151,-152,-153,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'NIGHT':([37,44,49,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,103,154,169,171,173,175,176,177,178,179,191,196,199,213,216,217,218,219,220,228,238,253,280,287,305,309,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-149,-150,-151,-152,-153,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'CHR_LIT':([37,44,49,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,103,154,169,171,173,175,176,177,178,179,191,196,199,213,216,217,218,219,220,228,238,253,280,287,305,309,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-149,-150,-151,-152,-153,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'STR_LIT':([37,44,49,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,103,154,169,171,173,174,175,176,177,178,179,191,196,199,213,216,217,218,219,220,228,238,239,253,280,287,305,309,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,212,-149,-150,-151,-152,-153,58,58,58,58,58,58,58,58,58,58,58,212,58,58,58,58,58,]),'RPAREN':([39,40,47,48,51,52,53,54,55,56,57,58,59,61,63,70,71,78,79,80,81,82,85,86,88,89,98,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,128,129,133,151,171,182,183,184,185,193,201,202,203,204,205,206,207,208,223,225,232,235,236,237,244,245,246,247,249,250,251,252,264,267,268,269,270,271,281,283,292,295,303,304,306,307,314,315,],[60,-159,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,97,-96,-56,-61,-59,110,-159,-54,-75,-78,-79,-55,-68,-159,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-95,-97,-80,-135,-159,-35,-36,-37,-38,225,-159,233,234,235,-136,-159,-140,-141,255,-145,-98,-134,-137,-138,267,-43,-44,-45,-47,269,270,271,-159,-39,283,-40,-41,-42,-139,-46,302,308,-129,-130,-132,-133,-131,321,]),'PLUS':([45,47,48,52,53,54,55,56,57,58,78,80,85,86,110,133,152,182,210,211,212,245,246,265,],[72,-57,-58,-159,-48,-49,-50,-51,-52,-53,-59,72,-78,-79,-60,-80,174,72,239,-156,-157,-159,-58,239,]),'MINUS':([45,47,48,52,53,54,55,56,57,58,78,80,85,86,110,133,182,245,246,],[73,-57,-58,-159,-48,-49,-50,-51,-52,-53,-59,73,-78,-79,-60,-80,73,-159,-58,]),'MULTIPLY':([45,47,48,52,53,54,55,56,57,58,78,80,85,86,110,133,182,245,246,],[74,-57,-58,-159,-48,-49,-50,-51,-52,-53,-59,74,-78,-79,-60,-80,74,-159,-58,]),'DIVISION':([45,47,48,52,53,54,55,56,57,58,78,80,85,86,110,133,182,245,246,],[75,-57,-58,-159,-48,-49,-50,-51,-52,-53,-59,75,-78,-79,-60,-80,75,-159,-58,]),'MODULO':([45,47,48,52,53,54,55,56,57,58,78,80,85,86,110,133,182,245,246,],[76,-57,-58,-159,-48,-49,-50,-51,-52,-53,-59,76,-78,-79,-60,-80,76,-159,-58,]),'EXPONENT':([45,47,48,52,53,54,55,56,57,58,78,80,85,86,110,133,182,245,246,],[77,-57,-58,-159,-48,-49,-50,-51,-52,-53,-59,77,-78,-79,-60,-80,77,-159,-58,]),'GT':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,182,245,246,],[-159,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,90,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-159,-159,-58,]),'LT':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,182,245,246,],[-159,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,91,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-159,-159,-58,]),'EQ_EQ':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,182,245,246,],[-159,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,92,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-159,-159,-58,]),'GT_EQ':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,182,245,246,],[-159,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,93,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-159,-159,-58,]),'LT_EQ':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,182,245,246,],[-159,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,94,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-159,-159,-58,]),'NOT_EQ':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,182,245,246,],[-159,-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,95,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-159,-159,-58,]),'AND':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,182,245,246,],[-159,-57,-58,83,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-159,-159,-58,]),'OR':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,182,245,246,],[-159,-57,-58,84,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-159,-159,-58,]),'CHECK':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,144,147,148,149,151,159,172,181,182,183,184,185,192,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,282,288,289,290,294,296,297,301,308,310,311,313,322,323,324,326,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,145,-112,-159,-80,-113,145,145,145,145,145,145,145,-122,-123,-124,-135,-159,-146,-159,-35,-36,-37,-38,-159,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,-159,-159,-144,-39,-40,-41,-42,-159,-159,-24,-155,-22,-159,-159,-126,-114,-115,-159,-127,-159,-118,-159,-117,-125,-159,-116,]),'SWAP':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,144,147,148,149,151,159,172,181,182,183,184,185,192,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,282,288,289,290,294,296,297,301,308,310,311,313,322,323,324,326,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,146,-112,-159,-80,-113,146,146,146,146,146,146,146,-122,-123,-124,-135,-159,-146,-159,-35,-36,-37,-38,-159,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,-159,-159,-144,-39,-40,-41,-42,-159,-159,-24,-155,-22,-159,-159,-126,-114,-115,-159,-127,-159,-118,-159,-117,-125,-159,-116,]),'GLOBAL':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,144,147,148,149,151,159,172,181,182,183,184,185,192,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,282,288,289,290,294,296,297,301,308,310,311,313,322,323,324,326,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,153,-112,-159,-80,-113,153,153,153,153,153,153,153,-122,-123,-124,-135,-159,-146,-159,-35,-36,-37,-38,-159,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,-159,-159,-144,-39,-40,-41,-42,-159,-159,-24,-155,-22,-159,-159,-126,-114,-115,-159,-127,-159,-118,-159,-117,-125,-159,-116,]),'DISPLAY':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,144,147,148,149,151,159,172,181,182,183,184,185,192,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,282,288,289,290,294,296,297,301,308,310,311,313,322,323,324,326,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,154,-112,-159,-80,-113,154,154,154,154,154,154,154,-122,-123,-124,-135,-159,-146,-159,-35,-36,-37,-38,-159,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,-159,-159,-144,-39,-40,-41,-42,-159,-159,-24,-155,-22,-159,-159,-126,-114,-115,-159,-127,-159,-118,-159,-117,-125,-159,-116,]),'FOR':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,144,147,148,149,151,159,172,181,182,183,184,185,192,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,282,288,289,290,294,296,297,301,308,310,311,313,322,323,324,326,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,155,-112,-159,-80,-113,155,155,155,155,155,155,155,-122,-123,-124,-135,-159,-146,-159,-35,-36,-37,-38,-159,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,-159,-159,-144,-39,-40,-41,-42,-159,-159,-24,-155,-22,-159,-159,-126,-114,-115,-159,-127,-159,-118,-159,-117,-125,-159,-116,]),'UNTIL':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,144,147,148,149,151,159,172,181,182,183,184,185,192,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,256,257,258,261,262,265,266,267,269,270,271,274,276,277,282,288,289,290,294,296,297,301,308,310,311,313,322,323,324,326,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,156,-112,-159,-80,-113,156,156,156,156,156,156,156,-122,-123,-124,-135,-159,-146,-159,-35,-36,-37,-38,-159,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,275,-19,-21,-20,-159,-159,-144,-39,-40,-41,-42,-159,-159,-24,-155,-22,-159,-159,-126,-114,-115,-159,-127,-159,-118,-159,-117,-125,-159,-116,]),'REPEAT':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,144,147,148,149,151,159,172,181,182,183,184,185,192,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,282,288,289,290,294,296,297,301,308,310,311,313,322,323,324,326,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,157,-112,-159,-80,-113,157,157,157,157,157,157,157,-122,-123,-124,-135,-159,-146,-159,-35,-36,-37,-38,-159,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,-159,-159,-144,-39,-40,-41,-42,-159,-159,-24,-155,-22,-159,-159,-126,-114,-115,-159,-127,-159,-118,-159,-117,-125,-159,-116,]),'INPUT':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,144,147,148,149,151,154,159,172,173,175,176,177,178,179,181,182,183,184,185,192,194,195,196,199,209,210,211,212,213,214,215,216,217,218,219,220,225,226,227,229,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,280,282,288,289,290,294,296,297,301,305,308,310,311,313,322,323,324,326,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-113,158,-112,-159,-80,-113,158,158,158,158,158,158,158,-122,-123,-124,-135,158,-159,-146,158,-149,-150,-151,-152,-153,-159,-35,-36,-37,-38,-159,-17,-18,158,158,-147,-159,-156,-157,158,-142,-143,158,158,158,158,158,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,-159,-159,-144,-39,-40,-41,-42,-159,-159,-24,158,-155,-22,-159,-159,-126,-114,-115,-159,158,-127,-159,-118,-159,-117,-125,-159,-116,]),'RBRACE':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,122,123,124,125,127,133,135,136,137,138,139,140,141,142,143,144,147,148,149,151,159,160,162,163,164,165,166,167,168,172,181,182,183,184,185,192,194,195,198,200,209,210,211,212,214,215,224,225,226,227,229,231,235,240,241,242,243,257,258,261,262,265,266,267,269,270,271,274,276,277,278,282,286,288,289,290,294,296,297,300,308,310,311,313,316,320,322,323,324,325,326,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-159,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,134,-101,-159,-112,-159,-80,-102,-101,-104,-159,-159,-159,-159,-159,-159,-159,-122,-123,-124,-135,-159,-159,-105,-106,-107,-108,-109,-110,-111,-146,-159,-35,-36,-37,-38,-159,-17,-18,230,-100,-147,-159,-156,-157,-142,-143,256,-145,-159,-23,-159,-99,-134,-148,-154,-158,-159,-19,-21,-20,-159,-159,-144,-39,-40,-41,-42,-159,-159,-24,289,-155,294,-22,-159,-159,-126,-114,-115,311,-127,-159,-118,-159,322,323,-117,-125,-159,326,-116,]),'REVIVE':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,135,136,137,138,139,140,141,142,143,144,147,148,149,151,159,160,162,163,164,165,166,167,168,172,181,182,183,184,185,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,265,266,267,269,270,271,276,277,282,288,289,294,296,297,308,311,322,323,326,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-101,-159,-112,-159,-80,-102,-101,-104,-159,-159,-159,-159,-159,-159,-159,-122,-123,-124,-135,-159,199,-105,-106,-107,-108,-109,-110,-111,-146,-159,-35,-36,-37,-38,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,-159,-144,-39,-40,-41,-42,-159,-24,-155,-22,-159,-126,-114,-115,-127,-118,-117,-125,-116,]),'SHIFT':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,133,135,136,137,138,139,140,141,142,143,144,147,148,149,151,159,162,163,164,165,166,167,168,172,181,182,183,184,185,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,263,265,266,267,269,270,271,276,277,282,288,289,294,296,297,301,308,311,312,322,323,326,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-101,-159,-112,-80,-102,-101,-104,-159,-159,-159,-159,-159,-159,-159,-122,-123,-124,-135,-159,-105,-106,-107,-108,-109,-110,-111,-146,-159,-35,-36,-37,-38,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,280,-159,-144,-39,-40,-41,-42,-159,-24,-155,-22,-159,-126,-114,-115,-159,-127,-118,280,-117,-125,-116,]),'OTHERWISE':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,133,135,136,137,138,139,140,141,142,143,144,147,148,149,151,159,162,163,164,165,166,167,168,172,181,182,183,184,185,194,195,209,210,211,212,214,215,225,226,227,229,235,240,241,242,243,257,258,261,265,266,267,269,270,271,276,277,279,282,288,289,294,296,297,301,308,311,312,317,318,319,322,323,326,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-101,-159,-112,-80,-102,-101,-104,-159,-159,-159,-159,-159,-159,-159,-122,-123,-124,-135,-159,-105,-106,-107,-108,-109,-110,-111,-146,-159,-35,-36,-37,-38,-17,-18,-147,-159,-156,-157,-142,-143,-145,-159,-23,-159,-134,-148,-154,-158,-159,-19,-21,-20,-159,-144,-39,-40,-41,-42,-159,-24,290,-155,-22,299,-126,-114,-115,-159,-127,-118,-159,-119,-120,-121,-117,-125,-116,]),'COLON':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,151,182,183,184,185,225,235,267,269,270,271,291,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-135,-35,-36,-37,-38,-145,-134,-39,-40,-41,-42,301,]),'SEMICOLON':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,221,272,285,],[-57,-58,-159,-159,-48,-49,-50,-51,-52,-53,-159,-56,-61,-59,-159,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,253,284,-128,]),'PLUS_EQ':([52,85,86,133,152,293,],[-159,-78,-79,-80,175,175,]),'MINUS_EQ':([52,85,86,133,152,293,],[-159,-78,-79,-80,176,176,]),'MUL_EQ':([52,85,86,133,152,293,],[-159,-78,-79,-80,177,177,]),'DIV_EQ':([52,85,86,133,152,293,],[-159,-78,-79,-80,178,178,]),'MOD_EQ':([52,85,86,133,152,293,],[-159,-78,-79,-80,179,179,]),'PLUS_PLUS':([52,85,86,133,293,],[-159,-78,-79,-80,306,]),'MINUS_MINUS':([52,85,86,133,293,],[-159,-78,-79,-80,307,]),'RBRACKET':([53,54,55,56,57,58,68,69,101,102,113,114,115,132,260,],[-48,-49,-50,-51,-52,-53,100,-159,-25,-26,133,-28,-29,-27,277,]),'LBRACE':([60,97,157,233,234,255,299,302,321,],[96,127,192,262,263,274,310,313,324,]),'CONVERT_TO_INT':([154,173,175,176,177,178,179,196,199,213,216,280,305,],[186,186,-149,-150,-151,-152,-153,186,186,186,186,186,186,]),'CONVERT_TO_FLT':([154,173,175,176,177,178,179,196,199,213,216,280,305,],[187,187,-149,-150,-151,-152,-153,187,187,187,187,187,187,]),'CONVERT_TO_BLN':([154,173,175,176,177,178,179,196,199,213,216,280,305,],[188,188,-149,-150,-151,-152,-153,188,188,188,188,188,188,]),'CONVERT_TO_STR':([154,173,175,176,177,178,179,196,199,213,216,280,305,],[189,189,-149,-150,-151,-152,-153,189,189,189,189,189,189,]),'OTHERWISE_CHECK':([289,],[298,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_dec':([2,4,],[3,28,]),'global_statement':([2,4,],[4,4,]),'empty':([2,3,4,30,40,41,42,45,51,52,59,69,80,96,98,99,124,127,138,139,140,141,142,143,144,159,160,171,181,182,192,201,206,210,226,229,243,245,262,264,265,274,276,289,290,301,310,312,313,324,],[5,14,29,35,63,35,66,71,82,86,89,102,71,123,129,35,136,123,136,136,136,136,136,136,136,195,200,205,215,71,123,129,237,241,258,195,215,86,123,237,241,123,195,297,123,123,123,318,123,123,]),'data_type':([2,4,40,96,124,127,130,138,139,140,141,142,143,144,192,262,274,290,301,310,313,324,],[6,6,62,126,126,126,161,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'function_statements':([3,],[12,]),'ret_type':([3,],[13,]),'function_dtype':([3,],[16,]),'global_tail':([4,],[27,]),'main_function':([12,],[31,]),'global_statement_tail':([30,41,99,],[34,64,131,]),'global_dec_value':([37,],[42,]),'global_value':([37,],[43,]),'factor':([37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,154,169,173,191,196,199,213,216,217,218,219,220,253,280,287,305,309,],[45,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,182,80,182,80,182,182,182,182,80,80,80,80,80,182,80,182,80,]),'expression':([37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,154,169,173,191,196,199,213,216,217,218,219,220,253,280,287,305,309,],[46,79,104,105,106,107,108,109,111,112,116,117,118,119,120,121,184,202,184,223,184,184,184,184,247,247,247,247,272,184,295,184,315,]),'var_call':([37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,124,138,139,140,141,142,143,144,153,154,169,171,173,174,191,196,199,213,216,217,218,219,220,238,239,253,280,284,287,305,309,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,152,152,152,152,152,152,152,152,180,47,47,208,47,211,47,47,47,47,47,47,47,47,47,208,211,47,47,293,47,47,47,]),'literal':([37,44,49,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,103,154,169,171,173,191,196,199,213,216,217,218,219,220,228,238,253,280,287,305,309,],[48,69,78,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,69,48,48,207,48,48,48,48,48,48,246,246,246,246,69,207,48,48,48,48,48,]),'expr_head':([37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,154,169,173,191,196,199,213,216,217,218,219,220,253,280,287,305,309,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'term':([37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,154,169,173,191,196,199,213,216,217,218,219,220,253,280,287,305,309,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'parameters':([40,],[61,]),'global_tail2':([42,],[65,]),'list_element':([44,103,228,],[68,132,260,]),'factor_tail':([45,80,182,],[70,70,70,]),'expr_tail':([51,],[81,]),'var_call_tail':([52,245,],[85,85,]),'term_tail':([59,],[88,]),'element_tail':([69,],[101,]),'index':([87,],[113,]),'statements':([96,124,127,138,139,140,141,142,143,144,192,262,274,290,301,310,313,324,],[122,137,160,137,137,137,137,137,137,137,224,278,286,300,312,316,320,325,]),'local_dec':([96,124,127,138,139,140,141,142,143,144,192,262,274,290,301,310,313,324,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'var_statement':([96,124,127,138,139,140,141,142,143,144,192,262,274,290,301,310,313,324,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'parameters_tail':([98,201,],[128,232,]),'statements_tail':([124,138,139,140,141,142,143,144,],[135,162,163,164,165,166,167,168,]),'conditional_statement':([124,138,139,140,141,142,143,144,],[138,138,138,138,138,138,138,138,]),'switch_statement':([124,138,139,140,141,142,143,144,],[139,139,139,139,139,139,139,139,]),'loop_statement':([124,138,139,140,141,142,143,144,],[140,140,140,140,140,140,140,140,]),'function_call':([124,138,139,140,141,142,143,144,154,173,196,199,213,216,280,305,],[141,141,141,141,141,141,141,141,185,185,185,185,185,185,185,185,]),'string_operation_statement':([124,138,139,140,141,142,143,144,],[142,142,142,142,142,142,142,142,]),'global_reference':([124,138,139,140,141,142,143,144,],[143,143,143,143,143,143,143,143,]),'output_statement':([124,138,139,140,141,142,143,144,],[144,144,144,144,144,144,144,144,]),'for_loop':([124,138,139,140,141,142,143,144,],[147,147,147,147,147,147,147,147,]),'until_loop':([124,138,139,140,141,142,143,144,],[148,148,148,148,148,148,148,148,]),'repeat_until':([124,138,139,140,141,142,143,144,],[149,149,149,149,149,149,149,149,]),'input_statement':([124,138,139,140,141,142,143,144,154,173,196,199,213,216,217,218,219,220,280,305,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,249,249,249,249,151,151,]),'string_operation_tail':([152,],[172,]),'assign_op':([152,293,],[173,305,]),'value':([154,173,196,199,213,216,280,305,],[181,209,227,231,242,243,291,314,]),'type_cast':([154,173,196,199,213,216,280,305,],[183,183,183,183,183,183,183,183,]),'var_tail':([159,229,276,],[194,261,288,]),'revive':([160,],[198,]),'arguments':([171,],[204,]),'arg_value':([171,238,],[206,264,]),'string_val':([174,239,],[210,265,]),'next_val':([181,243,],[214,266,]),'control_variable':([190,],[221,]),'tail_value':([196,],[226,]),'arg_tail':([206,264,],[236,281,]),'stringcon_tail':([210,265,],[240,282,]),'typecast_value':([217,218,219,220,],[244,250,251,252,]),'var_tail2':([226,],[257,]),'switch_condition':([263,312,],[279,319,]),'update':([284,],[292,]),'conditional_tail':([289,],[296,]),'update_tail':([293,],[303,]),'postfix':([293,],[304,]),'switchcond_tail':([312,],[317,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BIRTH global_dec function_statements main_function GHOST','program',5,'p_program','Parser.py',40),
  ('main_function -> FUNCTION_NAME LPAREN RPAREN LBRACE statements RBRACE','main_function',6,'p_main_function','Parser.py',47),
  ('global_dec -> global_statement global_tail','global_dec',2,'p_global_dec','Parser.py',54),
  ('global_dec -> empty','global_dec',1,'p_global_dec','Parser.py',55),
  ('global_tail -> global_dec','global_tail',1,'p_global_tail','Parser.py',66),
  ('global_tail -> empty','global_tail',1,'p_global_tail','Parser.py',67),
  ('global_statement -> data_type IDENT global_statement_tail','global_statement',3,'p_global_statement','Parser.py',78),
  ('global_statement_tail -> empty','global_statement_tail',1,'p_global_statement_tail','Parser.py',85),
  ('global_statement_tail -> COMMA IDENT global_statement_tail','global_statement_tail',3,'p_global_statement_tail','Parser.py',86),
  ('global_statement_tail -> EQ global_dec_value global_tail2','global_statement_tail',3,'p_global_statement_tail','Parser.py',87),
  ('global_tail2 -> empty','global_tail2',1,'p_global_tail2','Parser.py',99),
  ('global_tail2 -> COMMA IDENT global_statement_tail','global_tail2',3,'p_global_tail2','Parser.py',100),
  ('global_dec_value -> global_value','global_dec_value',1,'p_global_dec_value','Parser.py',110),
  ('global_dec_value -> LBRACKET list_element RBRACKET','global_dec_value',3,'p_global_dec_value','Parser.py',111),
  ('global_value -> factor','global_value',1,'p_global_value','Parser.py',121),
  ('global_value -> expression','global_value',1,'p_global_value','Parser.py',122),
  ('var_statement -> data_type IDENT var_tail','var_statement',3,'p_var_statement','Parser.py',129),
  ('var_tail -> empty','var_tail',1,'p_var_tail','Parser.py',136),
  ('var_tail -> EQ tail_value var_tail2','var_tail',3,'p_var_tail','Parser.py',137),
  ('var_tail -> COMMA IDENT var_tail','var_tail',3,'p_var_tail','Parser.py',138),
  ('var_tail2 -> empty','var_tail2',1,'p_var_tail2','Parser.py',150),
  ('var_tail2 -> COMMA IDENT var_tail','var_tail2',3,'p_var_tail2','Parser.py',151),
  ('tail_value -> value','tail_value',1,'p_tail_value','Parser.py',161),
  ('tail_value -> LBRACKET list_element RBRACKET','tail_value',3,'p_tail_value','Parser.py',162),
  ('list_element -> literal element_tail','list_element',2,'p_list_element','Parser.py',172),
  ('element_tail -> empty','element_tail',1,'p_element_tail','Parser.py',182),
  ('element_tail -> COMMA list_element','element_tail',2,'p_element_tail','Parser.py',183),
  ('index -> INT_LIT','index',1,'p_index','Parser.py',193),
  ('index -> IDENT','index',1,'p_index','Parser.py',194),
  ('data_type -> INT','data_type',1,'p_data_type','Parser.py',201),
  ('data_type -> FLT','data_type',1,'p_data_type','Parser.py',202),
  ('data_type -> BLN','data_type',1,'p_data_type','Parser.py',203),
  ('data_type -> CHR','data_type',1,'p_data_type','Parser.py',204),
  ('data_type -> STR','data_type',1,'p_data_type','Parser.py',205),
  ('value -> factor','value',1,'p_value','Parser.py',212),
  ('value -> type_cast','value',1,'p_value','Parser.py',213),
  ('value -> expression','value',1,'p_value','Parser.py',214),
  ('value -> function_call','value',1,'p_value','Parser.py',215),
  ('type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',222),
  ('type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',223),
  ('type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',224),
  ('type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',225),
  ('typecast_value -> IDENT','typecast_value',1,'p_typecast_value','Parser.py',232),
  ('typecast_value -> literal','typecast_value',1,'p_typecast_value','Parser.py',233),
  ('typecast_value -> expression','typecast_value',1,'p_typecast_value','Parser.py',234),
  ('typecast_value -> FUNCTION_NAME LPAREN RPAREN','typecast_value',3,'p_typecast_value','Parser.py',235),
  ('typecast_value -> input_statement','typecast_value',1,'p_typecast_value','Parser.py',236),
  ('literal -> INT_LIT','literal',1,'p_literal','Parser.py',246),
  ('literal -> FLT_LIT','literal',1,'p_literal','Parser.py',247),
  ('literal -> DAY','literal',1,'p_literal','Parser.py',248),
  ('literal -> NIGHT','literal',1,'p_literal','Parser.py',249),
  ('literal -> CHR_LIT','literal',1,'p_literal','Parser.py',250),
  ('literal -> STR_LIT','literal',1,'p_literal','Parser.py',251),
  ('expression -> expr_head expr_tail','expression',2,'p_expression','Parser.py',258),
  ('expr_head -> term term_tail','expr_head',2,'p_expr_head','Parser.py',268),
  ('term -> factor factor_tail','term',2,'p_term','Parser.py',278),
  ('factor -> var_call','factor',1,'p_factor','Parser.py',288),
  ('factor -> literal','factor',1,'p_factor','Parser.py',289),
  ('factor -> TILDE literal','factor',2,'p_factor','Parser.py',290),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','Parser.py',291),
  ('factor_tail -> empty','factor_tail',1,'p_factor_tail','Parser.py',303),
  ('factor_tail -> PLUS expression','factor_tail',2,'p_factor_tail','Parser.py',304),
  ('factor_tail -> MINUS expression','factor_tail',2,'p_factor_tail','Parser.py',305),
  ('factor_tail -> MULTIPLY expression','factor_tail',2,'p_factor_tail','Parser.py',306),
  ('factor_tail -> DIVISION expression','factor_tail',2,'p_factor_tail','Parser.py',307),
  ('factor_tail -> MODULO expression','factor_tail',2,'p_factor_tail','Parser.py',308),
  ('factor_tail -> EXPONENT expression','factor_tail',2,'p_factor_tail','Parser.py',309),
  ('term_tail -> empty','term_tail',1,'p_term_tail','Parser.py',319),
  ('term_tail -> GT expression','term_tail',2,'p_term_tail','Parser.py',320),
  ('term_tail -> LT expression','term_tail',2,'p_term_tail','Parser.py',321),
  ('term_tail -> EQ_EQ expression','term_tail',2,'p_term_tail','Parser.py',322),
  ('term_tail -> GT_EQ expression','term_tail',2,'p_term_tail','Parser.py',323),
  ('term_tail -> LT_EQ expression','term_tail',2,'p_term_tail','Parser.py',324),
  ('term_tail -> NOT_EQ expression','term_tail',2,'p_term_tail','Parser.py',325),
  ('expr_tail -> empty','expr_tail',1,'p_expr_tail','Parser.py',340),
  ('expr_tail -> AND expression','expr_tail',2,'p_expr_tail','Parser.py',341),
  ('expr_tail -> OR expression','expr_tail',2,'p_expr_tail','Parser.py',342),
  ('var_call -> IDENT var_call_tail','var_call',2,'p_var_call','Parser.py',352),
  ('var_call_tail -> empty','var_call_tail',1,'p_var_call_tail','Parser.py',359),
  ('var_call_tail -> LBRACKET index RBRACKET','var_call_tail',3,'p_var_call_tail','Parser.py',360),
  ('function_statements -> ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements revive RBRACE','function_statements',9,'p_function_statements','Parser.py',370),
  ('function_statements -> empty','function_statements',1,'p_function_statements','Parser.py',371),
  ('ret_type -> FUNCTION','ret_type',1,'p_ret_type','Parser.py',386),
  ('ret_type -> function_dtype','ret_type',1,'p_ret_type','Parser.py',387),
  ('function_dtype -> FUNCTION_INT','function_dtype',1,'p_function_dtype','Parser.py',397),
  ('function_dtype -> FUNCTION_FLT','function_dtype',1,'p_function_dtype','Parser.py',398),
  ('function_dtype -> FUNCTION_CHR','function_dtype',1,'p_function_dtype','Parser.py',399),
  ('function_dtype -> FUNCTION_BLN','function_dtype',1,'p_function_dtype','Parser.py',400),
  ('function_dtype -> FUNCTION_STR','function_dtype',1,'p_function_dtype','Parser.py',401),
  ('function_dtype -> FUNCTION_LIST_INT','function_dtype',1,'p_function_dtype','Parser.py',402),
  ('function_dtype -> FUNCTION_LIST_FLT','function_dtype',1,'p_function_dtype','Parser.py',403),
  ('function_dtype -> FUNCTION_LIST_CHR','function_dtype',1,'p_function_dtype','Parser.py',404),
  ('function_dtype -> FUNCTION_LIST_STR','function_dtype',1,'p_function_dtype','Parser.py',405),
  ('function_dtype -> FUNCTION_LIST_BLN','function_dtype',1,'p_function_dtype','Parser.py',406),
  ('parameters -> data_type IDENT parameters_tail','parameters',3,'p_parameters','Parser.py',413),
  ('parameters -> empty','parameters',1,'p_parameters','Parser.py',414),
  ('parameters_tail -> empty','parameters_tail',1,'p_parameters_tail','Parser.py',424),
  ('parameters_tail -> COMMA data_type IDENT parameters_tail','parameters_tail',4,'p_parameters_tail','Parser.py',425),
  ('revive -> REVIVE value','revive',2,'p_revive','Parser.py',435),
  ('revive -> empty','revive',1,'p_revive','Parser.py',436),
  ('statements -> empty','statements',1,'p_statements','Parser.py',446),
  ('statements -> local_dec statements_tail','statements',2,'p_statements','Parser.py',447),
  ('statements_tail -> empty','statements_tail',1,'p_statements_tail','Parser.py',457),
  ('statements_tail -> statements','statements_tail',1,'p_statements_tail','Parser.py',458),
  ('statements_tail -> conditional_statement statements_tail','statements_tail',2,'p_statements_tail','Parser.py',459),
  ('statements_tail -> switch_statement statements_tail','statements_tail',2,'p_statements_tail','Parser.py',460),
  ('statements_tail -> loop_statement statements_tail','statements_tail',2,'p_statements_tail','Parser.py',461),
  ('statements_tail -> function_call statements_tail','statements_tail',2,'p_statements_tail','Parser.py',462),
  ('statements_tail -> string_operation_statement statements_tail','statements_tail',2,'p_statements_tail','Parser.py',463),
  ('statements_tail -> global_reference statements_tail','statements_tail',2,'p_statements_tail','Parser.py',464),
  ('statements_tail -> output_statement statements_tail','statements_tail',2,'p_statements_tail','Parser.py',465),
  ('local_dec -> var_statement','local_dec',1,'p_local_dec','Parser.py',477),
  ('local_dec -> empty','local_dec',1,'p_local_dec','Parser.py',478),
  ('conditional_statement -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE conditional_tail','conditional_statement',8,'p_conditional_statement','Parser.py',486),
  ('conditional_tail -> empty','conditional_tail',1,'p_conditional_tail','Parser.py',493),
  ('conditional_tail -> OTHERWISE_CHECK LPAREN expression RPAREN LBRACE statements RBRACE','conditional_tail',7,'p_conditional_tail','Parser.py',494),
  ('conditional_tail -> OTHERWISE LBRACE statements RBRACE','conditional_tail',4,'p_conditional_tail','Parser.py',495),
  ('switch_statement -> SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE statements RBRACE','switch_statement',9,'p_switch_statement','Parser.py',507),
  ('switch_condition -> SHIFT value COLON statements switchcond_tail','switch_condition',5,'p_switch_condition','Parser.py',514),
  ('switchcond_tail -> empty','switchcond_tail',1,'p_switchcond_tail','Parser.py',521),
  ('switchcond_tail -> switch_condition','switchcond_tail',1,'p_switchcond_tail','Parser.py',522),
  ('loop_statement -> for_loop','loop_statement',1,'p_loop_statement','Parser.py',532),
  ('loop_statement -> until_loop','loop_statement',1,'p_loop_statement','Parser.py',533),
  ('loop_statement -> repeat_until','loop_statement',1,'p_loop_statement','Parser.py',534),
  ('for_loop -> FOR LPAREN control_variable SEMICOLON expression SEMICOLON update RPAREN LBRACE statements RBRACE','for_loop',11,'p_for_loop','Parser.py',541),
  ('until_loop -> UNTIL LPAREN expression RPAREN LBRACE statements RBRACE','until_loop',7,'p_until_loop','Parser.py',548),
  ('repeat_until -> REPEAT LBRACE statements RBRACE UNTIL LPAREN expression RPAREN','repeat_until',8,'p_repeat_until','Parser.py',555),
  ('control_variable -> INT IDENT EQ INT_LIT','control_variable',4,'p_control_variable','Parser.py',562),
  ('update -> var_call update_tail','update',2,'p_update','Parser.py',569),
  ('update_tail -> postfix','update_tail',1,'p_update_tail','Parser.py',576),
  ('update_tail -> assign_op value','update_tail',2,'p_update_tail','Parser.py',577),
  ('postfix -> PLUS_PLUS','postfix',1,'p_postfix','Parser.py',587),
  ('postfix -> MINUS_MINUS','postfix',1,'p_postfix','Parser.py',588),
  ('function_call -> FUNCTION_NAME LPAREN arguments RPAREN','function_call',4,'p_function_call','Parser.py',595),
  ('function_call -> input_statement','function_call',1,'p_function_call','Parser.py',596),
  ('arguments -> empty','arguments',1,'p_arguments','Parser.py',606),
  ('arguments -> arg_value arg_tail','arguments',2,'p_arguments','Parser.py',607),
  ('arg_tail -> empty','arg_tail',1,'p_arg_tail','Parser.py',617),
  ('arg_tail -> COMMA arg_value arg_tail','arg_tail',3,'p_arg_tail','Parser.py',618),
  ('arg_value -> literal','arg_value',1,'p_arg_value','Parser.py',628),
  ('arg_value -> var_call','arg_value',1,'p_arg_value','Parser.py',629),
  ('output_statement -> DISPLAY value next_val','output_statement',3,'p_output_statement','Parser.py',636),
  ('next_val -> empty','next_val',1,'p_next_val','Parser.py',643),
  ('next_val -> COMMA value next_val','next_val',3,'p_next_val','Parser.py',644),
  ('input_statement -> INPUT LPAREN RPAREN','input_statement',3,'p_input_statement','Parser.py',654),
  ('string_operation_statement -> var_call string_operation_tail','string_operation_statement',2,'p_string_operation_statement','Parser.py',661),
  ('string_operation_tail -> assign_op value','string_operation_tail',2,'p_string_operation_tail','Parser.py',668),
  ('string_operation_tail -> PLUS string_val stringcon_tail','string_operation_tail',3,'p_string_operation_tail','Parser.py',669),
  ('assign_op -> PLUS_EQ','assign_op',1,'p_assign_op','Parser.py',679),
  ('assign_op -> MINUS_EQ','assign_op',1,'p_assign_op','Parser.py',680),
  ('assign_op -> MUL_EQ','assign_op',1,'p_assign_op','Parser.py',681),
  ('assign_op -> DIV_EQ','assign_op',1,'p_assign_op','Parser.py',682),
  ('assign_op -> MOD_EQ','assign_op',1,'p_assign_op','Parser.py',683),
  ('stringcon_tail -> empty','stringcon_tail',1,'p_stringcon_tail','Parser.py',690),
  ('stringcon_tail -> PLUS string_val stringcon_tail','stringcon_tail',3,'p_stringcon_tail','Parser.py',691),
  ('string_val -> var_call','string_val',1,'p_string_val','Parser.py',701),
  ('string_val -> STR_LIT','string_val',1,'p_string_val','Parser.py',702),
  ('global_reference -> GLOBAL var_call EQ value','global_reference',4,'p_global_reference','Parser.py',712),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',718),
]
