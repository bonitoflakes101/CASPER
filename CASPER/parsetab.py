
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BIRTH BLN BLN_LIT CHECK CHR CHR_LIT COLON COMMA COMMENT CONVERT_TO_BLN CONVERT_TO_FLT CONVERT_TO_INT CONVERT_TO_STR DAY DISPLAY DIVISION DIV_EQ DOUBLE_LT DOUBLE_SLASH EOF EQ EQ_EQ EXPONENT FLT FLT_LIT FOR FUNCTION FUNCTION_BLN FUNCTION_CHR FUNCTION_FLT FUNCTION_INT FUNCTION_LIST_BLN FUNCTION_LIST_BLN2D FUNCTION_LIST_CHR FUNCTION_LIST_CHR2D FUNCTION_LIST_FLT FUNCTION_LIST_FLT2D FUNCTION_LIST_INT FUNCTION_LIST_INT2D FUNCTION_LIST_STR FUNCTION_LIST_STR2D FUNCTION_NAME FUNCTION_STR GHOST GLOBAL GT GT_EQ IDENT ILLEGAL IN INPUT INT INT_LIT LBRACE LBRACKET LIST_BLN LIST_BLN2D LIST_CHR LIST_CHR2D LIST_FLT LIST_FLT2D LIST_INT LIST_INT2D LIST_STR LIST_STR2D LPAREN LT LT_EQ MEASURE MINUS MINUS_EQ MINUS_MINUS MODULO MOD_EQ MULTIPLY MUL_EQ NEWLINE NIGHT NOT NOT_EQ OR OTHERWISE OTHERWISE_CHECK PLUS PLUS_EQ PLUS_PLUS POW RBRACE RBRACKET REPEAT REVIVE RPAREN SEMICOLON SHIFT SKIP STOP STR STR_LIT SWAP TILDE TYPE UNTILprogram : BIRTH global_declarations statements GHOSTvar_call : IDENTvar_dec : INT IDENT\n               | FLT IDENT\n               | STR IDENT\n               | CHR IDENT\n               | BLN IDENTvar_initialization : var_dec EQ expressionlist_dec : INT LBRACKET RBRACKET IDENT\n                 | FLT LBRACKET RBRACKET IDENT\n                 | STR LBRACKET RBRACKET IDENT\n                 | CHR LBRACKET RBRACKET IDENT\n                 | BLN LBRACKET RBRACKET IDENTglobal_declarations : GLOBAL var_call\n                            | var_dec\n                            | var_initialization\n                            | list_dec\n                            | emptystatements : statement\n                   | statements statement\n                   | statements NEWLINE\n                   | emptystatement : variable_declaration\n                 | assignment\n                 | function_call\n                 | loop\n                 | conditional\n                 | io_statement\n                 | switch_statement\n                 | return_statement\n                 | stop_statement\n                 | skip_statement\n                 | measure_statementvariable_declaration : INT IDENT EQ expression\n                            | FLT IDENT EQ expression\n                            | STR IDENT EQ expression\n                            | CHR IDENT EQ expression\n                            | BLN IDENT EQ expressionassignment : IDENT EQ expressionfunction_call : IDENT LPAREN arguments RPARENloop : REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPARENconditional : CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPARENio_statement : DISPLAY LPAREN expression RPAREN\n                    | INPUT LPAREN IDENT RPARENswitch_statement : SWAP LPAREN expression RPAREN LBRACE case_list RBRACEcase_list : case\n                 | case_list casecase : SHIFT expression COLON statementsreturn_statement : REVIVE expressionstop_statement : STOPskip_statement : SKIPmeasure_statement : MEASURE LPAREN expression RPARENexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVISION expression\n                  | expression MODULO expression\n                  | expression EXPONENT expression\n                  | expression EQ_EQ expression\n                  | expression NOT_EQ expression\n                  | expression LT expression\n                  | expression GT expression\n                  | expression LT_EQ expression\n                  | expression GT_EQ expression\n                  | expression AND expression\n                  | expression OR expression\n                  | NOT expression\n                  | LPAREN expression RPAREN\n                  | IDENT\n                  | INT_LIT\n                  | FLT_LIT\n                  | STR_LIT\n                  | BLN_LIT\n                  | function_callarguments : expression COMMA arguments\n                 | expression\n                 | emptyempty :'
    
_lr_action_items = {'BIRTH':([0,],[2,]),'$end':([1,56,],[0,-1,]),'GLOBAL':([2,],[4,]),'INT':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[9,28,-15,-16,-17,-18,28,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,28,28,28,28,-45,28,28,28,28,-41,-42,]),'FLT':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[10,30,-15,-16,-17,-18,30,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,30,30,30,30,-45,30,30,30,30,-41,-42,]),'STR':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[11,31,-15,-16,-17,-18,31,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,31,31,31,31,-45,31,31,31,31,-41,-42,]),'CHR':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[12,32,-15,-16,-17,-18,32,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,32,32,32,32,-45,32,32,32,32,-41,-42,]),'BLN':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[13,33,-15,-16,-17,-18,33,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,33,33,33,33,-45,33,33,33,33,-41,-42,]),'IDENT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,39,40,41,43,44,45,46,48,50,52,54,57,58,60,61,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,159,162,167,168,169,170,172,173,176,178,],[-78,29,44,-15,-16,-17,-18,46,48,50,52,54,29,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,59,62,63,64,65,74,-50,-51,-14,-2,74,-3,-4,-5,-6,-7,-20,-21,74,74,74,74,74,99,74,-49,74,74,-69,-70,-71,-72,-73,-74,74,-8,118,119,120,121,122,74,-39,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-67,-9,-10,-11,-12,-13,-34,-40,74,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,29,29,29,29,74,-45,29,74,29,29,29,-41,74,-42,]),'REPEAT':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[-78,34,-15,-16,-17,-18,34,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,34,34,34,34,-45,34,34,34,34,-41,-42,]),'CHECK':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[-78,35,-15,-16,-17,-18,35,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,35,35,35,35,-45,35,35,35,35,-41,-42,]),'DISPLAY':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[-78,36,-15,-16,-17,-18,36,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,36,36,36,36,-45,36,36,36,36,-41,-42,]),'INPUT':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[-78,37,-15,-16,-17,-18,37,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,37,37,37,37,-45,37,37,37,37,-41,-42,]),'SWAP':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[-78,38,-15,-16,-17,-18,38,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,38,38,38,38,-45,38,38,38,38,-41,-42,]),'REVIVE':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[-78,39,-15,-16,-17,-18,39,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,39,39,39,39,-45,39,39,39,39,-41,-42,]),'STOP':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[-78,40,-15,-16,-17,-18,40,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,40,40,40,40,-45,40,40,40,40,-41,-42,]),'SKIP':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[-78,41,-15,-16,-17,-18,41,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,41,41,41,41,-45,41,41,41,41,-41,-42,]),'MEASURE':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[-78,42,-15,-16,-17,-18,42,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,42,42,42,42,-45,42,42,42,42,-41,-42,]),'GHOST':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,162,173,178,],[-78,-78,-15,-16,-17,-18,56,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,-45,-41,-42,]),'NEWLINE':([2,3,5,6,7,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,46,48,50,52,54,57,58,71,74,75,76,77,78,79,81,88,115,118,119,120,121,122,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,162,167,169,170,172,173,178,],[-78,-78,-15,-16,-17,-18,58,-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-14,-2,-3,-4,-5,-6,-7,-20,-21,-49,-69,-70,-71,-72,-73,-74,-8,-39,-67,-9,-10,-11,-12,-13,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,-78,-78,58,58,-45,-78,-78,58,58,-41,-42,]),'EQ':([5,29,46,48,50,52,54,59,62,63,64,65,],[45,60,-3,-4,-5,-6,-7,87,92,93,94,95,]),'LBRACKET':([9,10,11,12,13,],[47,49,51,53,55,]),'RBRACE':([15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,57,58,71,74,75,76,77,78,79,88,115,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,157,158,162,163,167,169,170,172,173,178,],[-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-20,-21,-49,-69,-70,-71,-72,-73,-74,-39,-67,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,-78,-78,160,161,162,-46,-45,-47,-78,-78,-48,174,-41,-42,]),'SHIFT':([15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,57,58,71,74,75,76,77,78,79,88,115,123,124,126,127,128,129,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,154,157,158,162,163,167,170,173,178,],[-19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-50,-51,-20,-21,-49,-69,-70,-71,-72,-73,-74,-39,-67,-34,-40,-35,-36,-37,-38,-43,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-52,159,159,-46,-45,-47,-78,-48,-41,-42,]),'LPAREN':([29,34,35,36,37,38,39,42,45,60,61,66,67,68,70,72,73,74,80,87,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,125,159,165,168,175,176,],[61,66,67,68,69,70,73,80,73,73,73,73,73,73,73,73,73,61,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,168,73,176,73,]),'NOT':([39,45,60,61,66,67,68,70,72,73,80,87,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,125,159,168,176,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'INT_LIT':([39,45,60,61,66,67,68,70,72,73,80,87,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,125,159,168,176,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'FLT_LIT':([39,45,60,61,66,67,68,70,72,73,80,87,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,125,159,168,176,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'STR_LIT':([39,45,60,61,66,67,68,70,72,73,80,87,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,125,159,168,176,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'BLN_LIT':([39,45,60,61,66,67,68,70,72,73,80,87,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,125,159,168,176,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'RBRACKET':([47,49,51,53,55,],[82,83,84,85,86,]),'RPAREN':([61,74,75,76,77,78,79,89,90,91,96,97,98,99,100,115,116,117,124,125,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,171,177,],[-78,-69,-70,-71,-72,-73,-74,124,-76,-77,130,131,132,133,134,-67,149,150,-40,-78,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-75,173,178,]),'PLUS':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[101,-69,-70,-71,-72,-73,-74,101,101,101,101,101,101,101,101,101,101,101,-40,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-68,101,101,101,]),'MINUS':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[102,-69,-70,-71,-72,-73,-74,102,102,102,102,102,102,102,102,102,102,102,-40,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-68,102,102,102,]),'MULTIPLY':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[103,-69,-70,-71,-72,-73,-74,103,103,103,103,103,103,103,103,103,103,103,-40,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-68,103,103,103,]),'DIVISION':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[104,-69,-70,-71,-72,-73,-74,104,104,104,104,104,104,104,104,104,104,104,-40,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-68,104,104,104,]),'MODULO':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[105,-69,-70,-71,-72,-73,-74,105,105,105,105,105,105,105,105,105,105,105,-40,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-68,105,105,105,]),'EXPONENT':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[106,-69,-70,-71,-72,-73,-74,106,106,106,106,106,106,106,106,106,106,106,-40,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-68,106,106,106,]),'EQ_EQ':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[107,-69,-70,-71,-72,-73,-74,107,107,107,107,107,107,107,107,107,107,107,-40,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-68,107,107,107,]),'NOT_EQ':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[108,-69,-70,-71,-72,-73,-74,108,108,108,108,108,108,108,108,108,108,108,-40,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-68,108,108,108,]),'LT':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[109,-69,-70,-71,-72,-73,-74,109,109,109,109,109,109,109,109,109,109,109,-40,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-68,109,109,109,]),'GT':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[110,-69,-70,-71,-72,-73,-74,110,110,110,110,110,110,110,110,110,110,110,-40,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-68,110,110,110,]),'LT_EQ':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[111,-69,-70,-71,-72,-73,-74,111,111,111,111,111,111,111,111,111,111,111,-40,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-68,111,111,111,]),'GT_EQ':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[112,-69,-70,-71,-72,-73,-74,112,112,112,112,112,112,112,112,112,112,112,-40,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-68,112,112,112,]),'AND':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[113,-69,-70,-71,-72,-73,-74,113,113,113,113,113,113,113,113,113,113,113,-40,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-68,113,113,113,]),'OR':([71,74,75,76,77,78,79,81,88,90,96,97,98,100,115,116,117,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,171,177,],[114,-69,-70,-71,-72,-73,-74,114,114,114,114,114,114,114,114,114,114,114,-40,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-68,114,114,114,]),'COMMA':([74,75,76,77,78,79,90,115,124,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,],[-69,-70,-71,-72,-73,-74,125,-67,-40,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,]),'COLON':([74,75,76,77,78,79,115,124,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,164,],[-69,-70,-71,-72,-73,-74,-67,-40,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,167,]),'LBRACE':([130,131,134,166,],[152,153,154,169,]),'UNTIL':([160,],[165,]),'OTHERWISE':([161,],[166,]),'OTHERWISE_CHECK':([174,],[175,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_declarations':([2,],[3,]),'var_dec':([2,],[5,]),'var_initialization':([2,],[6,]),'list_dec':([2,],[7,]),'empty':([2,3,61,125,152,153,167,169,],[8,16,91,91,16,16,16,16,]),'statements':([3,152,153,167,169,],[14,155,156,170,172,]),'statement':([3,14,152,153,155,156,167,169,170,172,],[15,57,15,15,57,57,15,15,57,57,]),'variable_declaration':([3,14,152,153,155,156,167,169,170,172,],[17,17,17,17,17,17,17,17,17,17,]),'assignment':([3,14,152,153,155,156,167,169,170,172,],[18,18,18,18,18,18,18,18,18,18,]),'function_call':([3,14,39,45,60,61,66,67,68,70,72,73,80,87,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,125,152,153,155,156,159,167,168,169,170,172,176,],[19,19,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,19,19,19,19,79,19,79,19,19,19,79,]),'loop':([3,14,152,153,155,156,167,169,170,172,],[20,20,20,20,20,20,20,20,20,20,]),'conditional':([3,14,152,153,155,156,167,169,170,172,],[21,21,21,21,21,21,21,21,21,21,]),'io_statement':([3,14,152,153,155,156,167,169,170,172,],[22,22,22,22,22,22,22,22,22,22,]),'switch_statement':([3,14,152,153,155,156,167,169,170,172,],[23,23,23,23,23,23,23,23,23,23,]),'return_statement':([3,14,152,153,155,156,167,169,170,172,],[24,24,24,24,24,24,24,24,24,24,]),'stop_statement':([3,14,152,153,155,156,167,169,170,172,],[25,25,25,25,25,25,25,25,25,25,]),'skip_statement':([3,14,152,153,155,156,167,169,170,172,],[26,26,26,26,26,26,26,26,26,26,]),'measure_statement':([3,14,152,153,155,156,167,169,170,172,],[27,27,27,27,27,27,27,27,27,27,]),'var_call':([4,],[43,]),'expression':([39,45,60,61,66,67,68,70,72,73,80,87,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,125,159,168,176,],[71,81,88,90,96,97,98,100,115,116,117,123,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,90,164,171,177,]),'arguments':([61,125,],[89,151,]),'case_list':([154,],[157,]),'case':([154,157,],[158,163,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BIRTH global_declarations statements GHOST','program',4,'p_program','Parser.py',23),
  ('var_call -> IDENT','var_call',1,'p_var_call','Parser.py',28),
  ('var_dec -> INT IDENT','var_dec',2,'p_var_dec','Parser.py',32),
  ('var_dec -> FLT IDENT','var_dec',2,'p_var_dec','Parser.py',33),
  ('var_dec -> STR IDENT','var_dec',2,'p_var_dec','Parser.py',34),
  ('var_dec -> CHR IDENT','var_dec',2,'p_var_dec','Parser.py',35),
  ('var_dec -> BLN IDENT','var_dec',2,'p_var_dec','Parser.py',36),
  ('var_initialization -> var_dec EQ expression','var_initialization',3,'p_var_initialization','Parser.py',40),
  ('list_dec -> INT LBRACKET RBRACKET IDENT','list_dec',4,'p_list_dec','Parser.py',44),
  ('list_dec -> FLT LBRACKET RBRACKET IDENT','list_dec',4,'p_list_dec','Parser.py',45),
  ('list_dec -> STR LBRACKET RBRACKET IDENT','list_dec',4,'p_list_dec','Parser.py',46),
  ('list_dec -> CHR LBRACKET RBRACKET IDENT','list_dec',4,'p_list_dec','Parser.py',47),
  ('list_dec -> BLN LBRACKET RBRACKET IDENT','list_dec',4,'p_list_dec','Parser.py',48),
  ('global_declarations -> GLOBAL var_call','global_declarations',2,'p_global_declarations','Parser.py',52),
  ('global_declarations -> var_dec','global_declarations',1,'p_global_declarations','Parser.py',53),
  ('global_declarations -> var_initialization','global_declarations',1,'p_global_declarations','Parser.py',54),
  ('global_declarations -> list_dec','global_declarations',1,'p_global_declarations','Parser.py',55),
  ('global_declarations -> empty','global_declarations',1,'p_global_declarations','Parser.py',56),
  ('statements -> statement','statements',1,'p_statements','Parser.py',61),
  ('statements -> statements statement','statements',2,'p_statements','Parser.py',62),
  ('statements -> statements NEWLINE','statements',2,'p_statements','Parser.py',63),
  ('statements -> empty','statements',1,'p_statements','Parser.py',64),
  ('statement -> variable_declaration','statement',1,'p_statement','Parser.py',72),
  ('statement -> assignment','statement',1,'p_statement','Parser.py',73),
  ('statement -> function_call','statement',1,'p_statement','Parser.py',74),
  ('statement -> loop','statement',1,'p_statement','Parser.py',75),
  ('statement -> conditional','statement',1,'p_statement','Parser.py',76),
  ('statement -> io_statement','statement',1,'p_statement','Parser.py',77),
  ('statement -> switch_statement','statement',1,'p_statement','Parser.py',78),
  ('statement -> return_statement','statement',1,'p_statement','Parser.py',79),
  ('statement -> stop_statement','statement',1,'p_statement','Parser.py',80),
  ('statement -> skip_statement','statement',1,'p_statement','Parser.py',81),
  ('statement -> measure_statement','statement',1,'p_statement','Parser.py',82),
  ('variable_declaration -> INT IDENT EQ expression','variable_declaration',4,'p_variable_declaration','Parser.py',95),
  ('variable_declaration -> FLT IDENT EQ expression','variable_declaration',4,'p_variable_declaration','Parser.py',96),
  ('variable_declaration -> STR IDENT EQ expression','variable_declaration',4,'p_variable_declaration','Parser.py',97),
  ('variable_declaration -> CHR IDENT EQ expression','variable_declaration',4,'p_variable_declaration','Parser.py',98),
  ('variable_declaration -> BLN IDENT EQ expression','variable_declaration',4,'p_variable_declaration','Parser.py',99),
  ('assignment -> IDENT EQ expression','assignment',3,'p_assignment','Parser.py',104),
  ('function_call -> IDENT LPAREN arguments RPAREN','function_call',4,'p_function_call','Parser.py',109),
  ('loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN','loop',11,'p_loop','Parser.py',114),
  ('conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN','conditional',15,'p_conditional','Parser.py',119),
  ('io_statement -> DISPLAY LPAREN expression RPAREN','io_statement',4,'p_io_statement','Parser.py',124),
  ('io_statement -> INPUT LPAREN IDENT RPAREN','io_statement',4,'p_io_statement','Parser.py',125),
  ('switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE','switch_statement',7,'p_switch_statement','Parser.py',134),
  ('case_list -> case','case_list',1,'p_case_list','Parser.py',139),
  ('case_list -> case_list case','case_list',2,'p_case_list','Parser.py',140),
  ('case -> SHIFT expression COLON statements','case',4,'p_case','Parser.py',148),
  ('return_statement -> REVIVE expression','return_statement',2,'p_return_statement','Parser.py',153),
  ('stop_statement -> STOP','stop_statement',1,'p_stop_statement','Parser.py',157),
  ('skip_statement -> SKIP','skip_statement',1,'p_skip_statement','Parser.py',161),
  ('measure_statement -> MEASURE LPAREN expression RPAREN','measure_statement',4,'p_measure_statement','Parser.py',165),
  ('expression -> expression PLUS expression','expression',3,'p_expression','Parser.py',172),
  ('expression -> expression MINUS expression','expression',3,'p_expression','Parser.py',173),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','Parser.py',174),
  ('expression -> expression DIVISION expression','expression',3,'p_expression','Parser.py',175),
  ('expression -> expression MODULO expression','expression',3,'p_expression','Parser.py',176),
  ('expression -> expression EXPONENT expression','expression',3,'p_expression','Parser.py',177),
  ('expression -> expression EQ_EQ expression','expression',3,'p_expression','Parser.py',178),
  ('expression -> expression NOT_EQ expression','expression',3,'p_expression','Parser.py',179),
  ('expression -> expression LT expression','expression',3,'p_expression','Parser.py',180),
  ('expression -> expression GT expression','expression',3,'p_expression','Parser.py',181),
  ('expression -> expression LT_EQ expression','expression',3,'p_expression','Parser.py',182),
  ('expression -> expression GT_EQ expression','expression',3,'p_expression','Parser.py',183),
  ('expression -> expression AND expression','expression',3,'p_expression','Parser.py',184),
  ('expression -> expression OR expression','expression',3,'p_expression','Parser.py',185),
  ('expression -> NOT expression','expression',2,'p_expression','Parser.py',186),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','Parser.py',187),
  ('expression -> IDENT','expression',1,'p_expression','Parser.py',188),
  ('expression -> INT_LIT','expression',1,'p_expression','Parser.py',189),
  ('expression -> FLT_LIT','expression',1,'p_expression','Parser.py',190),
  ('expression -> STR_LIT','expression',1,'p_expression','Parser.py',191),
  ('expression -> BLN_LIT','expression',1,'p_expression','Parser.py',192),
  ('expression -> function_call','expression',1,'p_expression','Parser.py',193),
  ('arguments -> expression COMMA arguments','arguments',3,'p_arguments','Parser.py',225),
  ('arguments -> expression','arguments',1,'p_arguments','Parser.py',226),
  ('arguments -> empty','arguments',1,'p_arguments','Parser.py',227),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',237),
]
