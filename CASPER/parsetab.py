
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEXPONENTrightNOTMINUSleftMULTIPLYDIVISIONMODULOleftPLUSMINUSleftPLUS_PLUSMINUS_MINUSleftEQ_EQNOT_EQLTGTLT_EQGT_EQleftANDleftORrightEQPLUS_EQMINUS_EQMUL_EQDIV_EQMOD_EQAND BIRTH BLN BLN_LIT CHECK CHR CHR_LIT COLON COMMA COMMENT CONVERT_TO_BLN CONVERT_TO_FLT CONVERT_TO_INT CONVERT_TO_STR DAY DISPLAY DIVISION DIV_EQ DOUBLE_LT DOUBLE_SLASH EOF EQ EQ_EQ EXPONENT FLT FLT_LIT FOR FUNCTION FUNCTION_BLN FUNCTION_CHR FUNCTION_FLT FUNCTION_INT FUNCTION_LIST_BLN FUNCTION_LIST_BLN2D FUNCTION_LIST_CHR FUNCTION_LIST_CHR2D FUNCTION_LIST_FLT FUNCTION_LIST_FLT2D FUNCTION_LIST_INT FUNCTION_LIST_INT2D FUNCTION_LIST_STR FUNCTION_LIST_STR2D FUNCTION_NAME FUNCTION_STR GHOST GT GT_EQ IDENT ILLEGAL IN INPUT INT INT_LIT LBRACE LBRACKET LIST_BLN LIST_BLN2D LIST_CHR LIST_CHR2D LIST_FLT LIST_FLT2D LIST_INT LIST_INT2D LIST_STR LIST_STR2D LPAREN LT LT_EQ MAIN_CASPER MEASURE MINUS MINUS_EQ MINUS_MINUS MODULO MOD_EQ MULTIPLY MUL_EQ NEWLINE NIGHT NOT NOT_EQ OR OTHERWISE OTHERWISE_CHECK PLUS PLUS_EQ PLUS_PLUS POW RBRACE RBRACKET REPEAT REVIVE RPAREN SEMICOLON SHIFT SKIP STOP STR STR_LIT SWAP TILDE TYPE UNTILprogram : BIRTH global_dec function_statements main_function GHOSTmain_function : MAIN_CASPER LPAREN RPAREN LBRACE statements RBRACEglobal_dec : global_statement global_tail\n                  | emptyglobal_tail : global_dec\n                   | emptyglobal_statement : data_type IDENT global_statement_tailglobal_statement_tail : empty\n                             | COMMA IDENT global_statement_tail\n                             | EQ global_dec_value global_tail2global_tail2 : empty\n                    | COMMA IDENT global_statement_tailglobal_dec_value : global_value\n                        | LBRACKET list_element RBRACKETglobal_value : factor\n                    | expressionvar_statement : data_type IDENT var_tailvar_tail : empty\n                | EQ tail_value var_tail2\n                | COMMA IDENT var_tailvar_tail2 : empty\n                 | COMMA IDENT var_tailtail_value : value\n                  | LBRACKET list_element RBRACKETlist_element : literal element_tailelement_tail : empty\n                    | COMMA list_elementindex : INT_LIT\n             | IDENTdata_type : INT\n                 | FLT\n                 | BLN\n                 | CHR\n                 | STRvalue : factor\n             | type_cast\n             | expression\n             | function_calltype_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPARENtypecast_value : IDENT\n                      | literal\n                      | expression\n                      | FUNCTION_NAME LPAREN RPAREN\n                      | input_statementliteral : INT_LIT\n               | FLT_LIT\n               | DAY\n               | NIGHT\n               | CHR_LIT\n               | STR_LITexpression : expr_head expr_tailexpr_head : term term_tailterm : factor factor_tailfactor : var_call\n              | literal\n              | TILDE literal\n              | LPAREN expression RPARENfactor_tail : empty\n                   | PLUS expression\n                   | MINUS expression\n                   | MULTIPLY expression\n                   | DIVISION expression\n                   | MODULO expression\n                   | EXPONENT expressionterm_tail : empty\n                 | GT expression\n                 | LT expression\n                 | EQ_EQ expression\n                 | GT_EQ expression\n                 | LT_EQ expression\n                 | NOT_EQ expressionexpr_tail : empty\n                 | AND expression\n                 | OR expressionvar_call : IDENT var_call_tailvar_call_tail : empty\n                     | LBRACKET index RBRACKETfunction_statements : ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements revive RBRACE\n                         | emptyret_type : FUNCTION\n                | function_dtypefunction_dtype : FUNCTION_INT\n                      | FUNCTION_FLT\n                      | FUNCTION_CHR\n                      | FUNCTION_BLN\n                      | FUNCTION_STR\n                      | FUNCTION_LIST_INT\n                      | FUNCTION_LIST_FLT\n                      | FUNCTION_LIST_CHR\n                      | FUNCTION_LIST_STR\n                      | FUNCTION_LIST_BLNparameters : data_type IDENT parameters_tail\n                  | emptyparameters_tail : empty\n                       | COMMA data_type IDENT parameters_tailrevive : REVIVE value\n              | emptystatements : empty\n                  | local_dec statements_tailstatements_tail : empty\n                       | statements\n                       | conditional_statement statements_tail\n                       | switch_statement statements_tail\n                       | loop_statement statements_tail\n                       | function_call statements_tail\n                       | string_operation_statement statements_tail\n                       | output_statement statements_taillocal_dec : var_statement\n                 | emptyconditional_statement : CHECK LPAREN expression RPAREN LBRACE statements RBRACE conditional_tailconditional_tail : empty\n                        | OTHERWISE_CHECK LPAREN expression RPAREN LBRACE statements RBRACE\n                        | OTHERWISE LBRACE statements RBRACEswitch_statement : SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE statements RBRACEswitch_condition : SHIFT value COLON statements switchcond_tailswitchcond_tail : empty\n                       | switch_conditionloop_statement : for_loop\n                      | until_loop\n                      | repeat_untilfor_loop : FOR LPAREN control_variable SEMICOLON expression SEMICOLON update RPAREN LBRACE statements RBRACEuntil_loop : UNTIL LPAREN expression RPAREN LBRACE statements RBRACErepeat_until : REPEAT LBRACE statements RBRACE UNTIL LPAREN expression RPARENcontrol_variable : INT IDENT EQ INT_LITupdate : var_call update_tailupdate_tail : postfix\n                   | assign_op valuepostfix : PLUS_PLUS\n               | MINUS_MINUSfunction_call : FUNCTION_NAME LPAREN arguments RPAREN\n                     | input_statementarguments : empty\n                 | arg_value arg_tailarg_tail : empty\n                | COMMA arg_value arg_tailarg_value : literal\n                 | var_calloutput_statement : DISPLAY value next_valnext_val : empty\n                | COMMA value next_valinput_statement : INPUT LPAREN RPARENstring_operation_statement : var_call string_operation_tailstring_operation_tail : assign_op value\n                             | PLUS string_val stringcon_tailassign_op : PLUS_EQ\n                 | MINUS_EQ\n                 | MUL_EQ\n                 | DIV_EQ\n                 | MOD_EQ\n                 | EQstringcon_tail : empty\n                      | PLUS string_val stringcon_tailstring_val : var_call\n                  | STR_LITempty :'
    
_lr_action_items = {'BIRTH':([0,],[2,]),'$end':([1,38,],[0,-1,]),'FUNCTION':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-158,15,-158,-4,-3,-5,-4,-158,-7,-8,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_INT':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-158,17,-158,-4,-3,-5,-4,-158,-7,-8,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_FLT':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-158,18,-158,-4,-3,-5,-4,-158,-7,-8,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_CHR':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-158,19,-158,-4,-3,-5,-4,-158,-7,-8,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_BLN':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-158,20,-158,-4,-3,-5,-4,-158,-7,-8,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_STR':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-158,21,-158,-4,-3,-5,-4,-158,-7,-8,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_LIST_INT':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-158,22,-158,-4,-3,-5,-4,-158,-7,-8,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_LIST_FLT':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-158,23,-158,-4,-3,-5,-4,-158,-7,-8,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_LIST_CHR':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-158,24,-158,-4,-3,-5,-4,-158,-7,-8,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_LIST_STR':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-158,25,-158,-4,-3,-5,-4,-158,-7,-8,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'FUNCTION_LIST_BLN':([2,3,4,5,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,],[-158,26,-158,-4,-3,-5,-4,-158,-7,-8,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,]),'MAIN_CASPER':([2,3,4,5,12,14,27,28,29,30,34,35,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,131,133,226,],[-158,-158,-158,-4,32,-82,-3,-5,-4,-158,-7,-8,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-12,-80,-81,]),'INT':([2,4,30,34,35,40,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,96,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,130,131,133,136,138,139,140,141,142,143,146,147,148,150,157,169,178,179,180,181,182,187,189,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,252,253,256,257,260,261,262,264,265,266,269,271,272,277,283,284,285,289,291,292,296,303,305,306,308,317,318,319,321,],[7,7,-158,-7,-8,7,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,7,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,7,-111,7,7,-12,-80,-112,7,7,7,7,7,7,-121,-122,-123,-134,-158,-145,-158,-35,-36,-37,-38,218,7,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,7,-158,-143,-39,-40,-41,-42,7,-158,-24,-155,-22,-158,7,-125,-113,-114,7,-126,7,-117,7,-116,-124,7,-115,]),'FLT':([2,4,30,34,35,40,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,96,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,130,131,133,136,138,139,140,141,142,143,146,147,148,150,157,169,178,179,180,181,182,189,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,252,253,256,257,260,261,262,264,265,266,269,271,272,277,283,284,285,289,291,292,296,303,305,306,308,317,318,319,321,],[8,8,-158,-7,-8,8,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,8,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,8,-111,8,8,-12,-80,-112,8,8,8,8,8,8,-121,-122,-123,-134,-158,-145,-158,-35,-36,-37,-38,8,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,8,-158,-143,-39,-40,-41,-42,8,-158,-24,-155,-22,-158,8,-125,-113,-114,8,-126,8,-117,8,-116,-124,8,-115,]),'BLN':([2,4,30,34,35,40,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,96,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,130,131,133,136,138,139,140,141,142,143,146,147,148,150,157,169,178,179,180,181,182,189,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,252,253,256,257,260,261,262,264,265,266,269,271,272,277,283,284,285,289,291,292,296,303,305,306,308,317,318,319,321,],[9,9,-158,-7,-8,9,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,9,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,9,-111,9,9,-12,-80,-112,9,9,9,9,9,9,-121,-122,-123,-134,-158,-145,-158,-35,-36,-37,-38,9,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,9,-158,-143,-39,-40,-41,-42,9,-158,-24,-155,-22,-158,9,-125,-113,-114,9,-126,9,-117,9,-116,-124,9,-115,]),'CHR':([2,4,30,34,35,40,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,96,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,130,131,133,136,138,139,140,141,142,143,146,147,148,150,157,169,178,179,180,181,182,189,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,252,253,256,257,260,261,262,264,265,266,269,271,272,277,283,284,285,289,291,292,296,303,305,306,308,317,318,319,321,],[10,10,-158,-7,-8,10,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,10,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,10,-111,10,10,-12,-80,-112,10,10,10,10,10,10,-121,-122,-123,-134,-158,-145,-158,-35,-36,-37,-38,10,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,10,-158,-143,-39,-40,-41,-42,10,-158,-24,-155,-22,-158,10,-125,-113,-114,10,-126,10,-117,10,-116,-124,10,-115,]),'STR':([2,4,30,34,35,40,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,64,65,66,70,71,78,80,81,82,85,86,88,89,96,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,130,131,133,136,138,139,140,141,142,143,146,147,148,150,157,169,178,179,180,181,182,189,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,252,253,256,257,260,261,262,264,265,266,269,271,272,277,283,284,285,289,291,292,296,303,305,306,308,317,318,319,321,],[11,11,-158,-7,-8,11,-158,-158,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-9,-10,-11,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,11,-158,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,11,-111,11,11,-12,-80,-112,11,11,11,11,11,11,-121,-122,-123,-134,-158,-145,-158,-35,-36,-37,-38,11,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,11,-158,-143,-39,-40,-41,-42,11,-158,-24,-155,-22,-158,11,-125,-113,-114,11,-126,11,-117,11,-116,-124,11,-115,]),'IDENT':([6,7,8,9,10,11,36,37,47,48,50,51,52,53,54,55,56,57,58,59,62,67,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,126,127,133,136,138,139,140,141,142,143,146,147,148,150,152,157,159,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,188,189,191,192,193,194,196,206,207,208,209,210,211,212,213,214,215,216,218,221,222,223,225,231,234,235,236,237,238,248,252,253,254,256,257,260,261,262,264,265,266,269,271,272,275,277,279,282,283,284,285,289,291,292,296,300,303,304,305,306,308,317,318,319,321,],[30,-30,-31,-32,-33,-34,41,52,-57,-58,52,-158,-158,-48,-49,-50,-51,-52,-53,-158,98,99,-56,-61,52,52,52,52,52,52,-59,-158,-54,-75,52,52,-78,-79,115,-55,-68,52,52,52,52,52,52,-158,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,52,-111,157,-158,-80,-112,52,52,52,52,52,52,-121,-122,-123,-134,52,-158,198,52,200,52,-145,52,52,-148,-149,-150,-151,-152,-153,-158,-35,-36,-37,-38,52,-158,-17,-18,52,225,52,-146,-158,-156,-157,-141,-142,52,240,240,240,240,249,-144,-158,-23,-158,-133,52,52,-147,-154,-158,52,-19,-21,271,-20,-158,-158,-143,-39,-40,-41,-42,-158,-158,-24,52,-155,52,52,-22,-158,-158,-125,-113,-114,-158,52,-126,52,-158,-117,-158,-116,-124,-158,-115,]),'FUNCTION_NAME':([13,15,16,17,18,19,20,21,22,23,24,25,26,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,146,147,148,150,152,157,169,170,172,173,174,175,176,177,178,179,180,181,182,189,191,192,193,196,206,207,208,209,210,211,212,213,214,215,216,221,222,223,225,231,236,237,238,252,253,256,257,260,261,262,264,265,266,269,271,272,275,277,283,284,285,289,291,292,296,300,303,305,306,308,317,318,319,321,],[33,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,149,-111,-158,-80,-112,149,149,149,149,149,149,-121,-122,-123,-134,149,-158,-145,149,-148,-149,-150,-151,-152,-153,-158,-35,-36,-37,-38,-158,-17,-18,149,149,-146,-158,-156,-157,-141,-142,149,243,243,243,243,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,-158,-158,-143,-39,-40,-41,-42,-158,-158,-24,149,-155,-22,-158,-158,-125,-113,-114,-158,149,-126,-158,-117,-158,-116,-124,-158,-115,]),'COMMA':([30,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,69,70,71,78,80,81,82,85,86,88,89,98,99,100,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,150,157,178,179,180,181,182,198,203,204,205,221,222,223,225,231,238,259,262,264,265,266,271,272,],[36,36,67,-13,-15,-16,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,103,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,130,36,-14,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-134,194,212,-35,-36,-37,-38,130,234,-139,-140,-144,254,-23,194,-133,212,234,-39,-40,-41,-42,194,-24,]),'EQ':([30,41,52,85,86,99,133,151,157,225,249,271,288,],[37,37,-158,-78,-79,37,-80,177,193,193,268,193,177,]),'GHOST':([31,134,],[38,-2,]),'LPAREN':([32,33,37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,144,145,149,152,153,154,156,166,170,172,173,174,175,176,177,183,184,185,186,188,193,196,212,213,214,215,216,243,248,270,275,282,293,300,304,],[39,40,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,166,167,168,50,187,188,190,50,50,-148,-149,-150,-151,-152,-153,213,214,215,216,50,50,50,50,50,50,50,50,263,50,282,50,50,304,50,50,]),'LBRACKET':([37,52,193,240,],[44,87,224,87,]),'TILDE':([37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,152,166,170,172,173,174,175,176,177,188,193,196,212,213,214,215,216,248,275,282,300,304,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-148,-149,-150,-151,-152,-153,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'INT_LIT':([37,44,49,50,72,73,74,75,76,77,83,84,87,90,91,92,93,94,95,103,152,166,168,170,172,173,174,175,176,177,188,193,196,212,213,214,215,216,224,234,248,268,275,282,300,304,],[53,53,53,53,53,53,53,53,53,53,53,53,114,53,53,53,53,53,53,53,53,53,53,53,-148,-149,-150,-151,-152,-153,53,53,53,53,53,53,53,53,53,53,53,280,53,53,53,53,]),'FLT_LIT':([37,44,49,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,103,152,166,168,170,172,173,174,175,176,177,188,193,196,212,213,214,215,216,224,234,248,275,282,300,304,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-148,-149,-150,-151,-152,-153,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'DAY':([37,44,49,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,103,152,166,168,170,172,173,174,175,176,177,188,193,196,212,213,214,215,216,224,234,248,275,282,300,304,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-148,-149,-150,-151,-152,-153,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'NIGHT':([37,44,49,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,103,152,166,168,170,172,173,174,175,176,177,188,193,196,212,213,214,215,216,224,234,248,275,282,300,304,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-148,-149,-150,-151,-152,-153,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'CHR_LIT':([37,44,49,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,103,152,166,168,170,172,173,174,175,176,177,188,193,196,212,213,214,215,216,224,234,248,275,282,300,304,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-148,-149,-150,-151,-152,-153,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'STR_LIT':([37,44,49,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,103,152,166,168,170,171,172,173,174,175,176,177,188,193,196,212,213,214,215,216,224,234,235,248,275,282,300,304,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,209,-148,-149,-150,-151,-152,-153,58,58,58,58,58,58,58,58,58,58,209,58,58,58,58,58,]),'RPAREN':([39,40,47,48,51,52,53,54,55,56,57,58,59,61,63,70,71,78,79,80,81,82,85,86,88,89,98,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,128,129,133,150,168,179,180,181,182,190,198,199,200,201,202,203,204,205,219,221,228,231,232,233,239,240,241,242,244,245,246,247,259,262,263,264,265,266,276,278,287,290,298,299,301,302,309,310,],[60,-158,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,97,-96,-56,-61,-59,110,-158,-54,-75,-78,-79,-55,-68,-158,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-95,-97,-80,-134,-158,-35,-36,-37,-38,221,-158,229,230,231,-135,-158,-139,-140,250,-144,-98,-133,-136,-137,262,-43,-44,-45,-47,264,265,266,-158,-39,278,-40,-41,-42,-138,-46,297,303,-128,-129,-131,-132,-130,316,]),'PLUS':([45,47,48,52,53,54,55,56,57,58,78,80,85,86,110,133,151,179,207,208,209,240,241,260,],[72,-57,-58,-158,-48,-49,-50,-51,-52,-53,-59,72,-78,-79,-60,-80,171,72,235,-156,-157,-158,-58,235,]),'MINUS':([45,47,48,52,53,54,55,56,57,58,78,80,85,86,110,133,179,240,241,],[73,-57,-58,-158,-48,-49,-50,-51,-52,-53,-59,73,-78,-79,-60,-80,73,-158,-58,]),'MULTIPLY':([45,47,48,52,53,54,55,56,57,58,78,80,85,86,110,133,179,240,241,],[74,-57,-58,-158,-48,-49,-50,-51,-52,-53,-59,74,-78,-79,-60,-80,74,-158,-58,]),'DIVISION':([45,47,48,52,53,54,55,56,57,58,78,80,85,86,110,133,179,240,241,],[75,-57,-58,-158,-48,-49,-50,-51,-52,-53,-59,75,-78,-79,-60,-80,75,-158,-58,]),'MODULO':([45,47,48,52,53,54,55,56,57,58,78,80,85,86,110,133,179,240,241,],[76,-57,-58,-158,-48,-49,-50,-51,-52,-53,-59,76,-78,-79,-60,-80,76,-158,-58,]),'EXPONENT':([45,47,48,52,53,54,55,56,57,58,78,80,85,86,110,133,179,240,241,],[77,-57,-58,-158,-48,-49,-50,-51,-52,-53,-59,77,-78,-79,-60,-80,77,-158,-58,]),'GT':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,179,240,241,],[-158,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,90,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-158,-158,-58,]),'LT':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,179,240,241,],[-158,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,91,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-158,-158,-58,]),'EQ_EQ':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,179,240,241,],[-158,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,92,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-158,-158,-58,]),'GT_EQ':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,179,240,241,],[-158,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,93,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-158,-158,-58,]),'LT_EQ':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,179,240,241,],[-158,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,94,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-158,-158,-58,]),'NOT_EQ':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,179,240,241,],[-158,-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,95,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-158,-158,-58,]),'AND':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,179,240,241,],[-158,-57,-58,83,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-158,-158,-58,]),'OR':([45,47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,179,240,241,],[-158,-57,-58,84,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-158,-158,-58,]),'CHECK':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,146,147,148,150,157,169,178,179,180,181,182,189,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,252,253,256,257,260,261,262,264,265,266,269,271,272,277,283,284,285,289,291,292,296,303,305,306,308,317,318,319,321,],[-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,144,-111,-158,-80,-112,144,144,144,144,144,144,-121,-122,-123,-134,-158,-145,-158,-35,-36,-37,-38,-158,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,-158,-158,-143,-39,-40,-41,-42,-158,-158,-24,-155,-22,-158,-158,-125,-113,-114,-158,-126,-158,-117,-158,-116,-124,-158,-115,]),'SWAP':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,146,147,148,150,157,169,178,179,180,181,182,189,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,252,253,256,257,260,261,262,264,265,266,269,271,272,277,283,284,285,289,291,292,296,303,305,306,308,317,318,319,321,],[-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,145,-111,-158,-80,-112,145,145,145,145,145,145,-121,-122,-123,-134,-158,-145,-158,-35,-36,-37,-38,-158,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,-158,-158,-143,-39,-40,-41,-42,-158,-158,-24,-155,-22,-158,-158,-125,-113,-114,-158,-126,-158,-117,-158,-116,-124,-158,-115,]),'DISPLAY':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,146,147,148,150,157,169,178,179,180,181,182,189,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,252,253,256,257,260,261,262,264,265,266,269,271,272,277,283,284,285,289,291,292,296,303,305,306,308,317,318,319,321,],[-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,152,-111,-158,-80,-112,152,152,152,152,152,152,-121,-122,-123,-134,-158,-145,-158,-35,-36,-37,-38,-158,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,-158,-158,-143,-39,-40,-41,-42,-158,-158,-24,-155,-22,-158,-158,-125,-113,-114,-158,-126,-158,-117,-158,-116,-124,-158,-115,]),'FOR':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,146,147,148,150,157,169,178,179,180,181,182,189,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,252,253,256,257,260,261,262,264,265,266,269,271,272,277,283,284,285,289,291,292,296,303,305,306,308,317,318,319,321,],[-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,153,-111,-158,-80,-112,153,153,153,153,153,153,-121,-122,-123,-134,-158,-145,-158,-35,-36,-37,-38,-158,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,-158,-158,-143,-39,-40,-41,-42,-158,-158,-24,-155,-22,-158,-158,-125,-113,-114,-158,-126,-158,-117,-158,-116,-124,-158,-115,]),'UNTIL':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,146,147,148,150,157,169,178,179,180,181,182,189,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,251,252,253,256,257,260,261,262,264,265,266,269,271,272,277,283,284,285,289,291,292,296,303,305,306,308,317,318,319,321,],[-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,154,-111,-158,-80,-112,154,154,154,154,154,154,-121,-122,-123,-134,-158,-145,-158,-35,-36,-37,-38,-158,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,270,-19,-21,-20,-158,-158,-143,-39,-40,-41,-42,-158,-158,-24,-155,-22,-158,-158,-125,-113,-114,-158,-126,-158,-117,-158,-116,-124,-158,-115,]),'REPEAT':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,146,147,148,150,157,169,178,179,180,181,182,189,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,252,253,256,257,260,261,262,264,265,266,269,271,272,277,283,284,285,289,291,292,296,303,305,306,308,317,318,319,321,],[-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,155,-111,-158,-80,-112,155,155,155,155,155,155,-121,-122,-123,-134,-158,-145,-158,-35,-36,-37,-38,-158,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,-158,-158,-143,-39,-40,-41,-42,-158,-158,-24,-155,-22,-158,-158,-125,-113,-114,-158,-126,-158,-117,-158,-116,-124,-158,-115,]),'INPUT':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,136,138,139,140,141,142,143,146,147,148,150,152,157,169,170,172,173,174,175,176,177,178,179,180,181,182,189,191,192,193,196,206,207,208,209,210,211,212,213,214,215,216,221,222,223,225,231,236,237,238,252,253,256,257,260,261,262,264,265,266,269,271,272,275,277,283,284,285,289,291,292,296,300,303,305,306,308,317,318,319,321,],[-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-112,156,-111,-158,-80,-112,156,156,156,156,156,156,-121,-122,-123,-134,156,-158,-145,156,-148,-149,-150,-151,-152,-153,-158,-35,-36,-37,-38,-158,-17,-18,156,156,-146,-158,-156,-157,-141,-142,156,156,156,156,156,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,-158,-158,-143,-39,-40,-41,-42,-158,-158,-24,156,-155,-22,-158,-158,-125,-113,-114,-158,156,-126,-158,-117,-158,-116,-124,-158,-115,]),'RBRACE':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,96,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,122,123,124,125,127,133,135,136,137,138,139,140,141,142,143,146,147,148,150,157,158,160,161,162,163,164,165,169,178,179,180,181,182,189,191,192,195,197,206,207,208,209,210,211,220,221,222,223,225,227,231,236,237,238,252,253,256,257,260,261,262,264,265,266,269,271,272,273,277,281,283,284,285,289,291,292,295,303,305,306,308,311,315,317,318,319,320,321,],[-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-158,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,134,-101,-158,-111,-158,-80,-102,-101,-104,-158,-158,-158,-158,-158,-158,-121,-122,-123,-134,-158,-158,-105,-106,-107,-108,-109,-110,-145,-158,-35,-36,-37,-38,-158,-17,-18,226,-100,-146,-158,-156,-157,-141,-142,251,-144,-158,-23,-158,-99,-133,-147,-154,-158,-19,-21,-20,-158,-158,-143,-39,-40,-41,-42,-158,-158,-24,284,-155,289,-22,-158,-158,-125,-113,-114,306,-126,-158,-117,-158,317,318,-116,-124,-158,321,-115,]),'REVIVE':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,127,133,135,136,137,138,139,140,141,142,143,146,147,148,150,157,158,160,161,162,163,164,165,169,178,179,180,181,182,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,252,253,256,260,261,262,264,265,266,271,272,277,283,284,289,291,292,303,306,317,318,321,],[-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-101,-158,-111,-158,-80,-102,-101,-104,-158,-158,-158,-158,-158,-158,-121,-122,-123,-134,-158,196,-105,-106,-107,-108,-109,-110,-145,-158,-35,-36,-37,-38,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,-158,-143,-39,-40,-41,-42,-158,-24,-155,-22,-158,-125,-113,-114,-126,-117,-116,-124,-115,]),'SHIFT':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,133,135,136,137,138,139,140,141,142,143,146,147,148,150,157,160,161,162,163,164,165,169,178,179,180,181,182,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,252,253,256,258,260,261,262,264,265,266,271,272,277,283,284,289,291,292,296,303,306,307,317,318,321,],[-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-101,-158,-111,-80,-102,-101,-104,-158,-158,-158,-158,-158,-158,-121,-122,-123,-134,-158,-105,-106,-107,-108,-109,-110,-145,-158,-35,-36,-37,-38,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,275,-158,-143,-39,-40,-41,-42,-158,-24,-155,-22,-158,-125,-113,-114,-158,-126,-117,275,-116,-124,-115,]),'OTHERWISE':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,123,124,125,133,135,136,137,138,139,140,141,142,143,146,147,148,150,157,160,161,162,163,164,165,169,178,179,180,181,182,191,192,206,207,208,209,210,211,221,222,223,225,231,236,237,238,252,253,256,260,261,262,264,265,266,271,272,274,277,283,284,289,291,292,296,303,306,307,312,313,314,317,318,321,],[-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-101,-158,-111,-80,-102,-101,-104,-158,-158,-158,-158,-158,-158,-121,-122,-123,-134,-158,-105,-106,-107,-108,-109,-110,-145,-158,-35,-36,-37,-38,-17,-18,-146,-158,-156,-157,-141,-142,-144,-158,-23,-158,-133,-147,-154,-158,-19,-21,-20,-158,-143,-39,-40,-41,-42,-158,-24,285,-155,-22,294,-125,-113,-114,-158,-126,-117,-158,-118,-119,-120,-116,-124,-115,]),'COLON':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,150,179,180,181,182,221,231,262,264,265,266,286,],[-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,-134,-35,-36,-37,-38,-144,-133,-39,-40,-41,-42,296,]),'SEMICOLON':([47,48,51,52,53,54,55,56,57,58,59,70,71,78,80,81,82,85,86,88,89,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,133,217,267,280,],[-57,-58,-158,-158,-48,-49,-50,-51,-52,-53,-158,-56,-61,-59,-158,-54,-75,-78,-79,-55,-68,-62,-63,-64,-65,-66,-67,-60,-76,-77,-69,-70,-71,-72,-73,-74,-80,248,279,-127,]),'PLUS_EQ':([52,85,86,133,151,288,],[-158,-78,-79,-80,172,172,]),'MINUS_EQ':([52,85,86,133,151,288,],[-158,-78,-79,-80,173,173,]),'MUL_EQ':([52,85,86,133,151,288,],[-158,-78,-79,-80,174,174,]),'DIV_EQ':([52,85,86,133,151,288,],[-158,-78,-79,-80,175,175,]),'MOD_EQ':([52,85,86,133,151,288,],[-158,-78,-79,-80,176,176,]),'PLUS_PLUS':([52,85,86,133,288,],[-158,-78,-79,-80,301,]),'MINUS_MINUS':([52,85,86,133,288,],[-158,-78,-79,-80,302,]),'RBRACKET':([53,54,55,56,57,58,68,69,101,102,113,114,115,132,255,],[-48,-49,-50,-51,-52,-53,100,-158,-25,-26,133,-28,-29,-27,272,]),'LBRACE':([60,97,155,229,230,250,294,297,316,],[96,127,189,257,258,269,305,308,319,]),'CONVERT_TO_INT':([152,170,172,173,174,175,176,177,193,196,212,275,300,],[183,183,-148,-149,-150,-151,-152,-153,183,183,183,183,183,]),'CONVERT_TO_FLT':([152,170,172,173,174,175,176,177,193,196,212,275,300,],[184,184,-148,-149,-150,-151,-152,-153,184,184,184,184,184,]),'CONVERT_TO_BLN':([152,170,172,173,174,175,176,177,193,196,212,275,300,],[185,185,-148,-149,-150,-151,-152,-153,185,185,185,185,185,]),'CONVERT_TO_STR':([152,170,172,173,174,175,176,177,193,196,212,275,300,],[186,186,-148,-149,-150,-151,-152,-153,186,186,186,186,186,]),'OTHERWISE_CHECK':([284,],[293,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_dec':([2,4,],[3,28,]),'global_statement':([2,4,],[4,4,]),'empty':([2,3,4,30,40,41,42,45,51,52,59,69,80,96,98,99,124,127,138,139,140,141,142,143,157,158,168,178,179,189,198,203,207,222,225,238,240,257,259,260,269,271,284,285,296,305,307,308,319,],[5,14,29,35,63,35,66,71,82,86,89,102,71,123,129,35,136,123,136,136,136,136,136,136,192,197,202,211,71,123,129,233,237,253,192,211,86,123,233,237,123,192,292,123,123,123,313,123,123,]),'data_type':([2,4,40,96,124,127,130,138,139,140,141,142,143,189,257,269,285,296,305,308,319,],[6,6,62,126,126,126,159,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'function_statements':([3,],[12,]),'ret_type':([3,],[13,]),'function_dtype':([3,],[16,]),'global_tail':([4,],[27,]),'main_function':([12,],[31,]),'global_statement_tail':([30,41,99,],[34,64,131,]),'global_dec_value':([37,],[42,]),'global_value':([37,],[43,]),'factor':([37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,152,166,170,188,193,196,212,213,214,215,216,248,275,282,300,304,],[45,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,179,80,179,80,179,179,179,80,80,80,80,80,179,80,179,80,]),'expression':([37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,152,166,170,188,193,196,212,213,214,215,216,248,275,282,300,304,],[46,79,104,105,106,107,108,109,111,112,116,117,118,119,120,121,181,199,181,219,181,181,181,242,242,242,242,267,181,290,181,310,]),'var_call':([37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,124,138,139,140,141,142,143,152,166,168,170,171,188,193,196,212,213,214,215,216,234,235,248,275,279,282,300,304,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,151,151,151,151,151,151,151,47,47,205,47,208,47,47,47,47,47,47,47,47,205,208,47,47,288,47,47,47,]),'literal':([37,44,49,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,103,152,166,168,170,188,193,196,212,213,214,215,216,224,234,248,275,282,300,304,],[48,69,78,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,69,48,48,204,48,48,48,48,48,241,241,241,241,69,204,48,48,48,48,48,]),'expr_head':([37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,152,166,170,188,193,196,212,213,214,215,216,248,275,282,300,304,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'term':([37,50,72,73,74,75,76,77,83,84,90,91,92,93,94,95,152,166,170,188,193,196,212,213,214,215,216,248,275,282,300,304,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'parameters':([40,],[61,]),'global_tail2':([42,],[65,]),'list_element':([44,103,224,],[68,132,255,]),'factor_tail':([45,80,179,],[70,70,70,]),'expr_tail':([51,],[81,]),'var_call_tail':([52,240,],[85,85,]),'term_tail':([59,],[88,]),'element_tail':([69,],[101,]),'index':([87,],[113,]),'statements':([96,124,127,138,139,140,141,142,143,189,257,269,285,296,305,308,319,],[122,137,158,137,137,137,137,137,137,220,273,281,295,307,311,315,320,]),'local_dec':([96,124,127,138,139,140,141,142,143,189,257,269,285,296,305,308,319,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'var_statement':([96,124,127,138,139,140,141,142,143,189,257,269,285,296,305,308,319,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'parameters_tail':([98,198,],[128,228,]),'statements_tail':([124,138,139,140,141,142,143,],[135,160,161,162,163,164,165,]),'conditional_statement':([124,138,139,140,141,142,143,],[138,138,138,138,138,138,138,]),'switch_statement':([124,138,139,140,141,142,143,],[139,139,139,139,139,139,139,]),'loop_statement':([124,138,139,140,141,142,143,],[140,140,140,140,140,140,140,]),'function_call':([124,138,139,140,141,142,143,152,170,193,196,212,275,300,],[141,141,141,141,141,141,141,182,182,182,182,182,182,182,]),'string_operation_statement':([124,138,139,140,141,142,143,],[142,142,142,142,142,142,142,]),'output_statement':([124,138,139,140,141,142,143,],[143,143,143,143,143,143,143,]),'for_loop':([124,138,139,140,141,142,143,],[146,146,146,146,146,146,146,]),'until_loop':([124,138,139,140,141,142,143,],[147,147,147,147,147,147,147,]),'repeat_until':([124,138,139,140,141,142,143,],[148,148,148,148,148,148,148,]),'input_statement':([124,138,139,140,141,142,143,152,170,193,196,212,213,214,215,216,275,300,],[150,150,150,150,150,150,150,150,150,150,150,150,244,244,244,244,150,150,]),'string_operation_tail':([151,],[169,]),'assign_op':([151,288,],[170,300,]),'value':([152,170,193,196,212,275,300,],[178,206,223,227,238,286,309,]),'type_cast':([152,170,193,196,212,275,300,],[180,180,180,180,180,180,180,]),'var_tail':([157,225,271,],[191,256,283,]),'revive':([158,],[195,]),'arguments':([168,],[201,]),'arg_value':([168,234,],[203,259,]),'string_val':([171,235,],[207,260,]),'next_val':([178,238,],[210,261,]),'control_variable':([187,],[217,]),'tail_value':([193,],[222,]),'arg_tail':([203,259,],[232,276,]),'stringcon_tail':([207,260,],[236,277,]),'typecast_value':([213,214,215,216,],[239,245,246,247,]),'var_tail2':([222,],[252,]),'switch_condition':([258,307,],[274,314,]),'update':([279,],[287,]),'conditional_tail':([284,],[291,]),'update_tail':([288,],[298,]),'postfix':([288,],[299,]),'switchcond_tail':([307,],[312,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BIRTH global_dec function_statements main_function GHOST','program',5,'p_program','Parser.py',40),
  ('main_function -> MAIN_CASPER LPAREN RPAREN LBRACE statements RBRACE','main_function',6,'p_main_function','Parser.py',47),
  ('global_dec -> global_statement global_tail','global_dec',2,'p_global_dec','Parser.py',54),
  ('global_dec -> empty','global_dec',1,'p_global_dec','Parser.py',55),
  ('global_tail -> global_dec','global_tail',1,'p_global_tail','Parser.py',66),
  ('global_tail -> empty','global_tail',1,'p_global_tail','Parser.py',67),
  ('global_statement -> data_type IDENT global_statement_tail','global_statement',3,'p_global_statement','Parser.py',78),
  ('global_statement_tail -> empty','global_statement_tail',1,'p_global_statement_tail','Parser.py',85),
  ('global_statement_tail -> COMMA IDENT global_statement_tail','global_statement_tail',3,'p_global_statement_tail','Parser.py',86),
  ('global_statement_tail -> EQ global_dec_value global_tail2','global_statement_tail',3,'p_global_statement_tail','Parser.py',87),
  ('global_tail2 -> empty','global_tail2',1,'p_global_tail2','Parser.py',99),
  ('global_tail2 -> COMMA IDENT global_statement_tail','global_tail2',3,'p_global_tail2','Parser.py',100),
  ('global_dec_value -> global_value','global_dec_value',1,'p_global_dec_value','Parser.py',110),
  ('global_dec_value -> LBRACKET list_element RBRACKET','global_dec_value',3,'p_global_dec_value','Parser.py',111),
  ('global_value -> factor','global_value',1,'p_global_value','Parser.py',121),
  ('global_value -> expression','global_value',1,'p_global_value','Parser.py',122),
  ('var_statement -> data_type IDENT var_tail','var_statement',3,'p_var_statement','Parser.py',129),
  ('var_tail -> empty','var_tail',1,'p_var_tail','Parser.py',136),
  ('var_tail -> EQ tail_value var_tail2','var_tail',3,'p_var_tail','Parser.py',137),
  ('var_tail -> COMMA IDENT var_tail','var_tail',3,'p_var_tail','Parser.py',138),
  ('var_tail2 -> empty','var_tail2',1,'p_var_tail2','Parser.py',150),
  ('var_tail2 -> COMMA IDENT var_tail','var_tail2',3,'p_var_tail2','Parser.py',151),
  ('tail_value -> value','tail_value',1,'p_tail_value','Parser.py',161),
  ('tail_value -> LBRACKET list_element RBRACKET','tail_value',3,'p_tail_value','Parser.py',162),
  ('list_element -> literal element_tail','list_element',2,'p_list_element','Parser.py',172),
  ('element_tail -> empty','element_tail',1,'p_element_tail','Parser.py',182),
  ('element_tail -> COMMA list_element','element_tail',2,'p_element_tail','Parser.py',183),
  ('index -> INT_LIT','index',1,'p_index','Parser.py',193),
  ('index -> IDENT','index',1,'p_index','Parser.py',194),
  ('data_type -> INT','data_type',1,'p_data_type','Parser.py',201),
  ('data_type -> FLT','data_type',1,'p_data_type','Parser.py',202),
  ('data_type -> BLN','data_type',1,'p_data_type','Parser.py',203),
  ('data_type -> CHR','data_type',1,'p_data_type','Parser.py',204),
  ('data_type -> STR','data_type',1,'p_data_type','Parser.py',205),
  ('value -> factor','value',1,'p_value','Parser.py',212),
  ('value -> type_cast','value',1,'p_value','Parser.py',213),
  ('value -> expression','value',1,'p_value','Parser.py',214),
  ('value -> function_call','value',1,'p_value','Parser.py',215),
  ('type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',222),
  ('type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',223),
  ('type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',224),
  ('type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',225),
  ('typecast_value -> IDENT','typecast_value',1,'p_typecast_value','Parser.py',232),
  ('typecast_value -> literal','typecast_value',1,'p_typecast_value','Parser.py',233),
  ('typecast_value -> expression','typecast_value',1,'p_typecast_value','Parser.py',234),
  ('typecast_value -> FUNCTION_NAME LPAREN RPAREN','typecast_value',3,'p_typecast_value','Parser.py',235),
  ('typecast_value -> input_statement','typecast_value',1,'p_typecast_value','Parser.py',236),
  ('literal -> INT_LIT','literal',1,'p_literal','Parser.py',246),
  ('literal -> FLT_LIT','literal',1,'p_literal','Parser.py',247),
  ('literal -> DAY','literal',1,'p_literal','Parser.py',248),
  ('literal -> NIGHT','literal',1,'p_literal','Parser.py',249),
  ('literal -> CHR_LIT','literal',1,'p_literal','Parser.py',250),
  ('literal -> STR_LIT','literal',1,'p_literal','Parser.py',251),
  ('expression -> expr_head expr_tail','expression',2,'p_expression','Parser.py',258),
  ('expr_head -> term term_tail','expr_head',2,'p_expr_head','Parser.py',268),
  ('term -> factor factor_tail','term',2,'p_term','Parser.py',278),
  ('factor -> var_call','factor',1,'p_factor','Parser.py',288),
  ('factor -> literal','factor',1,'p_factor','Parser.py',289),
  ('factor -> TILDE literal','factor',2,'p_factor','Parser.py',290),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','Parser.py',291),
  ('factor_tail -> empty','factor_tail',1,'p_factor_tail','Parser.py',303),
  ('factor_tail -> PLUS expression','factor_tail',2,'p_factor_tail','Parser.py',304),
  ('factor_tail -> MINUS expression','factor_tail',2,'p_factor_tail','Parser.py',305),
  ('factor_tail -> MULTIPLY expression','factor_tail',2,'p_factor_tail','Parser.py',306),
  ('factor_tail -> DIVISION expression','factor_tail',2,'p_factor_tail','Parser.py',307),
  ('factor_tail -> MODULO expression','factor_tail',2,'p_factor_tail','Parser.py',308),
  ('factor_tail -> EXPONENT expression','factor_tail',2,'p_factor_tail','Parser.py',309),
  ('term_tail -> empty','term_tail',1,'p_term_tail','Parser.py',319),
  ('term_tail -> GT expression','term_tail',2,'p_term_tail','Parser.py',320),
  ('term_tail -> LT expression','term_tail',2,'p_term_tail','Parser.py',321),
  ('term_tail -> EQ_EQ expression','term_tail',2,'p_term_tail','Parser.py',322),
  ('term_tail -> GT_EQ expression','term_tail',2,'p_term_tail','Parser.py',323),
  ('term_tail -> LT_EQ expression','term_tail',2,'p_term_tail','Parser.py',324),
  ('term_tail -> NOT_EQ expression','term_tail',2,'p_term_tail','Parser.py',325),
  ('expr_tail -> empty','expr_tail',1,'p_expr_tail','Parser.py',340),
  ('expr_tail -> AND expression','expr_tail',2,'p_expr_tail','Parser.py',341),
  ('expr_tail -> OR expression','expr_tail',2,'p_expr_tail','Parser.py',342),
  ('var_call -> IDENT var_call_tail','var_call',2,'p_var_call','Parser.py',352),
  ('var_call_tail -> empty','var_call_tail',1,'p_var_call_tail','Parser.py',359),
  ('var_call_tail -> LBRACKET index RBRACKET','var_call_tail',3,'p_var_call_tail','Parser.py',360),
  ('function_statements -> ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements revive RBRACE','function_statements',9,'p_function_statements','Parser.py',370),
  ('function_statements -> empty','function_statements',1,'p_function_statements','Parser.py',371),
  ('ret_type -> FUNCTION','ret_type',1,'p_ret_type','Parser.py',386),
  ('ret_type -> function_dtype','ret_type',1,'p_ret_type','Parser.py',387),
  ('function_dtype -> FUNCTION_INT','function_dtype',1,'p_function_dtype','Parser.py',397),
  ('function_dtype -> FUNCTION_FLT','function_dtype',1,'p_function_dtype','Parser.py',398),
  ('function_dtype -> FUNCTION_CHR','function_dtype',1,'p_function_dtype','Parser.py',399),
  ('function_dtype -> FUNCTION_BLN','function_dtype',1,'p_function_dtype','Parser.py',400),
  ('function_dtype -> FUNCTION_STR','function_dtype',1,'p_function_dtype','Parser.py',401),
  ('function_dtype -> FUNCTION_LIST_INT','function_dtype',1,'p_function_dtype','Parser.py',402),
  ('function_dtype -> FUNCTION_LIST_FLT','function_dtype',1,'p_function_dtype','Parser.py',403),
  ('function_dtype -> FUNCTION_LIST_CHR','function_dtype',1,'p_function_dtype','Parser.py',404),
  ('function_dtype -> FUNCTION_LIST_STR','function_dtype',1,'p_function_dtype','Parser.py',405),
  ('function_dtype -> FUNCTION_LIST_BLN','function_dtype',1,'p_function_dtype','Parser.py',406),
  ('parameters -> data_type IDENT parameters_tail','parameters',3,'p_parameters','Parser.py',413),
  ('parameters -> empty','parameters',1,'p_parameters','Parser.py',414),
  ('parameters_tail -> empty','parameters_tail',1,'p_parameters_tail','Parser.py',424),
  ('parameters_tail -> COMMA data_type IDENT parameters_tail','parameters_tail',4,'p_parameters_tail','Parser.py',425),
  ('revive -> REVIVE value','revive',2,'p_revive','Parser.py',435),
  ('revive -> empty','revive',1,'p_revive','Parser.py',436),
  ('statements -> empty','statements',1,'p_statements','Parser.py',446),
  ('statements -> local_dec statements_tail','statements',2,'p_statements','Parser.py',447),
  ('statements_tail -> empty','statements_tail',1,'p_statements_tail','Parser.py',457),
  ('statements_tail -> statements','statements_tail',1,'p_statements_tail','Parser.py',458),
  ('statements_tail -> conditional_statement statements_tail','statements_tail',2,'p_statements_tail','Parser.py',459),
  ('statements_tail -> switch_statement statements_tail','statements_tail',2,'p_statements_tail','Parser.py',460),
  ('statements_tail -> loop_statement statements_tail','statements_tail',2,'p_statements_tail','Parser.py',461),
  ('statements_tail -> function_call statements_tail','statements_tail',2,'p_statements_tail','Parser.py',462),
  ('statements_tail -> string_operation_statement statements_tail','statements_tail',2,'p_statements_tail','Parser.py',463),
  ('statements_tail -> output_statement statements_tail','statements_tail',2,'p_statements_tail','Parser.py',464),
  ('local_dec -> var_statement','local_dec',1,'p_local_dec','Parser.py',476),
  ('local_dec -> empty','local_dec',1,'p_local_dec','Parser.py',477),
  ('conditional_statement -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE conditional_tail','conditional_statement',8,'p_conditional_statement','Parser.py',485),
  ('conditional_tail -> empty','conditional_tail',1,'p_conditional_tail','Parser.py',492),
  ('conditional_tail -> OTHERWISE_CHECK LPAREN expression RPAREN LBRACE statements RBRACE','conditional_tail',7,'p_conditional_tail','Parser.py',493),
  ('conditional_tail -> OTHERWISE LBRACE statements RBRACE','conditional_tail',4,'p_conditional_tail','Parser.py',494),
  ('switch_statement -> SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE statements RBRACE','switch_statement',9,'p_switch_statement','Parser.py',506),
  ('switch_condition -> SHIFT value COLON statements switchcond_tail','switch_condition',5,'p_switch_condition','Parser.py',513),
  ('switchcond_tail -> empty','switchcond_tail',1,'p_switchcond_tail','Parser.py',520),
  ('switchcond_tail -> switch_condition','switchcond_tail',1,'p_switchcond_tail','Parser.py',521),
  ('loop_statement -> for_loop','loop_statement',1,'p_loop_statement','Parser.py',531),
  ('loop_statement -> until_loop','loop_statement',1,'p_loop_statement','Parser.py',532),
  ('loop_statement -> repeat_until','loop_statement',1,'p_loop_statement','Parser.py',533),
  ('for_loop -> FOR LPAREN control_variable SEMICOLON expression SEMICOLON update RPAREN LBRACE statements RBRACE','for_loop',11,'p_for_loop','Parser.py',540),
  ('until_loop -> UNTIL LPAREN expression RPAREN LBRACE statements RBRACE','until_loop',7,'p_until_loop','Parser.py',547),
  ('repeat_until -> REPEAT LBRACE statements RBRACE UNTIL LPAREN expression RPAREN','repeat_until',8,'p_repeat_until','Parser.py',554),
  ('control_variable -> INT IDENT EQ INT_LIT','control_variable',4,'p_control_variable','Parser.py',561),
  ('update -> var_call update_tail','update',2,'p_update','Parser.py',568),
  ('update_tail -> postfix','update_tail',1,'p_update_tail','Parser.py',575),
  ('update_tail -> assign_op value','update_tail',2,'p_update_tail','Parser.py',576),
  ('postfix -> PLUS_PLUS','postfix',1,'p_postfix','Parser.py',586),
  ('postfix -> MINUS_MINUS','postfix',1,'p_postfix','Parser.py',587),
  ('function_call -> FUNCTION_NAME LPAREN arguments RPAREN','function_call',4,'p_function_call','Parser.py',594),
  ('function_call -> input_statement','function_call',1,'p_function_call','Parser.py',595),
  ('arguments -> empty','arguments',1,'p_arguments','Parser.py',605),
  ('arguments -> arg_value arg_tail','arguments',2,'p_arguments','Parser.py',606),
  ('arg_tail -> empty','arg_tail',1,'p_arg_tail','Parser.py',616),
  ('arg_tail -> COMMA arg_value arg_tail','arg_tail',3,'p_arg_tail','Parser.py',617),
  ('arg_value -> literal','arg_value',1,'p_arg_value','Parser.py',627),
  ('arg_value -> var_call','arg_value',1,'p_arg_value','Parser.py',628),
  ('output_statement -> DISPLAY value next_val','output_statement',3,'p_output_statement','Parser.py',635),
  ('next_val -> empty','next_val',1,'p_next_val','Parser.py',642),
  ('next_val -> COMMA value next_val','next_val',3,'p_next_val','Parser.py',643),
  ('input_statement -> INPUT LPAREN RPAREN','input_statement',3,'p_input_statement','Parser.py',653),
  ('string_operation_statement -> var_call string_operation_tail','string_operation_statement',2,'p_string_operation_statement','Parser.py',660),
  ('string_operation_tail -> assign_op value','string_operation_tail',2,'p_string_operation_tail','Parser.py',667),
  ('string_operation_tail -> PLUS string_val stringcon_tail','string_operation_tail',3,'p_string_operation_tail','Parser.py',668),
  ('assign_op -> PLUS_EQ','assign_op',1,'p_assign_op','Parser.py',678),
  ('assign_op -> MINUS_EQ','assign_op',1,'p_assign_op','Parser.py',679),
  ('assign_op -> MUL_EQ','assign_op',1,'p_assign_op','Parser.py',680),
  ('assign_op -> DIV_EQ','assign_op',1,'p_assign_op','Parser.py',681),
  ('assign_op -> MOD_EQ','assign_op',1,'p_assign_op','Parser.py',682),
  ('assign_op -> EQ','assign_op',1,'p_assign_op','Parser.py',683),
  ('stringcon_tail -> empty','stringcon_tail',1,'p_stringcon_tail','Parser.py',690),
  ('stringcon_tail -> PLUS string_val stringcon_tail','stringcon_tail',3,'p_stringcon_tail','Parser.py',691),
  ('string_val -> var_call','string_val',1,'p_string_val','Parser.py',701),
  ('string_val -> STR_LIT','string_val',1,'p_string_val','Parser.py',702),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',718),
]
