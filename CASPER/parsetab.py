
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEXPONENTrightNOTMINUSleftMULTIPLYDIVISIONMODULOleftPLUSMINUSleftPLUS_PLUSMINUS_MINUSleftEQ_EQNOT_EQLTGTLT_EQGT_EQleftANDleftORrightEQPLUS_EQMINUS_EQMUL_EQDIV_EQMOD_EQAND BIRTH BLN BLN_LIT CARRIAGE_RETURN CHECK CHR CHR_LIT COLON COMMA COMMENT CONVERT_TO_BLN CONVERT_TO_FLT CONVERT_TO_INT CONVERT_TO_STR DAY DISPLAY DIVISION DIV_EQ DOT DOUBLE_LT DOUBLE_SLASH EOF EQ EQ_EQ EXPONENT FLT FLT_LIT FOR FUNCTION FUNCTION_BLN FUNCTION_CHR FUNCTION_FLT FUNCTION_INT FUNCTION_LIST_BLN FUNCTION_LIST_BLN2D FUNCTION_LIST_CHR FUNCTION_LIST_CHR2D FUNCTION_LIST_FLT FUNCTION_LIST_FLT2D FUNCTION_LIST_INT FUNCTION_LIST_INT2D FUNCTION_LIST_STR FUNCTION_LIST_STR2D FUNCTION_NAME FUNCTION_STR GHOST GT GT_EQ IDENT ILLEGAL IN INPUT INT INT_LIT LBRACE LBRACKET LIST_BLN LIST_BLN2D LIST_CHR LIST_CHR2D LIST_FLT LIST_FLT2D LIST_INT LIST_INT2D LIST_STR LIST_STR2D LPAREN LT LT_EQ MAIN_CASPER MEASURE MINUS MINUS_EQ MINUS_MINUS MODULO MOD_EQ MULTIPLY MUL_EQ NEWLINE NIGHT NOT NOT_EQ OR OTHERWISE OTHERWISE_CHECK PLUS PLUS_EQ PLUS_PLUS POW PUSH RBRACE RBRACKET REPEAT REVIVE RPAREN SEMICOLON SHIFT SKIP SPLICE STOP STR STR_LIT SWAP TILDE TYPE UNTILprogram : BIRTH LBRACE global_dec function_statements main_function RBRACE GHOSTmain_function : MAIN_CASPER LPAREN RPAREN LBRACE statements RBRACE\n    global_dec : global_statement SEMICOLON global_tail \n               | empty                            \n    \n        global_tail : global_dec\n    \n    global_statement : var_statement global_statement_tail \n    \n        var_statement : data_type IDENT list_dec \n    \n    list_dec : empty               \n             | LBRACKET RBRACKET _2d_list \n    \n    _2d_list : empty            \n             | LBRACKET RBRACKET \n    \n    global_statement_tail : empty                        \n                          | COMMA IDENT global_statement_tail \n                          | EQ global_value global_statement_tail2 \n    \n    global_statement_tail2 : COMMA IDENT global_statement_tail \n                           | empty                           \n    \n    global_value : expression   \n                 | list_value   \n    \n     list_value : LBRACKET list_element RBRACKET\n    \n    list_element : literal element_tail\n                 | list_value element_tail\n    \n    element_tail : COMMA list_element  \n                 | empty              \n    \n    data_type : INT   \n              | FLT   \n              | BLN  \n              | CHR  \n              | STR  \n    \n    expression : factor factor_tail\n    \n    factor : var_call postfix           \n           | literal1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN factor_expression RPAREN    \n    \n    factor_expression : factor_expression_factor factor_expression_tail\n    \n    factor_expression_factor : factor_var_call factor_postfix           \n           | factor_expression1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN factor_expression RPAREN    \n    \n    factor_var_call : IDENT factor_list_index  \n    \n    factor_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    factor_postfix : empty        \n            | factor_postfix_op  \n    \n    factor_list_index : LBRACKET factor_index RBRACKET factor_list_index2  \n               | empty                                \n    \n    factor_list_index2 : LBRACKET factor_index RBRACKET \n                | empty                   \n    factor_index : INT_LITfactor_index : IDENT\n    factor_expression_tail : PLUS factor_expression_factor factor_expression_tail\n                | MINUS factor_expression_factor factor_expression_tail\n                | MULTIPLY factor_expression_factor factor_expression_tail\n                | DIVISION factor_expression_factor factor_expression_tail\n                | MODULO factor_expression_factor factor_expression_tail\n                | EXPONENT factor_expression_factor factor_expression_tail\n                | GT factor_expression_factor factor_expression_tail\n                | LT factor_expression_factor factor_expression_tail\n                | EQ_EQ factor_expression_factor factor_expression_tail\n                | GT_EQ factor_expression_factor factor_expression_tail\n                | LT_EQ factor_expression_factor factor_expression_tail\n                | NOT_EQ factor_expression_factor factor_expression_tail\n                | AND factor_expression_factor factor_expression_tail\n                | OR factor_expression_factor factor_expression_tail\n                | empty\n    \n    factor_expression1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    factor_tail : PLUS factor factor_tail\n                | MINUS factor factor_tail\n                | MULTIPLY factor factor_tail\n                | DIVISION factor factor_tail\n                | MODULO factor factor_tail\n                | EXPONENT factor factor_tail\n                | GT factor factor_tail\n                | LT factor factor_tail\n                | EQ_EQ factor factor_tail\n                | GT_EQ factor factor_tail\n                | LT_EQ factor factor_tail\n                | NOT_EQ factor factor_tail\n                | AND factor factor_tail\n                | OR factor factor_tail\n                | empty\n    \n    literal : literal1\n            | literal2\n    \n    literal1 : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    literal2 : CHR_LIT\n    \n    function_statements : ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements revive RBRACE function_statements_tail  \n                        | empty                                                          \n    \n    function_statements_tail : function_statements \n                             | empty               \n    \n    ret_type : FUNCTION           \n             | function_dtype    \n    \n    function_dtype : FUNCTION_INT       \n                   | FUNCTION_FLT      \n                   | FUNCTION_CHR       \n                   | FUNCTION_BLN       \n                   | FUNCTION_STR       \n                   | FUNCTION_LIST_INT \n                   | FUNCTION_LIST_FLT  \n                   | FUNCTION_LIST_CHR \n                   | FUNCTION_LIST_STR  \n                   | FUNCTION_LIST_BLN  \n    \n    parameters : data_type IDENT parameters_tail  \n               | empty                            \n    \n    parameters_tail : COMMA data_type IDENT parameters_tail \n                    | empty                                 \n    \n    revive : REVIVE revive_value SEMICOLON\n           | empty        \n    revive_value : revive_type_cast\n             | revive_expression\n             | function_call\n    revive_expression : revive_factor revive_factor_tail\n    \n    revive_factor : revive_var_call revive_postfix           \n           | revive_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN revive_factor RPAREN    \n    \n    revive_var_call : IDENT revive_list_index  \n    \n    revive_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    revive_postfix : empty        \n            | revive_postfix_op  \n    \n    revive_list_index : LBRACKET revive_index RBRACKET revive_list_index2  \n               | empty                                \n    \n    revive_list_index2 : LBRACKET revive_index RBRACKET \n                | empty                   \n    revive_index : INT_LITrevive_index : IDENT\n    revive_factor_tail : PLUS revive_factor revive_factor_tail\n                | MINUS revive_factor revive_factor_tail\n                | MULTIPLY revive_factor revive_factor_tail\n                | DIVISION revive_factor revive_factor_tail\n                | MODULO revive_factor revive_factor_tail\n                | EXPONENT revive_factor revive_factor_tail\n                | GT revive_factor revive_factor_tail\n                | LT revive_factor revive_factor_tail\n                | EQ_EQ revive_factor revive_factor_tail\n                | GT_EQ revive_factor revive_factor_tail\n                | LT_EQ revive_factor revive_factor_tail\n                | NOT_EQ revive_factor revive_factor_tail\n                | AND revive_factor revive_factor_tail\n                | OR revive_factor revive_factor_tail\n                | empty\n    \n    revive_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    revive_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPARENstatements : empty\n           | local_dec statements_tail \n    statements_tail : switch_statement statements\n                    | loop_statement statements\n                    | function_call statements\n                    | assignment_statement statements\n                    | output_statement statements\n                    | conditional_statement statements\n                    | statements\n    \n    local_dec : local_var_statement local_dec_tail SEMICOLON\n              | empty\n    \n        local_var_statement : local_data_type IDENT local_list_dec\n    \n    local_data_type : INT   \n              | FLT   \n              | BLN  \n              | CHR  \n              | STR  \n    \n    local_list_dec : empty               \n             | LBRACKET RBRACKET local_2d_list \n    \n    local_2d_list : empty            \n             | LBRACKET RBRACKET \n    \n    local_dec_tail : empty                          \n                   | COMMA IDENT local_dec_tail     \n                   | EQ local_value local_dec_tail2  \n    \n    local_dec_tail2 : COMMA IDENT local_dec_tail  \n                    | empty                      \n    \n    local_value : local_value_value      \n                | list_value  \n    local_value_value  : local_type_cast\n             | local_expression\n             | function_call\n    local_expression : local_factor local_factor_tail\n    \n    local_factor : local_var_call local_postfix           \n           | local_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN local_factor RPAREN    \n    \n    local_var_call : IDENT local_list_index  \n    \n    local_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    local_postfix : empty        \n            | local_postfix_op  \n    \n    local_list_index : LBRACKET local_index RBRACKET local_list_index2  \n               | empty                                \n    \n    local_list_index2 : LBRACKET local_index RBRACKET \n                | empty                   \n    local_index : INT_LITlocal_index : IDENT\n    local_factor_tail : PLUS local_factor local_factor_tail\n                | MINUS local_factor local_factor_tail\n                | MULTIPLY local_factor local_factor_tail\n                | DIVISION local_factor local_factor_tail\n                | MODULO local_factor local_factor_tail\n                | EXPONENT local_factor local_factor_tail\n                | GT local_factor local_factor_tail\n                | LT local_factor local_factor_tail\n                | EQ_EQ local_factor local_factor_tail\n                | GT_EQ local_factor local_factor_tail\n                | LT_EQ local_factor local_factor_tail\n                | NOT_EQ local_factor local_factor_tail\n                | AND local_factor local_factor_tail\n                | OR local_factor local_factor_tail\n                | empty\n    \n    local_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    local_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    conditional_statement : CHECK LPAREN condition RPAREN LBRACE  statements RBRACE conditional_tail OTHERWISE LBRACE statements RBRACE \n    \n    conditional_tail : OTHERWISE_CHECK LPAREN condition RPAREN LBRACE statements RBRACE conditional_tail \n                     | empty                                            \n    \n    condition : condition_factor condition_tail\n    \n    condition_factor : condition_var_call condition_postfix           \n           | condition1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN condition RPAREN    \n    \n    condition_var_call : IDENT condition_list_index  \n    \n    condition_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    condition_postfix : empty        \n            | condition_postfix_op  \n    \n    condition_list_index : LBRACKET condition_index RBRACKET condition_list_index2  \n               | empty                                \n    \n    condition_list_index2 : LBRACKET condition_index RBRACKET \n                | empty                   \n    condition_index : INT_LITcondition_index : IDENT\n    condition_tail : PLUS condition_factor condition_tail\n                | MINUS condition_factor condition_tail\n                | MULTIPLY condition_factor condition_tail\n                | DIVISION condition_factor condition_tail\n                | MODULO condition_factor condition_tail\n                | EXPONENT condition_factor condition_tail\n                | GT condition_factor condition_tail\n                | LT condition_factor condition_tail\n                | EQ_EQ condition_factor condition_tail\n                | GT_EQ condition_factor condition_tail\n                | LT_EQ condition_factor condition_tail\n                | NOT_EQ condition_factor condition_tail\n                | AND condition_factor condition_tail\n                | OR condition_factor condition_tail\n                | empty\n    \n    condition1 : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    switch_statement : SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE LBRACE statements RBRACE RBRACE\n    \n    switch_condition : SHIFT switch_value COLON statements switchcond_tail\n    switch_value  : switch_type_cast\n             | switch_expression\n             | function_call\n    switch_expression : switch_factor switch_factor_tail\n    \n    switch_factor : switch_var_call switch_postfix           \n           | switch_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN switch_factor RPAREN    \n    \n    switch_var_call : IDENT switch_list_index  \n    \n    switch_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    switch_postfix : empty        \n            | switch_postfix_op  \n    \n    switch_list_index : LBRACKET switch_index RBRACKET switch_list_index2  \n               | empty                                \n    \n    switch_list_index2 : LBRACKET switch_index RBRACKET \n                | empty                   \n    switch_index : INT_LITswitch_index : IDENT\n    switch_factor_tail : PLUS switch_factor switch_factor_tail\n                | MINUS switch_factor switch_factor_tail\n                | MULTIPLY switch_factor switch_factor_tail\n                | DIVISION switch_factor switch_factor_tail\n                | MODULO switch_factor switch_factor_tail\n                | EXPONENT switch_factor switch_factor_tail\n                | GT switch_factor switch_factor_tail\n                | LT switch_factor switch_factor_tail\n                | EQ_EQ switch_factor switch_factor_tail\n                | GT_EQ switch_factor switch_factor_tail\n                | LT_EQ switch_factor switch_factor_tail\n                | NOT_EQ switch_factor switch_factor_tail\n                | AND switch_factor switch_factor_tail\n                | OR switch_factor switch_factor_tail\n                | empty\n    \n    switch_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    switch_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    switchcond_tail : switch_condition  \n                    | empty          \n    \n    loop_statement : for_loop    \n                   | until_loop  \n                   | repeat_until\n    for_loop : FOR LPAREN control_variable SEMICOLON for_expression SEMICOLON update RPAREN LBRACE statements RBRACE\n    for_expression : for_factor for_factor_tail\n    \n    for_factor : for_var_call for_postfix           \n           | for_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN for_factor RPAREN    \n    \n    for_var_call : IDENT for_list_index  \n    \n    for_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    for_postfix : empty        \n            | for_postfix_op  \n    \n    for_list_index : LBRACKET for_index RBRACKET for_list_index2  \n               | empty                                \n    \n    for_list_index2 : LBRACKET for_index RBRACKET \n                | empty                   \n    for_index : INT_LITfor_index : IDENT\n    for_factor_tail : PLUS for_factor for_factor_tail\n                | MINUS for_factor for_factor_tail\n                | MULTIPLY for_factor for_factor_tail\n                | DIVISION for_factor for_factor_tail\n                | MODULO for_factor for_factor_tail\n                | EXPONENT for_factor for_factor_tail\n                | GT for_factor for_factor_tail\n                | LT for_factor for_factor_tail\n                | EQ_EQ for_factor for_factor_tail\n                | GT_EQ for_factor for_factor_tail\n                | LT_EQ for_factor for_factor_tail\n                | NOT_EQ for_factor for_factor_tail\n                | AND for_factor for_factor_tail\n                | OR for_factor for_factor_tail\n                | empty\n    \n    for_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    until_loop : UNTIL LPAREN until_expression RPAREN LBRACE statements RBRACE  \n    \n    until_expression : until_factor until_factor_tail\n    \n    until_factor : until_var_call until_postfix           \n           | until_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN until_factor RPAREN    \n    \n    until_var_call : IDENT until_list_index  \n    \n    until_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    until_postfix : empty        \n            | until_postfix_op  \n    \n    until_list_index : LBRACKET until_index RBRACKET until_list_index2  \n               | empty                                \n    \n    until_list_index2 : LBRACKET until_index RBRACKET \n                | empty                   \n    until_index : INT_LITuntil_index : IDENT\n    until_factor_tail : PLUS until_factor until_factor_tail\n                | MINUS until_factor until_factor_tail\n                | MULTIPLY until_factor until_factor_tail\n                | DIVISION until_factor until_factor_tail\n                | MODULO until_factor until_factor_tail\n                | EXPONENT until_factor until_factor_tail\n                | GT until_factor until_factor_tail\n                | LT until_factor until_factor_tail\n                | EQ_EQ until_factor until_factor_tail\n                | GT_EQ until_factor until_factor_tail\n                | LT_EQ until_factor until_factor_tail\n                | NOT_EQ until_factor until_factor_tail\n                | AND until_factor until_factor_tail\n                | OR until_factor until_factor_tail\n                | empty\n    \n    until_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    repeat_until : REPEAT LBRACE statements RBRACE UNTIL LPAREN until_expression RPAREN SEMICOLON\n    control_variable : INT IDENT EQ control_var_tailcontrol_var_tail : INT_LIT \n                        | var_call\n    \n    update : var_call update_tail  \n    \n    update_tail : postfix_op         \n                | compound_op value   \n    \n    postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    function_call : FUNCTION_NAME LPAREN arguments RPAREN \n                  | input_statement                   \n    \n    arguments : empty                  \n              | arg_value arg_tail    \n    \n    arg_tail : COMMA arg_value arg_tail   \n             | empty                     \n    \n    arg_value : literal   \n              | var_call \n    \n    output_statement : DISPLAY output_value next_val SEMICOLON   \n    output_value : output_type_cast\n             | output_expression\n             | function_call\n    output_expression : output_factor output_factor_tail\n    \n    output_factor : output_var_call output_postfix           \n           | output_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN output_factor RPAREN    \n    \n    output_var_call : IDENT output_list_index  \n    \n    output_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    output_postfix : empty        \n            | output_postfix_op  \n    \n    output_list_index : LBRACKET output_index RBRACKET output_list_index2  \n               | empty                                \n    \n    output_list_index2 : LBRACKET output_index RBRACKET \n                | empty                   \n    output_index : INT_LIToutput_index : IDENT\n    output_factor_tail : PLUS output_factor output_factor_tail\n                | MINUS output_factor output_factor_tail\n                | MULTIPLY output_factor output_factor_tail\n                | DIVISION output_factor output_factor_tail\n                | MODULO output_factor output_factor_tail\n                | EXPONENT output_factor output_factor_tail\n                | GT output_factor output_factor_tail\n                | LT output_factor output_factor_tail\n                | EQ_EQ output_factor output_factor_tail\n                | GT_EQ output_factor output_factor_tail\n                | LT_EQ output_factor output_factor_tail\n                | NOT_EQ output_factor output_factor_tail\n                | AND output_factor output_factor_tail\n                | OR output_factor output_factor_tail\n                | empty\n    \n    output_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    output_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    next_val : COMMA value next_val  \n             | empty                \n    \n    assignment_statement : var_call EQ value SEMICOLON\n    \n    assignment_statement : IDENT assign_tail SEMICOLON\n    \n    assign_tail : DOT SPLICE LPAREN start COMMA deleteCount COMMA splice_items RPAREN  \n                | DOT PUSH LPAREN list_element RPAREN                                  \n                | assign_op assign_value                                                     \n    assign_value : assign_type_cast\n             | assign_expression\n             | function_call\n    assign_expression : assign_factor assign_factor_tail\n    \n    assign_factor : assign_var_call assign_postfix           \n           | assign_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN assign_factor RPAREN  \n    \n    assign_var_call : IDENT assign_list_index  \n    \n    assign_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    assign_postfix : empty        \n            | assign_postfix_op  \n    \n    assign_list_index : LBRACKET assign_index RBRACKET assign_list_index2  \n               | empty                                \n    \n    assign_list_index2 : LBRACKET assign_index RBRACKET \n                | empty                   \n    assign_index : INT_LITassign_index : IDENT\n    assign_factor_tail : PLUS assign_factor assign_factor_tail\n                | MINUS assign_factor assign_factor_tail\n                | MULTIPLY assign_factor assign_factor_tail\n                | DIVISION assign_factor assign_factor_tail\n                | MODULO assign_factor assign_factor_tail\n                | EXPONENT assign_factor assign_factor_tail\n                | GT assign_factor assign_factor_tail\n                | LT assign_factor assign_factor_tail\n                | EQ_EQ assign_factor assign_factor_tail\n                | GT_EQ assign_factor assign_factor_tail\n                | LT_EQ assign_factor assign_factor_tail\n                | NOT_EQ assign_factor assign_factor_tail\n                | AND assign_factor assign_factor_tail\n                | OR assign_factor assign_factor_tail\n                | empty\n    \n    assign_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    assign_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    assign_op : compound_op  \n              | EQ           \n    \n    compound_op : PLUS_EQ \n                | MINUS_EQ  \n                | MUL_EQ   \n                | DIV_EQ    \n                | MOD_EQ   \n    \n    start : INT_LIT \n    \n    deleteCount : empty     \n                | INT_LIT  \n    \n    splice_items : empty          \n                 | list_element  \n    \n    var_call : IDENT list_index  \n    \n    list_index : LBRACKET index RBRACKET list_index2  \n               | empty                                \n    \n    list_index2 : LBRACKET index RBRACKET \n                | empty                   \n    index : INT_LITindex : IDENT\n    postfix : empty        \n            | postfix_op  \n    \n    value : type_cast     \n          | value_expression   \n          | function_call \n    \n    value_expression : value_factor value_factor_tail\n    \n    value_factor : value_var_call value_postfix           \n           | value_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN value_factor RPAREN    \n    \n    value_var_call : IDENT value_list_index  \n    \n    value_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    value_postfix : empty        \n            | value_postfix_op  \n    \n    value_list_index : LBRACKET value_index RBRACKET value_list_index2  \n               | empty                                \n    \n    value_list_index2 : LBRACKET value_index RBRACKET \n                | empty                   \n    value_index : INT_LITvalue_index : IDENT\n    value_factor_tail : PLUS value_factor value_factor_tail\n                | MINUS value_factor value_factor_tail\n                | MULTIPLY value_factor value_factor_tail\n                | DIVISION value_factor value_factor_tail\n                | MODULO value_factor value_factor_tail\n                | EXPONENT value_factor value_factor_tail\n                | GT value_factor value_factor_tail\n                | LT value_factor value_factor_tail\n                | EQ_EQ value_factor value_factor_tail\n                | GT_EQ value_factor value_factor_tail\n                | LT_EQ value_factor value_factor_tail\n                | NOT_EQ value_factor value_factor_tail\n                | AND value_factor value_factor_tail\n                | OR value_factor value_factor_tail\n                | empty\n    \n    value_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN \n              | CONVERT_TO_FLT LPAREN typecast_value RPAREN  \n              | CONVERT_TO_BLN LPAREN typecast_value RPAREN  \n              | CONVERT_TO_STR LPAREN typecast_value RPAREN \n    \n    typecast_value : typecast_expression                           \n                   | FUNCTION_NAME LPAREN RPAREN          \n                   | input_statement                     \n    \n    typecast_expression : typecast_factor typecast_factor_tail\n    \n    typecast_factor : var_call postfix           \n           | typecast_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN typecast_factor RPAREN    \n    \n    typecast_factor_tail : PLUS typecast_factor typecast_factor_tail\n                | MINUS typecast_factor typecast_factor_tail\n                | MULTIPLY typecast_factor typecast_factor_tail\n                | DIVISION typecast_factor typecast_factor_tail\n                | MODULO typecast_factor typecast_factor_tail\n                | EXPONENT typecast_factor typecast_factor_tail\n                | GT typecast_factor typecast_factor_tail\n                | LT typecast_factor typecast_factor_tail\n                | EQ_EQ typecast_factor typecast_factor_tail\n                | GT_EQ typecast_factor typecast_factor_tail\n                | LT_EQ typecast_factor typecast_factor_tail\n                | NOT_EQ typecast_factor typecast_factor_tail\n                | AND typecast_factor typecast_factor_tail\n                | OR typecast_factor typecast_factor_tail\n                | empty\n    \n    typecast_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    input_statement : INPUT LPAREN RPAREN  \n    empty :'
    
_lr_action_items = {'BIRTH':([0,],[2,]),'$end':([1,111,],[0,-1,]),'LBRACE':([2,112,171,262,517,625,655,1077,1195,1247,1291,],[3,170,219,316,744,835,867,1154,1250,1282,1296,]),'FUNCTION':([3,4,6,29,38,39,495,],[-608,17,-4,-608,-3,-5,17,]),'FUNCTION_INT':([3,4,6,29,38,39,495,],[-608,19,-4,-608,-3,-5,19,]),'FUNCTION_FLT':([3,4,6,29,38,39,495,],[-608,20,-4,-608,-3,-5,20,]),'FUNCTION_CHR':([3,4,6,29,38,39,495,],[-608,21,-4,-608,-3,-5,21,]),'FUNCTION_BLN':([3,4,6,29,38,39,495,],[-608,22,-4,-608,-3,-5,22,]),'FUNCTION_STR':([3,4,6,29,38,39,495,],[-608,23,-4,-608,-3,-5,23,]),'FUNCTION_LIST_INT':([3,4,6,29,38,39,495,],[-608,24,-4,-608,-3,-5,24,]),'FUNCTION_LIST_FLT':([3,4,6,29,38,39,495,],[-608,25,-4,-608,-3,-5,25,]),'FUNCTION_LIST_CHR':([3,4,6,29,38,39,495,],[-608,26,-4,-608,-3,-5,26,]),'FUNCTION_LIST_STR':([3,4,6,29,38,39,495,],[-608,27,-4,-608,-3,-5,27,]),'FUNCTION_LIST_BLN':([3,4,6,29,38,39,495,],[-608,28,-4,-608,-3,-5,28,]),'MAIN_CASPER':([3,4,6,14,16,29,38,39,495,709,710,711,],[-608,-608,-4,36,-96,-608,-3,-5,-608,-95,-97,-96,]),'INT':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,256,314,316,318,351,458,551,555,587,835,867,1145,1154,1155,1250,1256,1282,1286,1292,1295,1296,],[9,9,9,214,-171,214,214,9,214,214,214,214,214,214,-321,-322,-323,-410,444,214,-170,-465,-607,-409,-464,-417,214,214,-362,214,214,214,-400,214,-273,-324,-233,214,]),'FLT':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,256,316,318,351,458,551,555,587,835,867,1145,1154,1155,1250,1256,1282,1286,1292,1295,1296,],[10,10,10,215,-171,215,215,10,215,215,215,215,215,215,-321,-322,-323,-410,215,-170,-465,-607,-409,-464,-417,215,215,-362,215,215,215,-400,215,-273,-324,-233,215,]),'BLN':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,256,316,318,351,458,551,555,587,835,867,1145,1154,1155,1250,1256,1282,1286,1292,1295,1296,],[11,11,11,216,-171,216,216,11,216,216,216,216,216,216,-321,-322,-323,-410,216,-170,-465,-607,-409,-464,-417,216,216,-362,216,216,216,-400,216,-273,-324,-233,216,]),'CHR':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,256,316,318,351,458,551,555,587,835,867,1145,1154,1155,1250,1256,1282,1286,1292,1295,1296,],[12,12,12,217,-171,217,217,12,217,217,217,217,217,217,-321,-322,-323,-410,217,-170,-465,-607,-409,-464,-417,217,217,-362,217,217,217,-400,217,-273,-324,-233,217,]),'STR':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,256,316,318,351,458,551,555,587,835,867,1145,1154,1155,1250,1256,1282,1286,1292,1295,1296,],[13,13,13,218,-171,218,218,13,218,218,218,218,218,218,-321,-322,-323,-410,218,-170,-465,-607,-409,-464,-417,218,218,-362,218,218,218,-400,218,-273,-324,-233,218,]),'SEMICOLON':([5,7,30,31,34,40,41,42,43,44,46,47,49,50,52,53,54,55,56,57,62,63,65,66,81,88,89,90,91,92,93,94,107,109,110,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,137,168,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,207,208,212,239,240,256,264,265,268,282,294,295,296,297,303,304,305,307,308,309,310,311,312,319,320,321,322,323,324,325,331,332,333,335,336,337,338,339,340,341,342,349,354,355,356,357,363,364,365,367,368,369,370,371,372,378,379,380,381,387,388,389,391,392,393,394,395,396,397,399,405,420,421,422,423,424,425,426,427,428,430,443,458,459,460,462,468,483,484,485,486,487,488,489,490,491,493,494,496,497,498,499,505,506,507,509,510,511,512,513,514,525,540,541,542,543,544,545,546,547,548,550,551,561,576,577,578,579,580,581,582,583,584,586,588,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,683,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,707,708,718,733,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,793,795,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,854,855,856,857,859,860,861,862,863,864,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,989,990,1009,1024,1025,1026,1027,1028,1029,1030,1031,1032,1034,1035,1036,1037,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1101,1102,1104,1105,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1152,1153,1190,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1245,1246,1253,1254,1257,1281,1293,],[29,-608,-6,-12,-608,-608,-608,-17,-18,-608,-608,-31,-89,-90,-608,-91,-92,-93,-7,-8,-13,-14,-16,-29,-86,-30,-532,-533,-407,-408,-32,-33,-525,-527,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-19,-34,-9,-10,-15,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-608,-11,-608,-526,-529,-410,318,-182,-608,351,-608,-418,-419,-420,-608,-608,-423,-453,-454,-608,-455,-456,-457,-608,-608,-187,-188,-189,-190,-191,-608,-608,-194,-224,-225,-608,-226,-227,-228,-172,-178,-528,-468,-469,-470,-471,-608,-608,-474,-504,-505,-608,-506,-507,-508,555,-534,-535,-536,-608,-608,-539,-569,-570,-608,-571,-572,-573,587,-463,-421,-452,-422,-430,-431,-428,-429,-424,-425,-427,-433,652,-607,-183,-184,-186,-192,-223,-193,-201,-202,-199,-200,-195,-196,-198,-204,-608,712,-117,-118,-119,-608,-608,-122,-152,-153,-608,-154,-155,-156,-472,-503,-473,-481,-482,-479,-480,-475,-476,-478,-484,-409,-537,-568,-538,-546,-547,-544,-545,-540,-541,-543,-549,-608,-426,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-197,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-179,-180,-120,-151,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-542,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-462,-458,-459,-460,-461,-438,-439,-440,-441,-442,-443,-444,-445,-446,-447,-448,-449,-450,-451,-608,1008,-608,-608,-327,-357,-358,-608,-359,-360,-361,-185,-229,-230,-231,-232,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,-221,-222,-608,-181,-125,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-467,-509,-510,-511,-512,-489,-490,-491,-492,-493,-494,-495,-496,-497,-498,-499,-500,-501,-502,-608,-574,-575,-576,-577,-554,-555,-556,-557,-558,-559,-560,-561,-562,-563,-564,-565,-566,-567,-608,-432,-435,-325,-356,-326,-334,-335,-332,-333,-328,-329,-331,-337,-401,-402,-403,-203,-206,-157,-158,-159,-160,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-608,-483,-486,-548,-551,-330,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-131,-134,-434,-342,-343,-344,-345,-346,-347,-348,-349,-350,-351,-352,-353,-354,-355,-608,1256,-205,-485,-550,-336,-339,-133,-466,-338,]),'COMMA':([7,34,40,41,42,43,44,46,47,49,50,52,53,54,55,56,57,66,81,83,84,85,86,87,88,89,90,91,92,93,94,107,109,110,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,137,168,169,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,207,208,212,239,240,256,268,294,295,296,297,303,304,305,307,308,309,310,311,312,319,320,321,322,323,324,325,331,332,333,335,336,337,338,339,340,341,342,347,349,375,376,377,379,380,381,387,388,389,391,392,393,394,395,396,405,420,421,422,423,424,425,426,427,428,430,458,468,483,484,485,486,487,488,489,490,491,493,494,551,561,576,577,578,579,580,581,582,583,584,586,588,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,683,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,707,708,745,746,770,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,795,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,931,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,989,990,1056,1057,1097,1098,1099,1104,1105,1190,1216,1246,],[32,-608,32,64,-17,-18,-608,-608,-31,-89,-90,-608,-91,-92,-93,-7,-8,-29,-86,133,133,-87,-88,-94,-30,-532,-533,-407,-408,-32,-33,-525,-527,-608,32,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-19,-34,-9,-10,221,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-608,-11,266,-526,-529,-410,-608,398,-418,-419,-420,-608,-608,-423,-453,-454,-608,-455,-456,-457,266,461,-187,-188,-189,-190,-191,-608,-608,-194,-224,-225,-608,-226,-227,-228,-172,-178,221,-528,553,-415,-416,-534,-535,-536,-608,-608,-539,-569,-570,-608,-571,-572,-573,-421,-452,-422,-430,-431,-428,-429,-424,-425,-427,-433,-607,-192,-223,-193,-201,-202,-199,-200,-195,-196,-198,-204,-608,-409,-537,-568,-538,-546,-547,-544,-545,-540,-541,-543,-549,398,-426,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,266,-197,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-179,-180,931,-520,553,-542,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-458,-459,-460,-461,-438,-439,-440,-441,-442,-443,-444,-445,-446,-447,-448,-449,-450,-451,-608,-229,-230,-231,-232,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,-221,-222,-608,-181,-608,-574,-575,-576,-577,-554,-555,-556,-557,-558,-559,-560,-561,-562,-563,-564,-565,-566,-567,-608,-432,-435,-203,-206,1187,-521,-522,-548,-551,-434,-205,-550,]),'EQ':([7,34,40,56,57,107,109,110,116,168,169,207,208,212,239,240,251,257,268,319,341,342,349,494,653,683,707,708,906,],[33,-608,33,-7,-8,-525,-527,-608,33,-9,-10,-608,-11,267,-526,-529,286,293,-608,267,-172,-178,-528,-608,865,267,-179,-180,-181,]),'IDENT':([8,9,10,11,12,13,32,33,51,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,108,114,139,140,141,142,143,144,145,146,147,148,149,150,151,152,162,170,210,211,213,214,215,216,217,218,219,238,243,245,246,247,248,249,252,253,254,256,258,266,267,270,271,281,284,285,286,287,288,289,290,291,292,293,299,313,315,316,318,327,345,351,359,383,398,400,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,429,431,444,445,458,461,463,465,466,467,469,470,471,472,473,474,475,476,477,478,479,480,481,482,492,501,520,522,523,524,526,527,528,529,530,531,532,533,534,535,536,537,538,539,549,551,553,555,556,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,585,587,589,627,628,629,630,631,632,633,634,635,636,637,638,639,640,650,652,657,658,659,660,661,662,663,664,665,666,667,668,669,670,680,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,742,798,799,800,801,802,803,804,805,806,807,808,809,810,811,835,853,865,867,930,988,1008,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1033,1054,1055,1083,1100,1103,1122,1145,1146,1151,1154,1155,1156,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1185,1198,1248,1250,1252,1256,1282,1286,1287,1292,1295,1296,],[34,-24,-25,-26,-27,-28,40,52,103,116,52,52,52,52,52,52,52,52,52,52,52,52,52,52,103,166,172,103,103,103,103,103,103,103,103,103,103,103,103,103,103,206,-608,-171,251,268,-173,-174,-175,-176,-177,-608,166,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,309,319,337,347,206,350,369,-513,-514,-515,-516,-517,-518,-519,52,393,309,439,453,-608,-170,337,511,-465,369,393,393,52,52,52,52,309,309,309,309,309,309,309,309,309,309,309,309,309,309,623,439,653,453,-607,683,52,52,52,52,337,337,337,337,337,337,337,337,337,337,337,337,337,337,705,511,52,52,52,52,369,369,369,369,369,369,369,369,369,369,369,369,369,369,769,-409,52,-464,52,52,52,52,393,393,393,393,393,393,393,393,393,393,393,393,393,393,792,-417,52,439,439,439,439,439,439,439,439,439,439,439,439,439,439,852,861,453,453,453,453,453,453,453,453,453,453,453,453,453,453,884,52,52,52,52,511,511,511,511,511,511,511,511,511,511,511,511,511,511,928,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-608,861,52,-608,1093,623,52,861,861,861,861,861,861,861,861,861,861,861,861,861,861,1144,453,705,1093,769,792,852,-362,884,928,-608,-608,52,52,52,52,1093,1093,1093,1093,1093,1093,1093,1093,1093,1093,1093,1093,1093,1093,1241,393,439,-608,1144,-400,-608,-273,1241,-324,-233,-608,]),'FUNCTION_NAME':([15,17,18,19,20,21,22,23,24,25,26,27,28,170,210,211,219,243,245,246,247,248,249,252,253,254,256,258,267,284,285,286,287,288,289,290,291,293,316,318,345,351,398,400,402,403,404,458,463,465,466,467,520,522,523,524,551,555,556,558,559,560,587,713,715,716,717,835,867,930,1145,1154,1155,1156,1158,1159,1160,1198,1250,1256,1282,1286,1292,1295,1296,],[37,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-608,-171,255,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,255,255,255,-513,-514,-515,-516,-517,-518,-519,255,-608,-170,255,-465,255,592,592,592,592,-607,592,592,592,592,592,592,592,592,-409,-464,592,592,592,592,-417,592,592,592,592,-608,-608,255,-362,-608,-608,592,592,592,592,255,-608,-400,-608,-273,-324,-233,-608,]),'LBRACKET':([33,34,45,52,103,110,133,207,237,251,267,268,309,337,369,393,439,453,494,511,519,833,861,905,951,971,1006,1053,1076,1093,1187,1213,1280,],[45,58,45,108,162,167,45,238,271,108,45,343,429,492,549,585,650,680,706,742,45,988,1033,1055,1100,1103,1122,1146,1151,1185,45,1252,1287,]),'TILDE':([33,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,293,299,313,315,327,345,359,383,398,400,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,431,445,463,465,466,467,469,470,471,472,473,474,475,476,477,478,479,480,481,482,501,520,522,523,524,526,527,528,529,530,531,532,533,534,535,536,537,538,539,556,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,589,627,628,629,630,631,632,633,634,635,636,637,638,639,640,652,657,658,659,660,661,662,663,664,665,666,667,668,669,670,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,798,799,800,801,802,803,804,805,806,807,808,809,810,811,853,930,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1054,1083,1156,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1198,1248,],[48,100,48,48,48,48,48,48,48,48,48,48,48,48,48,48,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,306,334,366,-513,-514,-515,-516,-517,-518,-519,390,306,436,450,334,508,366,390,390,597,597,597,597,306,306,306,306,306,306,306,306,306,306,306,306,306,306,436,450,597,597,597,597,334,334,334,334,334,334,334,334,334,334,334,334,334,334,508,597,597,597,597,366,366,366,366,366,366,366,366,366,366,366,366,366,366,597,597,597,597,390,390,390,390,390,390,390,390,390,390,390,390,390,390,597,436,436,436,436,436,436,436,436,436,436,436,436,436,436,858,450,450,450,450,450,450,450,450,450,450,450,450,450,450,597,597,597,597,508,508,508,508,508,508,508,508,508,508,508,508,508,508,597,597,597,597,597,597,597,597,597,597,597,597,597,597,858,1090,858,858,858,858,858,858,858,858,858,858,858,858,858,858,450,1090,597,597,597,597,1090,1090,1090,1090,1090,1090,1090,1090,1090,1090,1090,1090,1090,1090,390,436,]),'LPAREN':([33,36,37,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,250,255,258,259,260,261,263,267,284,285,286,287,288,289,290,291,293,298,299,300,301,302,313,315,326,327,328,329,330,345,352,353,358,359,360,361,362,382,383,384,385,386,398,400,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,431,445,463,465,466,467,469,470,471,472,473,474,475,476,477,478,479,480,481,482,500,501,502,503,504,520,522,523,524,526,527,528,529,530,531,532,533,534,535,536,537,538,539,556,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,589,592,627,628,629,630,631,632,633,634,635,636,637,638,639,640,652,657,658,659,660,661,662,663,664,665,666,667,668,669,670,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,798,799,800,801,802,803,804,805,806,807,808,809,810,811,853,885,930,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1054,1082,1083,1084,1085,1086,1156,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1192,1198,1248,],[51,60,61,95,51,51,51,51,51,51,51,51,51,51,51,51,51,51,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,281,292,299,313,314,315,317,327,359,-513,-514,-515,-516,-517,-518,-519,383,400,299,402,403,404,431,445,463,327,465,466,467,501,518,519,520,359,522,523,524,556,383,558,559,560,383,589,589,589,589,299,299,299,299,299,299,299,299,299,299,299,299,299,299,431,445,589,589,589,589,327,327,327,327,327,327,327,327,327,327,327,327,327,327,713,501,715,716,717,589,589,589,589,359,359,359,359,359,359,359,359,359,359,359,359,359,359,589,589,589,589,383,383,383,383,383,383,383,383,383,383,383,383,383,383,589,796,431,431,431,431,431,431,431,431,431,431,431,431,431,431,853,445,445,445,445,445,445,445,445,445,445,445,445,445,445,589,589,589,589,501,501,501,501,501,501,501,501,501,501,501,501,501,501,589,589,589,589,589,589,589,589,589,589,589,589,589,589,853,1054,1083,853,853,853,853,853,853,853,853,853,853,853,853,853,853,445,1156,1083,1158,1159,1160,589,589,589,589,1083,1083,1083,1083,1083,1083,1083,1083,1083,1083,1083,1083,1083,1083,1248,383,431,]),'INT_LIT':([33,45,48,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,100,108,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,162,238,258,267,271,284,285,286,287,288,289,290,291,292,293,299,306,313,315,327,334,345,359,366,383,390,398,400,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,429,431,436,445,450,463,465,466,467,469,470,471,472,473,474,475,476,477,478,479,480,481,482,492,501,508,518,519,520,522,523,524,526,527,528,529,530,531,532,533,534,535,536,537,538,539,549,553,556,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,585,589,597,627,628,629,630,631,632,633,634,635,636,637,638,639,640,650,652,657,658,659,660,661,662,663,664,665,666,667,668,669,670,680,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,742,798,799,800,801,802,803,804,805,806,807,808,809,810,811,853,858,865,930,931,988,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1033,1054,1055,1083,1090,1100,1103,1122,1146,1151,1156,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1185,1187,1198,1248,1252,1287,],[49,49,93,101,49,49,49,49,49,49,49,49,49,49,49,49,49,49,101,159,165,49,101,101,101,101,101,101,101,101,101,101,101,101,101,101,205,165,307,335,205,367,-513,-514,-515,-516,-517,-518,-519,49,391,307,426,437,451,335,489,509,367,546,391,582,391,598,598,598,598,307,307,307,307,307,307,307,307,307,307,307,307,307,307,622,437,647,451,677,598,598,598,598,335,335,335,335,335,335,335,335,335,335,335,335,335,335,704,509,739,746,49,598,598,598,598,367,367,367,367,367,367,367,367,367,367,367,367,367,367,768,49,598,598,598,598,391,391,391,391,391,391,391,391,391,391,391,391,391,391,791,598,814,437,437,437,437,437,437,437,437,437,437,437,437,437,437,851,859,451,451,451,451,451,451,451,451,451,451,451,451,451,451,883,598,598,598,598,509,509,509,509,509,509,509,509,509,509,509,509,509,509,927,598,598,598,598,598,598,598,598,598,598,598,598,598,598,859,1030,1036,1091,1099,622,859,859,859,859,859,859,859,859,859,859,859,859,859,859,1143,451,704,1091,1182,768,791,851,883,927,598,598,598,598,1091,1091,1091,1091,1091,1091,1091,1091,1091,1091,1091,1091,1091,1091,1240,49,391,437,1143,1240,]),'FLT_LIT':([33,45,48,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,100,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,292,293,299,306,313,315,327,334,345,359,366,383,390,398,400,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,431,436,445,450,463,465,466,467,469,470,471,472,473,474,475,476,477,478,479,480,481,482,501,508,519,520,522,523,524,526,527,528,529,530,531,532,533,534,535,536,537,538,539,553,556,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,589,597,627,628,629,630,631,632,633,634,635,636,637,638,639,640,652,657,658,659,660,661,662,663,664,665,666,667,668,669,670,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,798,799,800,801,802,803,804,805,806,807,808,809,810,811,853,858,930,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1054,1083,1090,1156,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1187,1198,1248,],[50,50,94,102,50,50,50,50,50,50,50,50,50,50,50,50,50,50,102,160,50,102,102,102,102,102,102,102,102,102,102,102,102,102,102,308,336,368,-513,-514,-515,-516,-517,-518,-519,50,392,308,427,438,452,336,490,510,368,547,392,583,392,599,599,599,599,308,308,308,308,308,308,308,308,308,308,308,308,308,308,438,648,452,678,599,599,599,599,336,336,336,336,336,336,336,336,336,336,336,336,336,336,510,740,50,599,599,599,599,368,368,368,368,368,368,368,368,368,368,368,368,368,368,50,599,599,599,599,392,392,392,392,392,392,392,392,392,392,392,392,392,392,599,815,438,438,438,438,438,438,438,438,438,438,438,438,438,438,860,452,452,452,452,452,452,452,452,452,452,452,452,452,452,599,599,599,599,510,510,510,510,510,510,510,510,510,510,510,510,510,510,599,599,599,599,599,599,599,599,599,599,599,599,599,599,860,1031,1092,860,860,860,860,860,860,860,860,860,860,860,860,860,860,452,1092,1183,599,599,599,599,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,50,392,438,]),'DAY':([33,45,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,292,293,299,313,315,327,345,359,383,398,400,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,431,445,463,465,466,467,469,470,471,472,473,474,475,476,477,478,479,480,481,482,501,519,520,522,523,524,526,527,528,529,530,531,532,533,534,535,536,537,538,539,553,556,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,589,627,628,629,630,631,632,633,634,635,636,637,638,639,640,652,657,658,659,660,661,662,663,664,665,666,667,668,669,670,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,798,799,800,801,802,803,804,805,806,807,808,809,810,811,853,930,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1054,1083,1156,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1187,1198,1248,],[53,53,104,53,53,53,53,53,53,53,53,53,53,53,53,53,53,104,53,104,104,104,104,104,104,104,104,104,104,104,104,104,104,310,338,370,-513,-514,-515,-516,-517,-518,-519,53,394,310,440,454,338,512,370,394,394,600,600,600,600,310,310,310,310,310,310,310,310,310,310,310,310,310,310,440,454,600,600,600,600,338,338,338,338,338,338,338,338,338,338,338,338,338,338,512,53,600,600,600,600,370,370,370,370,370,370,370,370,370,370,370,370,370,370,53,600,600,600,600,394,394,394,394,394,394,394,394,394,394,394,394,394,394,600,440,440,440,440,440,440,440,440,440,440,440,440,440,440,862,454,454,454,454,454,454,454,454,454,454,454,454,454,454,600,600,600,600,512,512,512,512,512,512,512,512,512,512,512,512,512,512,600,600,600,600,600,600,600,600,600,600,600,600,600,600,862,1094,862,862,862,862,862,862,862,862,862,862,862,862,862,862,454,1094,600,600,600,600,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,53,394,440,]),'NIGHT':([33,45,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,292,293,299,313,315,327,345,359,383,398,400,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,431,445,463,465,466,467,469,470,471,472,473,474,475,476,477,478,479,480,481,482,501,519,520,522,523,524,526,527,528,529,530,531,532,533,534,535,536,537,538,539,553,556,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,589,627,628,629,630,631,632,633,634,635,636,637,638,639,640,652,657,658,659,660,661,662,663,664,665,666,667,668,669,670,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,798,799,800,801,802,803,804,805,806,807,808,809,810,811,853,930,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1054,1083,1156,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1187,1198,1248,],[54,54,105,54,54,54,54,54,54,54,54,54,54,54,54,54,54,105,54,105,105,105,105,105,105,105,105,105,105,105,105,105,105,311,339,371,-513,-514,-515,-516,-517,-518,-519,54,395,311,441,455,339,513,371,395,395,601,601,601,601,311,311,311,311,311,311,311,311,311,311,311,311,311,311,441,455,601,601,601,601,339,339,339,339,339,339,339,339,339,339,339,339,339,339,513,54,601,601,601,601,371,371,371,371,371,371,371,371,371,371,371,371,371,371,54,601,601,601,601,395,395,395,395,395,395,395,395,395,395,395,395,395,395,601,441,441,441,441,441,441,441,441,441,441,441,441,441,441,863,455,455,455,455,455,455,455,455,455,455,455,455,455,455,601,601,601,601,513,513,513,513,513,513,513,513,513,513,513,513,513,513,601,601,601,601,601,601,601,601,601,601,601,601,601,601,863,1095,863,863,863,863,863,863,863,863,863,863,863,863,863,863,455,1095,601,601,601,601,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,54,395,441,]),'STR_LIT':([33,45,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,292,293,299,313,315,327,345,359,383,398,400,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,431,445,463,465,466,467,469,470,471,472,473,474,475,476,477,478,479,480,481,482,501,519,520,522,523,524,526,527,528,529,530,531,532,533,534,535,536,537,538,539,553,556,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,589,627,628,629,630,631,632,633,634,635,636,637,638,639,640,652,657,658,659,660,661,662,663,664,665,666,667,668,669,670,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,798,799,800,801,802,803,804,805,806,807,808,809,810,811,853,930,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1054,1083,1156,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1187,1198,1248,],[55,55,106,55,55,55,55,55,55,55,55,55,55,55,55,55,55,106,55,106,106,106,106,106,106,106,106,106,106,106,106,106,106,312,340,372,-513,-514,-515,-516,-517,-518,-519,55,396,312,442,456,340,514,372,396,396,602,602,602,602,312,312,312,312,312,312,312,312,312,312,312,312,312,312,442,456,602,602,602,602,340,340,340,340,340,340,340,340,340,340,340,340,340,340,514,55,602,602,602,602,372,372,372,372,372,372,372,372,372,372,372,372,372,372,55,602,602,602,602,396,396,396,396,396,396,396,396,396,396,396,396,396,396,602,442,442,442,442,442,442,442,442,442,442,442,442,442,442,864,456,456,456,456,456,456,456,456,456,456,456,456,456,456,602,602,602,602,514,514,514,514,514,514,514,514,514,514,514,514,514,514,602,602,602,602,602,602,602,602,602,602,602,602,602,602,864,1096,864,864,864,864,864,864,864,864,864,864,864,864,864,864,456,1096,602,602,602,602,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,55,396,442,]),'RBRACE':([35,170,209,210,211,219,241,242,243,244,245,246,247,248,249,252,253,254,256,269,275,276,277,278,279,280,316,318,344,346,351,457,458,551,555,587,712,835,867,991,1038,1145,1154,1218,1250,1256,1258,1282,1284,1286,1290,1292,1295,1296,1298,],[59,-608,241,-161,-608,-608,-2,-162,-608,-169,-608,-608,-608,-608,-608,-321,-322,-323,-410,-608,-163,-164,-165,-166,-167,-168,-608,-170,495,-116,-465,682,-607,-409,-464,-417,-115,-608,-608,1121,1145,-362,-608,1258,-608,-400,1286,-608,1292,-273,1295,-324,-233,-608,1299,]),'PLUS':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[67,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,139,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-608,-608,-526,-529,-46,-49,406,-608,-423,-453,-454,-608,-455,-456,-457,469,-608,-194,-224,-225,-608,-226,-227,-228,-528,526,-608,-474,-504,-505,-608,-506,-507,-508,562,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,627,-608,-238,-268,-269,-608,-270,-271,-272,657,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,719,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,798,-608,-583,-602,-603,-604,-605,-606,-426,406,406,406,406,406,406,406,406,406,406,406,406,406,406,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,469,469,469,469,469,469,469,469,469,469,469,469,469,469,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,526,526,526,526,526,526,526,526,526,526,526,526,526,526,-542,562,562,562,562,562,562,562,562,562,562,562,562,562,562,-582,-584,-585,-608,-241,627,627,627,627,627,627,627,627,627,627,627,627,627,627,1010,-608,-327,-357,-358,-608,-359,-360,-361,-368,657,657,657,657,657,657,657,657,657,657,657,657,657,657,-608,-125,719,719,719,719,719,719,719,719,719,719,719,719,719,719,-608,-608,-586,798,798,798,798,798,798,798,798,798,798,798,798,798,798,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1162,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1010,1010,1010,1010,1010,1010,1010,1010,1010,1010,1010,1010,1010,1010,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1162,1162,1162,1162,1162,1162,1162,1162,1162,1162,1162,1162,1162,1162,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'MINUS':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[68,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,140,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,140,140,140,140,140,140,140,140,140,140,140,140,140,140,-608,-608,-526,-529,-46,-49,407,-608,-423,-453,-454,-608,-455,-456,-457,470,-608,-194,-224,-225,-608,-226,-227,-228,-528,527,-608,-474,-504,-505,-608,-506,-507,-508,563,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,628,-608,-238,-268,-269,-608,-270,-271,-272,658,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,720,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,799,-608,-583,-602,-603,-604,-605,-606,-426,407,407,407,407,407,407,407,407,407,407,407,407,407,407,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,470,470,470,470,470,470,470,470,470,470,470,470,470,470,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,527,527,527,527,527,527,527,527,527,527,527,527,527,527,-542,563,563,563,563,563,563,563,563,563,563,563,563,563,563,-582,-584,-585,-608,-241,628,628,628,628,628,628,628,628,628,628,628,628,628,628,1011,-608,-327,-357,-358,-608,-359,-360,-361,-368,658,658,658,658,658,658,658,658,658,658,658,658,658,658,-608,-125,720,720,720,720,720,720,720,720,720,720,720,720,720,720,-608,-608,-586,799,799,799,799,799,799,799,799,799,799,799,799,799,799,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1163,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1011,1011,1011,1011,1011,1011,1011,1011,1011,1011,1011,1011,1011,1011,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1163,1163,1163,1163,1163,1163,1163,1163,1163,1163,1163,1163,1163,1163,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'MULTIPLY':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[69,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,141,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,141,141,141,141,141,141,141,141,141,141,141,141,141,141,-608,-608,-526,-529,-46,-49,408,-608,-423,-453,-454,-608,-455,-456,-457,471,-608,-194,-224,-225,-608,-226,-227,-228,-528,528,-608,-474,-504,-505,-608,-506,-507,-508,564,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,629,-608,-238,-268,-269,-608,-270,-271,-272,659,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,721,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,800,-608,-583,-602,-603,-604,-605,-606,-426,408,408,408,408,408,408,408,408,408,408,408,408,408,408,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,471,471,471,471,471,471,471,471,471,471,471,471,471,471,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,528,528,528,528,528,528,528,528,528,528,528,528,528,528,-542,564,564,564,564,564,564,564,564,564,564,564,564,564,564,-582,-584,-585,-608,-241,629,629,629,629,629,629,629,629,629,629,629,629,629,629,1012,-608,-327,-357,-358,-608,-359,-360,-361,-368,659,659,659,659,659,659,659,659,659,659,659,659,659,659,-608,-125,721,721,721,721,721,721,721,721,721,721,721,721,721,721,-608,-608,-586,800,800,800,800,800,800,800,800,800,800,800,800,800,800,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1164,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1012,1012,1012,1012,1012,1012,1012,1012,1012,1012,1012,1012,1012,1012,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1164,1164,1164,1164,1164,1164,1164,1164,1164,1164,1164,1164,1164,1164,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'DIVISION':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[70,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,142,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,142,142,142,142,142,142,142,142,142,142,142,142,142,142,-608,-608,-526,-529,-46,-49,409,-608,-423,-453,-454,-608,-455,-456,-457,472,-608,-194,-224,-225,-608,-226,-227,-228,-528,529,-608,-474,-504,-505,-608,-506,-507,-508,565,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,630,-608,-238,-268,-269,-608,-270,-271,-272,660,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,722,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,801,-608,-583,-602,-603,-604,-605,-606,-426,409,409,409,409,409,409,409,409,409,409,409,409,409,409,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,472,472,472,472,472,472,472,472,472,472,472,472,472,472,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,529,529,529,529,529,529,529,529,529,529,529,529,529,529,-542,565,565,565,565,565,565,565,565,565,565,565,565,565,565,-582,-584,-585,-608,-241,630,630,630,630,630,630,630,630,630,630,630,630,630,630,1013,-608,-327,-357,-358,-608,-359,-360,-361,-368,660,660,660,660,660,660,660,660,660,660,660,660,660,660,-608,-125,722,722,722,722,722,722,722,722,722,722,722,722,722,722,-608,-608,-586,801,801,801,801,801,801,801,801,801,801,801,801,801,801,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1165,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1013,1013,1013,1013,1013,1013,1013,1013,1013,1013,1013,1013,1013,1013,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1165,1165,1165,1165,1165,1165,1165,1165,1165,1165,1165,1165,1165,1165,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'MODULO':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[71,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,143,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,143,143,143,143,143,143,143,143,143,143,143,143,143,143,-608,-608,-526,-529,-46,-49,410,-608,-423,-453,-454,-608,-455,-456,-457,473,-608,-194,-224,-225,-608,-226,-227,-228,-528,530,-608,-474,-504,-505,-608,-506,-507,-508,566,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,631,-608,-238,-268,-269,-608,-270,-271,-272,661,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,723,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,802,-608,-583,-602,-603,-604,-605,-606,-426,410,410,410,410,410,410,410,410,410,410,410,410,410,410,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,473,473,473,473,473,473,473,473,473,473,473,473,473,473,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,530,530,530,530,530,530,530,530,530,530,530,530,530,530,-542,566,566,566,566,566,566,566,566,566,566,566,566,566,566,-582,-584,-585,-608,-241,631,631,631,631,631,631,631,631,631,631,631,631,631,631,1014,-608,-327,-357,-358,-608,-359,-360,-361,-368,661,661,661,661,661,661,661,661,661,661,661,661,661,661,-608,-125,723,723,723,723,723,723,723,723,723,723,723,723,723,723,-608,-608,-586,802,802,802,802,802,802,802,802,802,802,802,802,802,802,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1166,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1166,1166,1166,1166,1166,1166,1166,1166,1166,1166,1166,1166,1166,1166,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'EXPONENT':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[72,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,144,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,144,144,144,144,144,144,144,144,144,144,144,144,144,144,-608,-608,-526,-529,-46,-49,411,-608,-423,-453,-454,-608,-455,-456,-457,474,-608,-194,-224,-225,-608,-226,-227,-228,-528,531,-608,-474,-504,-505,-608,-506,-507,-508,567,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,632,-608,-238,-268,-269,-608,-270,-271,-272,662,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,724,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,803,-608,-583,-602,-603,-604,-605,-606,-426,411,411,411,411,411,411,411,411,411,411,411,411,411,411,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,474,474,474,474,474,474,474,474,474,474,474,474,474,474,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,531,531,531,531,531,531,531,531,531,531,531,531,531,531,-542,567,567,567,567,567,567,567,567,567,567,567,567,567,567,-582,-584,-585,-608,-241,632,632,632,632,632,632,632,632,632,632,632,632,632,632,1015,-608,-327,-357,-358,-608,-359,-360,-361,-368,662,662,662,662,662,662,662,662,662,662,662,662,662,662,-608,-125,724,724,724,724,724,724,724,724,724,724,724,724,724,724,-608,-608,-586,803,803,803,803,803,803,803,803,803,803,803,803,803,803,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1167,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1015,1015,1015,1015,1015,1015,1015,1015,1015,1015,1015,1015,1015,1015,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1167,1167,1167,1167,1167,1167,1167,1167,1167,1167,1167,1167,1167,1167,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'GT':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[73,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,145,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,145,145,145,145,145,145,145,145,145,145,145,145,145,145,-608,-608,-526,-529,-46,-49,412,-608,-423,-453,-454,-608,-455,-456,-457,475,-608,-194,-224,-225,-608,-226,-227,-228,-528,532,-608,-474,-504,-505,-608,-506,-507,-508,568,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,633,-608,-238,-268,-269,-608,-270,-271,-272,663,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,725,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,804,-608,-583,-602,-603,-604,-605,-606,-426,412,412,412,412,412,412,412,412,412,412,412,412,412,412,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,475,475,475,475,475,475,475,475,475,475,475,475,475,475,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,532,532,532,532,532,532,532,532,532,532,532,532,532,532,-542,568,568,568,568,568,568,568,568,568,568,568,568,568,568,-582,-584,-585,-608,-241,633,633,633,633,633,633,633,633,633,633,633,633,633,633,1016,-608,-327,-357,-358,-608,-359,-360,-361,-368,663,663,663,663,663,663,663,663,663,663,663,663,663,663,-608,-125,725,725,725,725,725,725,725,725,725,725,725,725,725,725,-608,-608,-586,804,804,804,804,804,804,804,804,804,804,804,804,804,804,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1168,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'LT':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[74,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,146,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,146,146,146,146,146,146,146,146,146,146,146,146,146,146,-608,-608,-526,-529,-46,-49,413,-608,-423,-453,-454,-608,-455,-456,-457,476,-608,-194,-224,-225,-608,-226,-227,-228,-528,533,-608,-474,-504,-505,-608,-506,-507,-508,569,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,634,-608,-238,-268,-269,-608,-270,-271,-272,664,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,726,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,805,-608,-583,-602,-603,-604,-605,-606,-426,413,413,413,413,413,413,413,413,413,413,413,413,413,413,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,476,476,476,476,476,476,476,476,476,476,476,476,476,476,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,533,533,533,533,533,533,533,533,533,533,533,533,533,533,-542,569,569,569,569,569,569,569,569,569,569,569,569,569,569,-582,-584,-585,-608,-241,634,634,634,634,634,634,634,634,634,634,634,634,634,634,1017,-608,-327,-357,-358,-608,-359,-360,-361,-368,664,664,664,664,664,664,664,664,664,664,664,664,664,664,-608,-125,726,726,726,726,726,726,726,726,726,726,726,726,726,726,-608,-608,-586,805,805,805,805,805,805,805,805,805,805,805,805,805,805,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1169,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'EQ_EQ':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[75,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,147,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,147,147,147,147,147,147,147,147,147,147,147,147,147,147,-608,-608,-526,-529,-46,-49,414,-608,-423,-453,-454,-608,-455,-456,-457,477,-608,-194,-224,-225,-608,-226,-227,-228,-528,534,-608,-474,-504,-505,-608,-506,-507,-508,570,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,635,-608,-238,-268,-269,-608,-270,-271,-272,665,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,727,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,806,-608,-583,-602,-603,-604,-605,-606,-426,414,414,414,414,414,414,414,414,414,414,414,414,414,414,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,477,477,477,477,477,477,477,477,477,477,477,477,477,477,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,534,534,534,534,534,534,534,534,534,534,534,534,534,534,-542,570,570,570,570,570,570,570,570,570,570,570,570,570,570,-582,-584,-585,-608,-241,635,635,635,635,635,635,635,635,635,635,635,635,635,635,1018,-608,-327,-357,-358,-608,-359,-360,-361,-368,665,665,665,665,665,665,665,665,665,665,665,665,665,665,-608,-125,727,727,727,727,727,727,727,727,727,727,727,727,727,727,-608,-608,-586,806,806,806,806,806,806,806,806,806,806,806,806,806,806,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1170,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'GT_EQ':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[76,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,148,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,148,148,148,148,148,148,148,148,148,148,148,148,148,148,-608,-608,-526,-529,-46,-49,415,-608,-423,-453,-454,-608,-455,-456,-457,478,-608,-194,-224,-225,-608,-226,-227,-228,-528,535,-608,-474,-504,-505,-608,-506,-507,-508,571,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,636,-608,-238,-268,-269,-608,-270,-271,-272,666,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,728,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,807,-608,-583,-602,-603,-604,-605,-606,-426,415,415,415,415,415,415,415,415,415,415,415,415,415,415,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,478,478,478,478,478,478,478,478,478,478,478,478,478,478,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,535,535,535,535,535,535,535,535,535,535,535,535,535,535,-542,571,571,571,571,571,571,571,571,571,571,571,571,571,571,-582,-584,-585,-608,-241,636,636,636,636,636,636,636,636,636,636,636,636,636,636,1019,-608,-327,-357,-358,-608,-359,-360,-361,-368,666,666,666,666,666,666,666,666,666,666,666,666,666,666,-608,-125,728,728,728,728,728,728,728,728,728,728,728,728,728,728,-608,-608,-586,807,807,807,807,807,807,807,807,807,807,807,807,807,807,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1171,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'LT_EQ':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[77,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,149,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,149,149,149,149,149,149,149,149,149,149,149,149,149,149,-608,-608,-526,-529,-46,-49,416,-608,-423,-453,-454,-608,-455,-456,-457,479,-608,-194,-224,-225,-608,-226,-227,-228,-528,536,-608,-474,-504,-505,-608,-506,-507,-508,572,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,637,-608,-238,-268,-269,-608,-270,-271,-272,667,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,729,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,808,-608,-583,-602,-603,-604,-605,-606,-426,416,416,416,416,416,416,416,416,416,416,416,416,416,416,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,479,479,479,479,479,479,479,479,479,479,479,479,479,479,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,536,536,536,536,536,536,536,536,536,536,536,536,536,536,-542,572,572,572,572,572,572,572,572,572,572,572,572,572,572,-582,-584,-585,-608,-241,637,637,637,637,637,637,637,637,637,637,637,637,637,637,1020,-608,-327,-357,-358,-608,-359,-360,-361,-368,667,667,667,667,667,667,667,667,667,667,667,667,667,667,-608,-125,729,729,729,729,729,729,729,729,729,729,729,729,729,729,-608,-608,-586,808,808,808,808,808,808,808,808,808,808,808,808,808,808,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1172,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'NOT_EQ':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[78,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,150,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,150,150,150,150,150,150,150,150,150,150,150,150,150,150,-608,-608,-526,-529,-46,-49,417,-608,-423,-453,-454,-608,-455,-456,-457,480,-608,-194,-224,-225,-608,-226,-227,-228,-528,537,-608,-474,-504,-505,-608,-506,-507,-508,573,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,638,-608,-238,-268,-269,-608,-270,-271,-272,668,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,730,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,809,-608,-583,-602,-603,-604,-605,-606,-426,417,417,417,417,417,417,417,417,417,417,417,417,417,417,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,480,480,480,480,480,480,480,480,480,480,480,480,480,480,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,537,537,537,537,537,537,537,537,537,537,537,537,537,537,-542,573,573,573,573,573,573,573,573,573,573,573,573,573,573,-582,-584,-585,-608,-241,638,638,638,638,638,638,638,638,638,638,638,638,638,638,1021,-608,-327,-357,-358,-608,-359,-360,-361,-368,668,668,668,668,668,668,668,668,668,668,668,668,668,668,-608,-125,730,730,730,730,730,730,730,730,730,730,730,730,730,730,-608,-608,-586,809,809,809,809,809,809,809,809,809,809,809,809,809,809,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1173,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'AND':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[79,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,151,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,151,151,151,151,151,151,151,151,151,151,151,151,151,151,-608,-608,-526,-529,-46,-49,418,-608,-423,-453,-454,-608,-455,-456,-457,481,-608,-194,-224,-225,-608,-226,-227,-228,-528,538,-608,-474,-504,-505,-608,-506,-507,-508,574,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,639,-608,-238,-268,-269,-608,-270,-271,-272,669,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,731,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,810,-608,-583,-602,-603,-604,-605,-606,-426,418,418,418,418,418,418,418,418,418,418,418,418,418,418,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,481,481,481,481,481,481,481,481,481,481,481,481,481,481,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,538,538,538,538,538,538,538,538,538,538,538,538,538,538,-542,574,574,574,574,574,574,574,574,574,574,574,574,574,574,-582,-584,-585,-608,-241,639,639,639,639,639,639,639,639,639,639,639,639,639,639,1022,-608,-327,-357,-358,-608,-359,-360,-361,-368,669,669,669,669,669,669,669,669,669,669,669,669,669,669,-608,-125,731,731,731,731,731,731,731,731,731,731,731,731,731,731,-608,-608,-586,810,810,810,810,810,810,810,810,810,810,810,810,810,810,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1174,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'OR':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,303,304,305,307,308,309,310,311,312,331,332,333,335,336,337,338,339,340,349,363,364,365,367,368,369,370,371,372,387,388,389,391,392,393,394,395,396,421,422,423,424,425,426,427,428,430,433,434,435,437,438,439,440,441,442,447,448,449,451,452,453,454,455,456,484,485,486,487,488,489,490,491,493,505,506,507,509,510,511,512,513,514,516,541,542,543,544,545,546,547,548,550,577,578,579,580,581,582,583,584,586,594,595,596,598,599,600,601,602,603,607,608,609,610,611,612,613,614,615,616,617,618,619,620,642,643,644,645,646,647,648,649,651,672,673,674,675,676,677,678,679,681,685,689,690,691,692,693,694,695,696,697,698,699,700,701,702,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,772,776,777,778,779,780,781,782,783,784,785,786,787,788,789,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,908,912,913,914,915,916,917,918,919,920,921,922,923,924,925,951,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,1006,1025,1026,1027,1028,1029,1030,1031,1032,1034,1053,1056,1057,1076,1087,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147,1148,1152,1153,1177,1178,1179,1180,1181,1182,1183,1184,1186,1190,1213,1216,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[80,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,152,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-608,-608,-526,-529,-46,-49,419,-608,-423,-453,-454,-608,-455,-456,-457,482,-608,-194,-224,-225,-608,-226,-227,-228,-528,539,-608,-474,-504,-505,-608,-506,-507,-508,575,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,640,-608,-238,-268,-269,-608,-270,-271,-272,670,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,732,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,811,-608,-583,-602,-603,-604,-605,-606,-426,419,419,419,419,419,419,419,419,419,419,419,419,419,419,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,482,482,482,482,482,482,482,482,482,482,482,482,482,482,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,539,539,539,539,539,539,539,539,539,539,539,539,539,539,-542,575,575,575,575,575,575,575,575,575,575,575,575,575,575,-582,-584,-585,-608,-241,640,640,640,640,640,640,640,640,640,640,640,640,640,640,1023,-608,-327,-357,-358,-608,-359,-360,-361,-368,670,670,670,670,670,670,670,670,670,670,670,670,670,670,-608,-125,732,732,732,732,732,732,732,732,732,732,732,732,732,732,-608,-608,-586,811,811,811,811,811,811,811,811,811,811,811,811,811,811,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1175,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'CHR_LIT':([45,133,292,519,553,1187,],[87,87,87,87,87,87,]),'PLUS_PLUS':([46,52,98,103,107,109,161,163,207,237,239,240,272,273,304,309,332,337,349,364,369,388,393,428,430,434,439,448,453,491,493,506,511,516,548,550,584,586,595,649,651,679,681,741,743,833,856,861,905,951,971,989,990,1006,1032,1034,1053,1056,1057,1076,1088,1093,1101,1102,1104,1105,1123,1124,1127,1147,1148,1152,1153,1184,1186,1190,1213,1216,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[91,-608,157,-608,-525,-527,-41,-47,-608,-608,-526,-529,-46,-49,424,-608,487,-608,-528,544,-608,580,-608,-427,-433,645,-608,675,-608,-198,-204,737,-608,-48,-478,-484,-543,-549,91,-242,-248,-369,-375,-126,-132,-608,1028,-608,-608,-608,-608,-432,-435,-608,-331,-337,-608,-203,-206,-608,1180,-608,-483,-486,-548,-551,-247,-250,91,-374,-377,-131,-134,-284,-290,-434,-608,-205,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'MINUS_MINUS':([46,52,98,103,107,109,161,163,207,237,239,240,272,273,304,309,332,337,349,364,369,388,393,428,430,434,439,448,453,491,493,506,511,516,548,550,584,586,595,649,651,679,681,741,743,833,856,861,905,951,971,989,990,1006,1032,1034,1053,1056,1057,1076,1088,1093,1101,1102,1104,1105,1123,1124,1127,1147,1148,1152,1153,1184,1186,1190,1213,1216,1245,1246,1249,1253,1254,1255,1257,1280,1288,1289,1293,1297,],[92,-608,158,-608,-525,-527,-41,-47,-608,-608,-526,-529,-46,-49,425,-608,488,-608,-528,545,-608,581,-608,-427,-433,646,-608,676,-608,-198,-204,738,-608,-48,-478,-484,-543,-549,92,-242,-248,-369,-375,-126,-132,-608,1029,-608,-608,-608,-608,-432,-435,-608,-331,-337,-608,-203,-206,-608,1181,-608,-483,-486,-548,-551,-247,-250,92,-374,-377,-131,-134,-284,-290,-434,-608,-205,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'RBRACKET':([49,50,53,54,55,58,82,83,84,85,86,87,131,132,134,135,164,165,166,167,188,204,205,206,274,343,348,621,622,623,703,704,705,706,767,768,769,790,791,792,850,851,852,882,883,884,926,927,928,1120,1142,1143,1144,1150,1188,1189,1194,1214,1217,1239,1240,1241,1285,1294,],[-89,-90,-91,-92,-93,110,131,-608,-608,-87,-88,-94,-19,-20,-23,-21,207,-530,-531,208,-22,237,-50,-51,349,494,516,833,-436,-437,905,-207,-208,906,951,-487,-488,971,-552,-553,1006,-251,-252,1053,-378,-379,1076,-135,-136,1190,1213,-340,-341,1216,1245,1246,1249,1255,1257,1280,-293,-294,1293,1297,]),'RPAREN':([49,50,52,53,54,55,60,61,83,84,85,86,87,89,90,91,92,96,97,98,99,101,102,103,104,105,106,107,109,113,115,131,132,134,135,136,138,153,154,155,156,157,158,159,160,161,163,172,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,256,272,273,292,304,305,307,308,309,310,311,312,317,332,333,335,336,337,338,339,340,347,349,350,364,365,367,368,369,370,371,372,373,374,375,376,377,379,380,381,387,388,389,391,392,393,394,395,396,401,421,422,423,424,425,426,427,428,430,432,433,434,435,437,438,439,440,441,442,446,447,448,449,451,452,453,454,455,456,458,464,484,485,486,487,488,489,490,491,493,506,507,509,510,511,512,513,514,515,516,521,541,542,543,544,545,546,547,548,550,551,552,554,557,561,576,577,578,579,580,581,582,583,584,586,590,591,593,594,595,596,598,599,600,601,602,603,604,605,606,624,626,641,642,643,644,645,646,647,648,649,651,654,656,671,672,673,674,675,676,677,678,679,681,684,685,686,687,688,714,734,735,736,737,738,739,740,741,743,747,748,749,750,751,752,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,794,796,797,812,813,814,815,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,856,857,859,860,861,862,863,864,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,907,908,909,910,911,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1025,1026,1027,1028,1029,1030,1031,1032,1034,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1056,1057,1076,1088,1089,1091,1092,1093,1094,1095,1096,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1123,1124,1125,1126,1147,1148,1149,1152,1153,1157,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1190,1196,1197,1213,1216,1220,1221,1222,1223,1224,1242,1243,1244,1245,1246,1249,1251,1253,1254,1255,1257,1280,1283,1288,1289,1293,1297,],[-89,-90,-608,-91,-92,-93,112,-608,-608,-608,-87,-88,-94,-532,-533,-407,-408,137,-608,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,171,-112,-19,-20,-23,-21,189,-35,-66,-36,-44,-45,-42,-43,-38,-39,-41,-47,-608,-22,-40,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-111,-114,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-608,-526,-529,-410,-46,-49,-608,-608,-423,-453,-454,-608,-455,-456,-457,458,-608,-194,-224,-225,-608,-226,-227,-228,-608,-528,517,-608,-474,-504,-505,-608,-506,-507,-508,551,-411,-608,-415,-416,-534,-535,-536,-608,-608,-539,-569,-570,-608,-571,-572,-573,603,-422,-430,-431,-428,-429,-424,-425,-427,-433,625,-608,-608,-238,-268,-269,-608,-270,-271,-272,655,-608,-608,-365,-395,-396,-608,-397,-398,-399,-607,685,-193,-201,-202,-199,-200,-195,-196,-198,-204,-608,-122,-152,-153,-608,-154,-155,-156,-113,-48,749,-473,-481,-482,-479,-480,-475,-476,-478,-484,-409,-412,-414,772,-537,-568,-538,-546,-547,-544,-545,-540,-541,-543,-549,795,-578,-580,-608,-608,-583,-602,-603,-604,-605,-606,-426,816,817,818,834,-236,-267,-237,-245,-246,-243,-244,-239,-240,-242,-248,866,-363,-394,-364,-372,-373,-370,-371,-366,-367,-369,-375,887,-197,888,889,890,908,-121,-129,-130,-127,-128,-123,-124,-126,-132,932,933,-477,934,935,936,-608,953,-542,954,955,956,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,972,973,-581,-601,-582,-584,-585,-608,-241,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-327,-357,-358,-608,-359,-360,-361,-368,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,1058,-125,1059,1060,1061,-608,-413,-574,-575,-576,-577,-554,-555,-556,-557,-558,-559,-560,-561,-562,-563,-564,-565,-566,-567,-608,-586,-579,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-432,-435,-253,-254,-255,-256,-257,-258,-259,-260,-261,-262,-263,-264,-265,-266,-608,1125,-326,-334,-335,-332,-333,-328,-329,-331,-337,-380,-381,-382,-383,-384,-385,-386,-387,-388,-389,-390,-391,-392,-393,-608,-203,-206,-608,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-587,-588,-589,-590,-591,-592,-593,-594,-595,-596,-597,-598,-599,-600,-247,-250,-330,1195,-374,-377,1215,-131,-134,1221,-279,-287,-288,-285,-286,-281,-282,-284,-290,-608,-434,-404,-405,-608,-205,1262,-283,1263,1264,1265,1281,-523,-524,-485,-550,-249,-406,-336,-339,-376,-133,-608,1291,-289,-292,-338,-291,]),'PLUS_EQ':([52,107,109,207,239,240,251,349,1127,],[-608,-525,-527,-608,-526,-529,287,-528,287,]),'MINUS_EQ':([52,107,109,207,239,240,251,349,1127,],[-608,-525,-527,-608,-526,-529,288,-528,288,]),'MUL_EQ':([52,107,109,207,239,240,251,349,1127,],[-608,-525,-527,-608,-526,-529,289,-528,289,]),'DIV_EQ':([52,107,109,207,239,240,251,349,1127,],[-608,-525,-527,-608,-526,-529,290,-528,290,]),'MOD_EQ':([52,107,109,207,239,240,251,349,1127,],[-608,-525,-527,-608,-526,-529,291,-528,291,]),'GHOST':([59,],[111,]),'SWAP':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,316,318,351,458,551,555,587,835,867,1145,1154,1155,1250,1256,1282,1286,1292,1295,1296,],[-608,-171,250,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,-608,-170,-465,-607,-409,-464,-417,-608,-608,-362,-608,-608,-608,-400,-608,-273,-324,-233,-608,]),'DISPLAY':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,316,318,351,458,551,555,587,835,867,1145,1154,1155,1250,1256,1282,1286,1292,1295,1296,],[-608,-171,258,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,-608,-170,-465,-607,-409,-464,-417,-608,-608,-362,-608,-608,-608,-400,-608,-273,-324,-233,-608,]),'CHECK':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,316,318,351,458,551,555,587,835,867,1145,1154,1155,1250,1256,1282,1286,1292,1295,1296,],[-608,-171,259,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,-608,-170,-465,-607,-409,-464,-417,-608,-608,-362,-608,-608,-608,-400,-608,-273,-324,-233,-608,]),'FOR':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,316,318,351,458,551,555,587,835,867,1145,1154,1155,1250,1256,1282,1286,1292,1295,1296,],[-608,-171,260,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,-608,-170,-465,-607,-409,-464,-417,-608,-608,-362,-608,-608,-608,-400,-608,-273,-324,-233,-608,]),'UNTIL':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,316,318,351,458,551,555,587,682,835,867,1145,1154,1155,1250,1256,1282,1286,1292,1295,1296,],[-608,-171,261,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,-608,-170,-465,-607,-409,-464,-417,885,-608,-608,-362,-608,-608,-608,-400,-608,-273,-324,-233,-608,]),'REPEAT':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,316,318,351,458,551,555,587,835,867,1145,1154,1155,1250,1256,1282,1286,1292,1295,1296,],[-608,-171,262,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,-608,-170,-465,-607,-409,-464,-417,-608,-608,-362,-608,-608,-608,-400,-608,-273,-324,-233,-608,]),'INPUT':([170,210,211,219,243,245,246,247,248,249,252,253,254,256,258,267,284,285,286,287,288,289,290,291,293,316,318,345,351,398,400,402,403,404,458,463,465,466,467,520,522,523,524,551,555,556,558,559,560,587,713,715,716,717,835,867,930,1145,1154,1155,1156,1158,1159,1160,1198,1250,1256,1282,1286,1292,1295,1296,],[-608,-171,263,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,263,263,263,-513,-514,-515,-516,-517,-518,-519,263,-608,-170,263,-465,263,263,263,263,263,-607,263,263,263,263,263,263,263,263,-409,-464,263,263,263,263,-417,263,263,263,263,-608,-608,263,-362,-608,-608,263,263,263,263,263,-608,-400,-608,-273,-324,-233,-608,]),'REVIVE':([210,211,219,242,243,244,245,246,247,248,249,252,253,254,256,269,275,276,277,278,279,280,318,351,458,551,555,587,1145,1256,1286,1292,1295,],[-161,-608,-608,-162,-608,-169,-608,-608,-608,-608,-608,-321,-322,-323,-410,345,-163,-164,-165,-166,-167,-168,-170,-465,-607,-409,-464,-417,-362,-400,-273,-324,-233,]),'SHIFT':([210,211,242,243,244,245,246,247,248,249,252,253,254,256,275,276,277,278,279,280,318,351,458,551,555,587,744,1145,1155,1219,1256,1286,1292,1295,],[-161,-608,-162,-608,-169,-608,-608,-608,-608,-608,-321,-322,-323,-410,-163,-164,-165,-166,-167,-168,-170,-465,-607,-409,-464,-417,930,-362,-608,930,-400,-273,-324,-233,]),'OTHERWISE':([210,211,242,243,244,245,246,247,248,249,252,253,254,256,275,276,277,278,279,280,318,351,458,551,555,587,929,1121,1145,1155,1191,1193,1219,1256,1259,1260,1261,1286,1292,1295,1299,1300,],[-161,-608,-162,-608,-169,-608,-608,-608,-608,-608,-321,-322,-323,-410,-163,-164,-165,-166,-167,-168,-170,-465,-607,-409,-464,-417,1077,-608,-362,-608,1247,-235,-608,-400,-274,-319,-320,-273,-324,-233,-608,-234,]),'DOT':([251,],[283,]),'COLON':([256,458,551,1078,1079,1080,1081,1087,1088,1089,1091,1092,1093,1094,1095,1096,1161,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1221,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1288,1289,1297,],[-410,-607,-409,1155,-275,-276,-277,-608,-608,-280,-310,-311,-608,-312,-313,-314,-278,-309,-279,-287,-288,-285,-286,-281,-282,-284,-290,-283,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-315,-316,-317,-318,-295,-296,-297,-298,-299,-300,-301,-302,-303,-304,-305,-306,-307,-308,-608,-289,-292,-291,]),'CONVERT_TO_INT':([258,267,284,285,286,287,288,289,290,291,293,345,398,930,1198,],[298,326,358,-513,-514,-515,-516,-517,-518,-519,382,500,382,1082,382,]),'CONVERT_TO_FLT':([258,267,284,285,286,287,288,289,290,291,293,345,398,930,1198,],[300,328,360,-513,-514,-515,-516,-517,-518,-519,384,502,384,1084,384,]),'CONVERT_TO_BLN':([258,267,284,285,286,287,288,289,290,291,293,345,398,930,1198,],[301,329,361,-513,-514,-515,-516,-517,-518,-519,385,503,385,1085,385,]),'CONVERT_TO_STR':([258,267,284,285,286,287,288,289,290,291,293,345,398,930,1198,],[302,330,362,-513,-514,-515,-516,-517,-518,-519,386,504,386,1086,386,]),'SPLICE':([283,],[352,]),'PUSH':([283,],[353,]),'OTHERWISE_CHECK':([1121,1299,],[1192,1192,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_dec':([3,29,],[4,39,]),'global_statement':([3,29,],[5,5,]),'empty':([3,4,7,29,34,40,41,44,46,52,61,83,84,97,98,103,110,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,170,172,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,211,212,219,237,243,245,246,247,248,249,251,268,269,292,294,303,304,309,316,319,320,331,332,337,347,363,364,369,375,387,388,393,433,434,439,447,448,453,494,495,505,506,511,588,594,595,607,608,609,610,611,612,613,614,615,616,617,618,619,620,683,689,690,691,692,693,694,695,696,697,698,699,700,701,702,753,754,755,756,757,758,759,760,761,762,763,764,765,766,770,776,777,778,779,780,781,782,783,784,785,786,787,788,789,833,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,855,856,861,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,905,912,913,914,915,916,917,918,919,920,921,922,923,924,925,931,951,971,974,975,976,977,978,979,980,981,982,983,984,985,986,987,1006,1053,1076,1087,1088,1093,1121,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1154,1155,1187,1213,1219,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1250,1280,1282,1296,1299,],[6,16,31,6,57,31,65,81,89,109,115,134,134,153,155,163,169,31,81,81,81,81,81,81,81,81,81,81,81,81,81,81,210,222,153,153,153,153,153,153,153,153,153,153,153,153,153,153,240,210,265,210,273,210,210,210,210,210,210,109,342,346,374,399,420,422,430,210,265,462,483,485,493,222,540,542,550,554,576,578,586,641,643,651,671,673,681,708,711,733,735,743,399,812,89,420,420,420,420,420,420,420,420,420,420,420,420,420,420,265,483,483,483,483,483,483,483,483,483,483,483,483,483,483,540,540,540,540,540,540,540,540,540,540,540,540,540,540,554,576,576,576,576,576,576,576,576,576,576,576,576,576,576,990,210,641,641,641,641,641,641,641,641,641,641,641,641,641,641,1024,1026,1034,210,671,671,671,671,671,671,671,671,671,671,671,671,671,671,1057,733,733,733,733,733,733,733,733,733,733,733,733,733,733,1098,1102,1105,812,812,812,812,812,812,812,812,812,812,812,812,812,812,1124,1148,1153,1176,1178,1186,1193,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,210,210,1243,1254,1261,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,210,1289,210,210,1193,]),'var_statement':([3,29,],[7,7,]),'data_type':([3,29,61,221,],[8,8,114,270,]),'function_statements':([4,495,],[14,710,]),'ret_type':([4,495,],[15,15,]),'function_dtype':([4,495,],[18,18,]),'global_statement_tail':([7,40,116,],[30,62,173,]),'main_function':([14,],[35,]),'global_tail':([29,],[38,]),'global_value':([33,],[41,]),'expression':([33,],[42,]),'list_value':([33,45,133,267,519,1187,],[43,84,84,322,84,84,]),'factor':([33,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[44,117,118,119,120,121,122,123,124,125,126,127,128,129,130,]),'var_call':([33,67,68,69,70,71,72,73,74,75,76,77,78,79,80,211,292,400,402,403,404,463,465,466,467,520,522,523,524,553,556,558,559,560,589,713,715,716,717,798,799,800,801,802,803,804,805,806,807,808,809,810,811,865,1008,1156,1158,1159,1160,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,257,377,595,595,595,595,595,595,595,595,595,595,595,595,377,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,1037,1127,595,595,595,595,]),'literal1':([33,45,67,68,69,70,71,72,73,74,75,76,77,78,79,80,133,292,519,553,1187,],[47,85,47,47,47,47,47,47,47,47,47,47,47,47,47,47,85,85,85,85,85,]),'list_dec':([34,],[56,]),'global_statement_tail2':([41,],[63,]),'factor_tail':([44,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[66,174,175,176,177,178,179,180,181,182,183,184,185,186,187,]),'list_element':([45,133,519,1187,],[82,188,747,1244,]),'literal':([45,133,292,519,553,1187,],[83,83,376,83,376,83,]),'literal2':([45,133,292,519,553,1187,],[86,86,86,86,86,86,]),'postfix':([46,595,],[88,813,]),'postfix_op':([46,595,1127,],[90,90,1197,]),'factor_expression':([51,95,],[96,136,]),'factor_expression_factor':([51,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,],[97,97,190,191,192,193,194,195,196,197,198,199,200,201,202,203,]),'factor_var_call':([51,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'factor_expression1':([51,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'list_index':([52,251,],[107,107,]),'parameters':([61,],[113,]),'element_tail':([83,84,],[132,135,]),'factor_expression_tail':([97,190,191,192,193,194,195,196,197,198,199,200,201,202,203,],[138,223,224,225,226,227,228,229,230,231,232,233,234,235,236,]),'factor_postfix':([98,],[154,]),'factor_postfix_op':([98,],[156,]),'factor_list_index':([103,],[161,]),'index':([108,238,],[164,274,]),'_2d_list':([110,],[168,]),'factor_index':([162,271,],[204,348,]),'statements':([170,211,219,243,245,246,247,248,249,316,835,867,1154,1155,1250,1282,1296,],[209,244,269,275,276,277,278,279,280,457,991,1038,1218,1219,1284,1290,1298,]),'local_dec':([170,211,219,243,245,246,247,248,249,316,835,867,1154,1155,1250,1282,1296,],[211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,]),'local_var_statement':([170,211,219,243,245,246,247,248,249,316,835,867,1154,1155,1250,1282,1296,],[212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,]),'local_data_type':([170,211,219,243,245,246,247,248,249,316,835,867,1154,1155,1250,1282,1296,],[213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,]),'parameters_tail':([172,347,],[220,515,]),'list_index2':([207,],[239,]),'statements_tail':([211,],[242,]),'switch_statement':([211,],[243,]),'loop_statement':([211,],[245,]),'function_call':([211,258,267,284,293,345,398,930,1198,],[246,297,325,357,381,499,381,1081,381,]),'assignment_statement':([211,],[247,]),'output_statement':([211,],[248,]),'conditional_statement':([211,],[249,]),'for_loop':([211,],[252,]),'until_loop':([211,],[253,]),'repeat_until':([211,],[254,]),'input_statement':([211,258,267,284,293,345,398,400,402,403,404,463,465,466,467,520,522,523,524,556,558,559,560,713,715,716,717,930,1156,1158,1159,1160,1198,],[256,256,256,256,256,256,256,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,256,593,593,593,593,256,]),'local_dec_tail':([212,319,683,],[264,459,886,]),'factor_list_index2':([237,],[272,]),'assign_tail':([251,],[282,]),'assign_op':([251,],[284,]),'compound_op':([251,1127,],[285,1198,]),'output_value':([258,],[294,]),'output_type_cast':([258,],[295,]),'output_expression':([258,],[296,]),'output_factor':([258,299,406,407,408,409,410,411,412,413,414,415,416,417,418,419,],[303,401,607,608,609,610,611,612,613,614,615,616,617,618,619,620,]),'output_var_call':([258,299,406,407,408,409,410,411,412,413,414,415,416,417,418,419,],[304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,]),'output_factor1':([258,299,406,407,408,409,410,411,412,413,414,415,416,417,418,419,],[305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,]),'local_value':([267,],[320,]),'local_value_value':([267,],[321,]),'local_type_cast':([267,],[323,]),'local_expression':([267,],[324,]),'local_factor':([267,327,469,470,471,472,473,474,475,476,477,478,479,480,481,482,],[331,464,689,690,691,692,693,694,695,696,697,698,699,700,701,702,]),'local_var_call':([267,327,469,470,471,472,473,474,475,476,477,478,479,480,481,482,],[332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,]),'local_factor1':([267,327,469,470,471,472,473,474,475,476,477,478,479,480,481,482,],[333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,]),'local_list_dec':([268,],[341,]),'revive':([269,],[344,]),'assign_value':([284,],[354,]),'assign_type_cast':([284,],[355,]),'assign_expression':([284,],[356,]),'assign_factor':([284,359,526,527,528,529,530,531,532,533,534,535,536,537,538,539,],[363,521,753,754,755,756,757,758,759,760,761,762,763,764,765,766,]),'assign_var_call':([284,359,526,527,528,529,530,531,532,533,534,535,536,537,538,539,],[364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,]),'assign_factor1':([284,359,526,527,528,529,530,531,532,533,534,535,536,537,538,539,],[365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,]),'arguments':([292,],[373,]),'arg_value':([292,553,],[375,770,]),'value':([293,398,1198,],[378,588,1251,]),'type_cast':([293,398,1198,],[379,379,379,]),'value_expression':([293,398,1198,],[380,380,380,]),'value_factor':([293,383,398,562,563,564,565,566,567,568,569,570,571,572,573,574,575,1198,],[387,557,387,776,777,778,779,780,781,782,783,784,785,786,787,788,789,387,]),'value_var_call':([293,383,398,562,563,564,565,566,567,568,569,570,571,572,573,574,575,1198,],[388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,]),'value_factor1':([293,383,398,562,563,564,565,566,567,568,569,570,571,572,573,574,575,1198,],[389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,]),'next_val':([294,588,],[397,793,]),'output_factor_tail':([303,607,608,609,610,611,612,613,614,615,616,617,618,619,620,],[405,819,820,821,822,823,824,825,826,827,828,829,830,831,832,]),'output_postfix':([304,],[421,]),'output_postfix_op':([304,],[423,]),'output_list_index':([309,],[428,]),'condition':([313,431,1248,],[432,624,1283,]),'condition_factor':([313,431,627,628,629,630,631,632,633,634,635,636,637,638,639,640,1248,],[433,433,836,837,838,839,840,841,842,843,844,845,846,847,848,849,433,]),'condition_var_call':([313,431,627,628,629,630,631,632,633,634,635,636,637,638,639,640,1248,],[434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,]),'condition1':([313,431,627,628,629,630,631,632,633,634,635,636,637,638,639,640,1248,],[435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,]),'control_variable':([314,],[443,]),'until_expression':([315,1054,],[446,1149,]),'until_factor':([315,445,657,658,659,660,661,662,663,664,665,666,667,668,669,670,1054,],[447,654,868,869,870,871,872,873,874,875,876,877,878,879,880,881,447,]),'until_var_call':([315,445,657,658,659,660,661,662,663,664,665,666,667,668,669,670,1054,],[448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,]),'until_factor1':([315,445,657,658,659,660,661,662,663,664,665,666,667,668,669,670,1054,],[449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,]),'local_dec_tail2':([320,],[460,]),'local_factor_tail':([331,689,690,691,692,693,694,695,696,697,698,699,700,701,702,],[468,891,892,893,894,895,896,897,898,899,900,901,902,903,904,]),'local_postfix':([332,],[484,]),'local_postfix_op':([332,],[486,]),'local_list_index':([337,],[491,]),'revive_value':([345,],[496,]),'revive_type_cast':([345,],[497,]),'revive_expression':([345,],[498,]),'revive_factor':([345,501,719,720,721,722,723,724,725,726,727,728,729,730,731,732,],[505,714,912,913,914,915,916,917,918,919,920,921,922,923,924,925,]),'revive_var_call':([345,501,719,720,721,722,723,724,725,726,727,728,729,730,731,732,],[506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,]),'revive_factor1':([345,501,719,720,721,722,723,724,725,726,727,728,729,730,731,732,],[507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,]),'assign_factor_tail':([363,753,754,755,756,757,758,759,760,761,762,763,764,765,766,],[525,937,938,939,940,941,942,943,944,945,946,947,948,949,950,]),'assign_postfix':([364,],[541,]),'assign_postfix_op':([364,],[543,]),'assign_list_index':([369,],[548,]),'arg_tail':([375,770,],[552,952,]),'value_factor_tail':([387,776,777,778,779,780,781,782,783,784,785,786,787,788,789,],[561,957,958,959,960,961,962,963,964,965,966,967,968,969,970,]),'value_postfix':([388,],[577,]),'value_postfix_op':([388,],[579,]),'value_list_index':([393,],[584,]),'typecast_value':([400,402,403,404,463,465,466,467,520,522,523,524,556,558,559,560,713,715,716,717,1156,1158,1159,1160,],[590,604,605,606,684,686,687,688,748,750,751,752,771,773,774,775,907,909,910,911,1220,1222,1223,1224,]),'typecast_expression':([400,402,403,404,463,465,466,467,520,522,523,524,556,558,559,560,713,715,716,717,1156,1158,1159,1160,],[591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,]),'typecast_factor':([400,402,403,404,463,465,466,467,520,522,523,524,556,558,559,560,589,713,715,716,717,798,799,800,801,802,803,804,805,806,807,808,809,810,811,1156,1158,1159,1160,],[594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,794,594,594,594,594,974,975,976,977,978,979,980,981,982,983,984,985,986,987,594,594,594,594,]),'typecast_factor1':([400,402,403,404,463,465,466,467,520,522,523,524,556,558,559,560,589,713,715,716,717,798,799,800,801,802,803,804,805,806,807,808,809,810,811,1156,1158,1159,1160,],[596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,]),'output_index':([429,988,],[621,1120,]),'condition_tail':([433,836,837,838,839,840,841,842,843,844,845,846,847,848,849,],[626,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,]),'condition_postfix':([434,],[642,]),'condition_postfix_op':([434,],[644,]),'condition_list_index':([439,],[649,]),'until_factor_tail':([447,868,869,870,871,872,873,874,875,876,877,878,879,880,881,],[656,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,]),'until_postfix':([448,],[672,]),'until_postfix_op':([448,],[674,]),'until_list_index':([453,],[679,]),'local_index':([492,1055,],[703,1150,]),'local_2d_list':([494,],[707,]),'function_statements_tail':([495,],[709,]),'revive_factor_tail':([505,912,913,914,915,916,917,918,919,920,921,922,923,924,925,],[718,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,]),'revive_postfix':([506,],[734,]),'revive_postfix_op':([506,],[736,]),'revive_list_index':([511,],[741,]),'start':([518,],[745,]),'assign_index':([549,1100,],[767,1188,]),'value_index':([585,1103,],[790,1189,]),'typecast_factor_tail':([594,974,975,976,977,978,979,980,981,982,983,984,985,986,987,],[797,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,]),'condition_index':([650,1122,],[850,1194,]),'for_expression':([652,],[854,]),'for_factor':([652,853,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,],[855,1007,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,]),'for_var_call':([652,853,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,],[856,856,856,856,856,856,856,856,856,856,856,856,856,856,856,856,]),'for_factor1':([652,853,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,],[857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,]),'until_index':([680,1146,],[882,1214,]),'revive_index':([742,1151,],[926,1217,]),'switch_condition':([744,1219,],[929,1260,]),'output_list_index2':([833,],[989,]),'for_factor_tail':([855,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,],[1009,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,]),'for_postfix':([856,],[1025,]),'for_postfix_op':([856,],[1027,]),'for_list_index':([861,],[1032,]),'control_var_tail':([865,],[1035,]),'local_list_index2':([905,],[1056,]),'switch_value':([930,],[1078,]),'switch_type_cast':([930,],[1079,]),'switch_expression':([930,],[1080,]),'switch_factor':([930,1083,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,],[1087,1157,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,]),'switch_var_call':([930,1083,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,],[1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,1088,]),'switch_factor1':([930,1083,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,],[1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,]),'deleteCount':([931,],[1097,]),'assign_list_index2':([951,],[1101,]),'value_list_index2':([971,],[1104,]),'condition_list_index2':([1006,],[1123,]),'update':([1008,],[1126,]),'for_index':([1033,1252,],[1142,1285,]),'until_list_index2':([1053,],[1147,]),'revive_list_index2':([1076,],[1152,]),'switch_factor_tail':([1087,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,],[1161,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,]),'switch_postfix':([1088,],[1177,]),'switch_postfix_op':([1088,],[1179,]),'switch_list_index':([1093,],[1184,]),'conditional_tail':([1121,1299,],[1191,1300,]),'update_tail':([1127,],[1196,]),'switch_index':([1185,1287,],[1239,1294,]),'splice_items':([1187,],[1242,]),'for_list_index2':([1213,],[1253,]),'switchcond_tail':([1219,],[1259,]),'switch_list_index2':([1280,],[1288,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BIRTH LBRACE global_dec function_statements main_function RBRACE GHOST','program',7,'p_program','Parser.py',41),
  ('main_function -> MAIN_CASPER LPAREN RPAREN LBRACE statements RBRACE','main_function',6,'p_main_function','Parser.py',49),
  ('global_dec -> global_statement SEMICOLON global_tail','global_dec',3,'p_global_dec','Parser.py',61),
  ('global_dec -> empty','global_dec',1,'p_global_dec','Parser.py',62),
  ('global_tail -> global_dec','global_tail',1,'p_global_tail','Parser.py',75),
  ('global_statement -> var_statement global_statement_tail','global_statement',2,'p_global_statement','Parser.py',85),
  ('var_statement -> data_type IDENT list_dec','var_statement',3,'p_var_statement','Parser.py',118),
  ('list_dec -> empty','list_dec',1,'p_list_dec','Parser.py',133),
  ('list_dec -> LBRACKET RBRACKET _2d_list','list_dec',3,'p_list_dec','Parser.py',134),
  ('_2d_list -> empty','_2d_list',1,'p_2d_list','Parser.py',149),
  ('_2d_list -> LBRACKET RBRACKET','_2d_list',2,'p_2d_list','Parser.py',150),
  ('global_statement_tail -> empty','global_statement_tail',1,'p_global_statement_tail','Parser.py',165),
  ('global_statement_tail -> COMMA IDENT global_statement_tail','global_statement_tail',3,'p_global_statement_tail','Parser.py',166),
  ('global_statement_tail -> EQ global_value global_statement_tail2','global_statement_tail',3,'p_global_statement_tail','Parser.py',167),
  ('global_statement_tail2 -> COMMA IDENT global_statement_tail','global_statement_tail2',3,'p_global_statement_tail2','Parser.py',184),
  ('global_statement_tail2 -> empty','global_statement_tail2',1,'p_global_statement_tail2','Parser.py',185),
  ('global_value -> expression','global_value',1,'p_global_value','Parser.py',200),
  ('global_value -> list_value','global_value',1,'p_global_value','Parser.py',201),
  ('list_value -> LBRACKET list_element RBRACKET','list_value',3,'p_list_value','Parser.py',211),
  ('list_element -> literal element_tail','list_element',2,'p_list_element','Parser.py',223),
  ('list_element -> list_value element_tail','list_element',2,'p_list_element','Parser.py',224),
  ('element_tail -> COMMA list_element','element_tail',2,'p_element_tail','Parser.py',240),
  ('element_tail -> empty','element_tail',1,'p_element_tail','Parser.py',241),
  ('data_type -> INT','data_type',1,'p_data_type','Parser.py',258),
  ('data_type -> FLT','data_type',1,'p_data_type','Parser.py',259),
  ('data_type -> BLN','data_type',1,'p_data_type','Parser.py',260),
  ('data_type -> CHR','data_type',1,'p_data_type','Parser.py',261),
  ('data_type -> STR','data_type',1,'p_data_type','Parser.py',262),
  ('expression -> factor factor_tail','expression',2,'p_expression','Parser.py',272),
  ('factor -> var_call postfix','factor',2,'p_factor','Parser.py',289),
  ('factor -> literal1','factor',1,'p_factor','Parser.py',290),
  ('factor -> TILDE INT_LIT','factor',2,'p_factor','Parser.py',291),
  ('factor -> TILDE FLT_LIT','factor',2,'p_factor','Parser.py',292),
  ('factor -> LPAREN factor_expression RPAREN','factor',3,'p_factor','Parser.py',293),
  ('factor_expression -> factor_expression_factor factor_expression_tail','factor_expression',2,'p_factor_expression','Parser.py',315),
  ('factor_expression_factor -> factor_var_call factor_postfix','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',325),
  ('factor_expression_factor -> factor_expression1','factor_expression_factor',1,'p_factor_expression_factor','Parser.py',326),
  ('factor_expression_factor -> TILDE INT_LIT','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',327),
  ('factor_expression_factor -> TILDE FLT_LIT','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',328),
  ('factor_expression_factor -> LPAREN factor_expression RPAREN','factor_expression_factor',3,'p_factor_expression_factor','Parser.py',329),
  ('factor_var_call -> IDENT factor_list_index','factor_var_call',2,'p_factor_var_call','Parser.py',350),
  ('factor_postfix_op -> PLUS_PLUS','factor_postfix_op',1,'p_factor_postfix_op','Parser.py',356),
  ('factor_postfix_op -> MINUS_MINUS','factor_postfix_op',1,'p_factor_postfix_op','Parser.py',357),
  ('factor_postfix -> empty','factor_postfix',1,'p_factor_postfix','Parser.py',362),
  ('factor_postfix -> factor_postfix_op','factor_postfix',1,'p_factor_postfix','Parser.py',363),
  ('factor_list_index -> LBRACKET factor_index RBRACKET factor_list_index2','factor_list_index',4,'p_factor_list_index','Parser.py',369),
  ('factor_list_index -> empty','factor_list_index',1,'p_factor_list_index','Parser.py',370),
  ('factor_list_index2 -> LBRACKET factor_index RBRACKET','factor_list_index2',3,'p_factor_list_index2','Parser.py',380),
  ('factor_list_index2 -> empty','factor_list_index2',1,'p_factor_list_index2','Parser.py',381),
  ('factor_index -> INT_LIT','factor_index',1,'p_factor__int_lit','Parser.py',391),
  ('factor_index -> IDENT','factor_index',1,'p_factor_index_ident','Parser.py',396),
  ('factor_expression_tail -> PLUS factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',402),
  ('factor_expression_tail -> MINUS factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',403),
  ('factor_expression_tail -> MULTIPLY factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',404),
  ('factor_expression_tail -> DIVISION factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',405),
  ('factor_expression_tail -> MODULO factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',406),
  ('factor_expression_tail -> EXPONENT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',407),
  ('factor_expression_tail -> GT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',408),
  ('factor_expression_tail -> LT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',409),
  ('factor_expression_tail -> EQ_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',410),
  ('factor_expression_tail -> GT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',411),
  ('factor_expression_tail -> LT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',412),
  ('factor_expression_tail -> NOT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',413),
  ('factor_expression_tail -> AND factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',414),
  ('factor_expression_tail -> OR factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',415),
  ('factor_expression_tail -> empty','factor_expression_tail',1,'p_factor_expression_tail','Parser.py',416),
  ('factor_expression1 -> INT_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',430),
  ('factor_expression1 -> FLT_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',431),
  ('factor_expression1 -> DAY','factor_expression1',1,'p_factor_expression1','Parser.py',432),
  ('factor_expression1 -> NIGHT','factor_expression1',1,'p_factor_expression1','Parser.py',433),
  ('factor_expression1 -> STR_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',434),
  ('factor_tail -> PLUS factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',458),
  ('factor_tail -> MINUS factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',459),
  ('factor_tail -> MULTIPLY factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',460),
  ('factor_tail -> DIVISION factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',461),
  ('factor_tail -> MODULO factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',462),
  ('factor_tail -> EXPONENT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',463),
  ('factor_tail -> GT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',464),
  ('factor_tail -> LT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',465),
  ('factor_tail -> EQ_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',466),
  ('factor_tail -> GT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',467),
  ('factor_tail -> LT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',468),
  ('factor_tail -> NOT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',469),
  ('factor_tail -> AND factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',470),
  ('factor_tail -> OR factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',471),
  ('factor_tail -> empty','factor_tail',1,'p_factor_tail','Parser.py',472),
  ('literal -> literal1','literal',1,'p_literal','Parser.py',490),
  ('literal -> literal2','literal',1,'p_literal','Parser.py',491),
  ('literal1 -> INT_LIT','literal1',1,'p_literal1','Parser.py',512),
  ('literal1 -> FLT_LIT','literal1',1,'p_literal1','Parser.py',513),
  ('literal1 -> DAY','literal1',1,'p_literal1','Parser.py',514),
  ('literal1 -> NIGHT','literal1',1,'p_literal1','Parser.py',515),
  ('literal1 -> STR_LIT','literal1',1,'p_literal1','Parser.py',516),
  ('literal2 -> CHR_LIT','literal2',1,'p_literal2','Parser.py',521),
  ('function_statements -> ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements revive RBRACE function_statements_tail','function_statements',10,'p_function_statements','Parser.py',532),
  ('function_statements -> empty','function_statements',1,'p_function_statements','Parser.py',533),
  ('function_statements_tail -> function_statements','function_statements_tail',1,'p_function_statements_tail','Parser.py',583),
  ('function_statements_tail -> empty','function_statements_tail',1,'p_function_statements_tail','Parser.py',584),
  ('ret_type -> FUNCTION','ret_type',1,'p_ret_type','Parser.py',597),
  ('ret_type -> function_dtype','ret_type',1,'p_ret_type','Parser.py',598),
  ('function_dtype -> FUNCTION_INT','function_dtype',1,'p_function_dtype','Parser.py',619),
  ('function_dtype -> FUNCTION_FLT','function_dtype',1,'p_function_dtype','Parser.py',620),
  ('function_dtype -> FUNCTION_CHR','function_dtype',1,'p_function_dtype','Parser.py',621),
  ('function_dtype -> FUNCTION_BLN','function_dtype',1,'p_function_dtype','Parser.py',622),
  ('function_dtype -> FUNCTION_STR','function_dtype',1,'p_function_dtype','Parser.py',623),
  ('function_dtype -> FUNCTION_LIST_INT','function_dtype',1,'p_function_dtype','Parser.py',624),
  ('function_dtype -> FUNCTION_LIST_FLT','function_dtype',1,'p_function_dtype','Parser.py',625),
  ('function_dtype -> FUNCTION_LIST_CHR','function_dtype',1,'p_function_dtype','Parser.py',626),
  ('function_dtype -> FUNCTION_LIST_STR','function_dtype',1,'p_function_dtype','Parser.py',627),
  ('function_dtype -> FUNCTION_LIST_BLN','function_dtype',1,'p_function_dtype','Parser.py',628),
  ('parameters -> data_type IDENT parameters_tail','parameters',3,'p_parameters','Parser.py',638),
  ('parameters -> empty','parameters',1,'p_parameters','Parser.py',639),
  ('parameters_tail -> COMMA data_type IDENT parameters_tail','parameters_tail',4,'p_parameters_tail','Parser.py',653),
  ('parameters_tail -> empty','parameters_tail',1,'p_parameters_tail','Parser.py',654),
  ('revive -> REVIVE revive_value SEMICOLON','revive',3,'p_revive','Parser.py',666),
  ('revive -> empty','revive',1,'p_revive','Parser.py',667),
  ('revive_value -> revive_type_cast','revive_value',1,'p_revive_value','Parser.py',677),
  ('revive_value -> revive_expression','revive_value',1,'p_revive_value','Parser.py',678),
  ('revive_value -> function_call','revive_value',1,'p_revive_value','Parser.py',679),
  ('revive_expression -> revive_factor revive_factor_tail','revive_expression',2,'p_revive_expression','Parser.py',685),
  ('revive_factor -> revive_var_call revive_postfix','revive_factor',2,'p_revive_factor','Parser.py',695),
  ('revive_factor -> revive_factor1','revive_factor',1,'p_revive_factor','Parser.py',696),
  ('revive_factor -> TILDE INT_LIT','revive_factor',2,'p_revive_factor','Parser.py',697),
  ('revive_factor -> TILDE FLT_LIT','revive_factor',2,'p_revive_factor','Parser.py',698),
  ('revive_factor -> LPAREN revive_factor RPAREN','revive_factor',3,'p_revive_factor','Parser.py',699),
  ('revive_var_call -> IDENT revive_list_index','revive_var_call',2,'p_revive_var_call','Parser.py',719),
  ('revive_postfix_op -> PLUS_PLUS','revive_postfix_op',1,'p_revive_postfix_op','Parser.py',725),
  ('revive_postfix_op -> MINUS_MINUS','revive_postfix_op',1,'p_revive_postfix_op','Parser.py',726),
  ('revive_postfix -> empty','revive_postfix',1,'p_revive_postfix','Parser.py',731),
  ('revive_postfix -> revive_postfix_op','revive_postfix',1,'p_revive_postfix','Parser.py',732),
  ('revive_list_index -> LBRACKET revive_index RBRACKET revive_list_index2','revive_list_index',4,'p_revive_list_index','Parser.py',738),
  ('revive_list_index -> empty','revive_list_index',1,'p_revive_list_index','Parser.py',739),
  ('revive_list_index2 -> LBRACKET revive_index RBRACKET','revive_list_index2',3,'p_revive_list_index2','Parser.py',749),
  ('revive_list_index2 -> empty','revive_list_index2',1,'p_revive_list_index2','Parser.py',750),
  ('revive_index -> INT_LIT','revive_index',1,'p_revive_int_lit','Parser.py',759),
  ('revive_index -> IDENT','revive_index',1,'p_revive_index_ident','Parser.py',764),
  ('revive_factor_tail -> PLUS revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',768),
  ('revive_factor_tail -> MINUS revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',769),
  ('revive_factor_tail -> MULTIPLY revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',770),
  ('revive_factor_tail -> DIVISION revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',771),
  ('revive_factor_tail -> MODULO revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',772),
  ('revive_factor_tail -> EXPONENT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',773),
  ('revive_factor_tail -> GT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',774),
  ('revive_factor_tail -> LT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',775),
  ('revive_factor_tail -> EQ_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',776),
  ('revive_factor_tail -> GT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',777),
  ('revive_factor_tail -> LT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',778),
  ('revive_factor_tail -> NOT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',779),
  ('revive_factor_tail -> AND revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',780),
  ('revive_factor_tail -> OR revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',781),
  ('revive_factor_tail -> empty','revive_factor_tail',1,'p_revive_factor_tail','Parser.py',782),
  ('revive_factor1 -> INT_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',796),
  ('revive_factor1 -> FLT_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',797),
  ('revive_factor1 -> DAY','revive_factor1',1,'p_revive_factor1','Parser.py',798),
  ('revive_factor1 -> NIGHT','revive_factor1',1,'p_revive_factor1','Parser.py',799),
  ('revive_factor1 -> STR_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',800),
  ('revive_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',805),
  ('revive_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',806),
  ('revive_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',807),
  ('revive_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',808),
  ('statements -> empty','statements',1,'p_statements','Parser.py',815),
  ('statements -> local_dec statements_tail','statements',2,'p_statements','Parser.py',816),
  ('statements_tail -> switch_statement statements','statements_tail',2,'p_statements_tail','Parser.py',830),
  ('statements_tail -> loop_statement statements','statements_tail',2,'p_statements_tail','Parser.py',831),
  ('statements_tail -> function_call statements','statements_tail',2,'p_statements_tail','Parser.py',832),
  ('statements_tail -> assignment_statement statements','statements_tail',2,'p_statements_tail','Parser.py',833),
  ('statements_tail -> output_statement statements','statements_tail',2,'p_statements_tail','Parser.py',834),
  ('statements_tail -> conditional_statement statements','statements_tail',2,'p_statements_tail','Parser.py',835),
  ('statements_tail -> statements','statements_tail',1,'p_statements_tail','Parser.py',836),
  ('local_dec -> local_var_statement local_dec_tail SEMICOLON','local_dec',3,'p_local_dec','Parser.py',852),
  ('local_dec -> empty','local_dec',1,'p_local_dec','Parser.py',853),
  ('local_var_statement -> local_data_type IDENT local_list_dec','local_var_statement',3,'p_local_var_statement','Parser.py',871),
  ('local_data_type -> INT','local_data_type',1,'p_local_data_type','Parser.py',881),
  ('local_data_type -> FLT','local_data_type',1,'p_local_data_type','Parser.py',882),
  ('local_data_type -> BLN','local_data_type',1,'p_local_data_type','Parser.py',883),
  ('local_data_type -> CHR','local_data_type',1,'p_local_data_type','Parser.py',884),
  ('local_data_type -> STR','local_data_type',1,'p_local_data_type','Parser.py',885),
  ('local_list_dec -> empty','local_list_dec',1,'p_local_list_dec','Parser.py',891),
  ('local_list_dec -> LBRACKET RBRACKET local_2d_list','local_list_dec',3,'p_local_list_dec','Parser.py',892),
  ('local_2d_list -> empty','local_2d_list',1,'p_local_2d_list','Parser.py',903),
  ('local_2d_list -> LBRACKET RBRACKET','local_2d_list',2,'p_local_2d_list','Parser.py',904),
  ('local_dec_tail -> empty','local_dec_tail',1,'p_local_dec_tail','Parser.py',919),
  ('local_dec_tail -> COMMA IDENT local_dec_tail','local_dec_tail',3,'p_local_dec_tail','Parser.py',920),
  ('local_dec_tail -> EQ local_value local_dec_tail2','local_dec_tail',3,'p_local_dec_tail','Parser.py',921),
  ('local_dec_tail2 -> COMMA IDENT local_dec_tail','local_dec_tail2',3,'p_local_dec_tail2','Parser.py',936),
  ('local_dec_tail2 -> empty','local_dec_tail2',1,'p_local_dec_tail2','Parser.py',937),
  ('local_value -> local_value_value','local_value',1,'p_local_value','Parser.py',951),
  ('local_value -> list_value','local_value',1,'p_local_value','Parser.py',952),
  ('local_value_value -> local_type_cast','local_value_value',1,'p_local_value_value','Parser.py',957),
  ('local_value_value -> local_expression','local_value_value',1,'p_local_value_value','Parser.py',958),
  ('local_value_value -> function_call','local_value_value',1,'p_local_value_value','Parser.py',959),
  ('local_expression -> local_factor local_factor_tail','local_expression',2,'p_local_expression','Parser.py',964),
  ('local_factor -> local_var_call local_postfix','local_factor',2,'p_local_factor','Parser.py',974),
  ('local_factor -> local_factor1','local_factor',1,'p_local_factor','Parser.py',975),
  ('local_factor -> TILDE INT_LIT','local_factor',2,'p_local_factor','Parser.py',976),
  ('local_factor -> TILDE FLT_LIT','local_factor',2,'p_local_factor','Parser.py',977),
  ('local_factor -> LPAREN local_factor RPAREN','local_factor',3,'p_local_factor','Parser.py',978),
  ('local_var_call -> IDENT local_list_index','local_var_call',2,'p_local_var_call','Parser.py',999),
  ('local_postfix_op -> PLUS_PLUS','local_postfix_op',1,'p_local_postfix_op','Parser.py',1005),
  ('local_postfix_op -> MINUS_MINUS','local_postfix_op',1,'p_local_postfix_op','Parser.py',1006),
  ('local_postfix -> empty','local_postfix',1,'p_local_postfix','Parser.py',1011),
  ('local_postfix -> local_postfix_op','local_postfix',1,'p_local_postfix','Parser.py',1012),
  ('local_list_index -> LBRACKET local_index RBRACKET local_list_index2','local_list_index',4,'p_local_list_index','Parser.py',1018),
  ('local_list_index -> empty','local_list_index',1,'p_local_list_index','Parser.py',1019),
  ('local_list_index2 -> LBRACKET local_index RBRACKET','local_list_index2',3,'p_local_list_index2','Parser.py',1029),
  ('local_list_index2 -> empty','local_list_index2',1,'p_local_list_index2','Parser.py',1030),
  ('local_index -> INT_LIT','local_index',1,'p_local_int_lit','Parser.py',1039),
  ('local_index -> IDENT','local_index',1,'p_local_index_ident','Parser.py',1044),
  ('local_factor_tail -> PLUS local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1048),
  ('local_factor_tail -> MINUS local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1049),
  ('local_factor_tail -> MULTIPLY local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1050),
  ('local_factor_tail -> DIVISION local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1051),
  ('local_factor_tail -> MODULO local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1052),
  ('local_factor_tail -> EXPONENT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1053),
  ('local_factor_tail -> GT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1054),
  ('local_factor_tail -> LT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1055),
  ('local_factor_tail -> EQ_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1056),
  ('local_factor_tail -> GT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1057),
  ('local_factor_tail -> LT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1058),
  ('local_factor_tail -> NOT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1059),
  ('local_factor_tail -> AND local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1060),
  ('local_factor_tail -> OR local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1061),
  ('local_factor_tail -> empty','local_factor_tail',1,'p_local_factor_tail','Parser.py',1062),
  ('local_factor1 -> INT_LIT','local_factor1',1,'p_local_factor1','Parser.py',1076),
  ('local_factor1 -> FLT_LIT','local_factor1',1,'p_local_factor1','Parser.py',1077),
  ('local_factor1 -> DAY','local_factor1',1,'p_local_factor1','Parser.py',1078),
  ('local_factor1 -> NIGHT','local_factor1',1,'p_local_factor1','Parser.py',1079),
  ('local_factor1 -> STR_LIT','local_factor1',1,'p_local_factor1','Parser.py',1080),
  ('local_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',1085),
  ('local_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',1086),
  ('local_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',1087),
  ('local_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',1088),
  ('conditional_statement -> CHECK LPAREN condition RPAREN LBRACE statements RBRACE conditional_tail OTHERWISE LBRACE statements RBRACE','conditional_statement',12,'p_conditional_statement','Parser.py',1095),
  ('conditional_tail -> OTHERWISE_CHECK LPAREN condition RPAREN LBRACE statements RBRACE conditional_tail','conditional_tail',8,'p_conditional_tail','Parser.py',1106),
  ('conditional_tail -> empty','conditional_tail',1,'p_conditional_tail','Parser.py',1107),
  ('condition -> condition_factor condition_tail','condition',2,'p_condition','Parser.py',1117),
  ('condition_factor -> condition_var_call condition_postfix','condition_factor',2,'p_condition_factor','Parser.py',1127),
  ('condition_factor -> condition1','condition_factor',1,'p_condition_factor','Parser.py',1128),
  ('condition_factor -> TILDE INT_LIT','condition_factor',2,'p_condition_factor','Parser.py',1129),
  ('condition_factor -> TILDE FLT_LIT','condition_factor',2,'p_condition_factor','Parser.py',1130),
  ('condition_factor -> LPAREN condition RPAREN','condition_factor',3,'p_condition_factor','Parser.py',1131),
  ('condition_var_call -> IDENT condition_list_index','condition_var_call',2,'p_condition_var_call','Parser.py',1151),
  ('condition_postfix_op -> PLUS_PLUS','condition_postfix_op',1,'p_condition_postfix_op','Parser.py',1157),
  ('condition_postfix_op -> MINUS_MINUS','condition_postfix_op',1,'p_condition_postfix_op','Parser.py',1158),
  ('condition_postfix -> empty','condition_postfix',1,'p_condition_postfix','Parser.py',1163),
  ('condition_postfix -> condition_postfix_op','condition_postfix',1,'p_condition_postfix','Parser.py',1164),
  ('condition_list_index -> LBRACKET condition_index RBRACKET condition_list_index2','condition_list_index',4,'p_condition_list_index','Parser.py',1170),
  ('condition_list_index -> empty','condition_list_index',1,'p_condition_list_index','Parser.py',1171),
  ('condition_list_index2 -> LBRACKET condition_index RBRACKET','condition_list_index2',3,'p_condition_list_index2','Parser.py',1181),
  ('condition_list_index2 -> empty','condition_list_index2',1,'p_condition_list_index2','Parser.py',1182),
  ('condition_index -> INT_LIT','condition_index',1,'p_condition_int_lit','Parser.py',1191),
  ('condition_index -> IDENT','condition_index',1,'p_condition_index_ident','Parser.py',1196),
  ('condition_tail -> PLUS condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1200),
  ('condition_tail -> MINUS condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1201),
  ('condition_tail -> MULTIPLY condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1202),
  ('condition_tail -> DIVISION condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1203),
  ('condition_tail -> MODULO condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1204),
  ('condition_tail -> EXPONENT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1205),
  ('condition_tail -> GT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1206),
  ('condition_tail -> LT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1207),
  ('condition_tail -> EQ_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1208),
  ('condition_tail -> GT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1209),
  ('condition_tail -> LT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1210),
  ('condition_tail -> NOT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1211),
  ('condition_tail -> AND condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1212),
  ('condition_tail -> OR condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1213),
  ('condition_tail -> empty','condition_tail',1,'p_condition_tail','Parser.py',1214),
  ('condition1 -> INT_LIT','condition1',1,'p_condition1','Parser.py',1228),
  ('condition1 -> FLT_LIT','condition1',1,'p_condition1','Parser.py',1229),
  ('condition1 -> DAY','condition1',1,'p_condition1','Parser.py',1230),
  ('condition1 -> NIGHT','condition1',1,'p_condition1','Parser.py',1231),
  ('condition1 -> STR_LIT','condition1',1,'p_condition1','Parser.py',1232),
  ('switch_statement -> SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE LBRACE statements RBRACE RBRACE','switch_statement',11,'p_switch_statement','Parser.py',1244),
  ('switch_condition -> SHIFT switch_value COLON statements switchcond_tail','switch_condition',5,'p_switch_condition','Parser.py',1258),
  ('switch_value -> switch_type_cast','switch_value',1,'p_switch_value','Parser.py',1264),
  ('switch_value -> switch_expression','switch_value',1,'p_switch_value','Parser.py',1265),
  ('switch_value -> function_call','switch_value',1,'p_switch_value','Parser.py',1266),
  ('switch_expression -> switch_factor switch_factor_tail','switch_expression',2,'p_switch_expression','Parser.py',1271),
  ('switch_factor -> switch_var_call switch_postfix','switch_factor',2,'p_switch_factor','Parser.py',1281),
  ('switch_factor -> switch_factor1','switch_factor',1,'p_switch_factor','Parser.py',1282),
  ('switch_factor -> TILDE INT_LIT','switch_factor',2,'p_switch_factor','Parser.py',1283),
  ('switch_factor -> TILDE FLT_LIT','switch_factor',2,'p_switch_factor','Parser.py',1284),
  ('switch_factor -> LPAREN switch_factor RPAREN','switch_factor',3,'p_switch_factor','Parser.py',1285),
  ('switch_var_call -> IDENT switch_list_index','switch_var_call',2,'p_switch_var_call','Parser.py',1305),
  ('switch_postfix_op -> PLUS_PLUS','switch_postfix_op',1,'p_switch_postfix_op','Parser.py',1311),
  ('switch_postfix_op -> MINUS_MINUS','switch_postfix_op',1,'p_switch_postfix_op','Parser.py',1312),
  ('switch_postfix -> empty','switch_postfix',1,'p_switch_postfix','Parser.py',1317),
  ('switch_postfix -> switch_postfix_op','switch_postfix',1,'p_switch_postfix','Parser.py',1318),
  ('switch_list_index -> LBRACKET switch_index RBRACKET switch_list_index2','switch_list_index',4,'p_switch_list_index','Parser.py',1324),
  ('switch_list_index -> empty','switch_list_index',1,'p_switch_list_index','Parser.py',1325),
  ('switch_list_index2 -> LBRACKET switch_index RBRACKET','switch_list_index2',3,'p_switch_list_index2','Parser.py',1335),
  ('switch_list_index2 -> empty','switch_list_index2',1,'p_switch_list_index2','Parser.py',1336),
  ('switch_index -> INT_LIT','switch_index',1,'p_switch_int_lit','Parser.py',1344),
  ('switch_index -> IDENT','switch_index',1,'p_switch_index_ident','Parser.py',1349),
  ('switch_factor_tail -> PLUS switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1354),
  ('switch_factor_tail -> MINUS switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1355),
  ('switch_factor_tail -> MULTIPLY switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1356),
  ('switch_factor_tail -> DIVISION switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1357),
  ('switch_factor_tail -> MODULO switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1358),
  ('switch_factor_tail -> EXPONENT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1359),
  ('switch_factor_tail -> GT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1360),
  ('switch_factor_tail -> LT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1361),
  ('switch_factor_tail -> EQ_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1362),
  ('switch_factor_tail -> GT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1363),
  ('switch_factor_tail -> LT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1364),
  ('switch_factor_tail -> NOT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1365),
  ('switch_factor_tail -> AND switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1366),
  ('switch_factor_tail -> OR switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1367),
  ('switch_factor_tail -> empty','switch_factor_tail',1,'p_switch_factor_tail','Parser.py',1368),
  ('switch_factor1 -> INT_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1382),
  ('switch_factor1 -> FLT_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1383),
  ('switch_factor1 -> DAY','switch_factor1',1,'p_switch_factor1','Parser.py',1384),
  ('switch_factor1 -> NIGHT','switch_factor1',1,'p_switch_factor1','Parser.py',1385),
  ('switch_factor1 -> STR_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1386),
  ('switch_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1391),
  ('switch_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1392),
  ('switch_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1393),
  ('switch_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1394),
  ('switchcond_tail -> switch_condition','switchcond_tail',1,'p_switchcond_tail','Parser.py',1402),
  ('switchcond_tail -> empty','switchcond_tail',1,'p_switchcond_tail','Parser.py',1403),
  ('loop_statement -> for_loop','loop_statement',1,'p_loop_statement','Parser.py',1418),
  ('loop_statement -> until_loop','loop_statement',1,'p_loop_statement','Parser.py',1419),
  ('loop_statement -> repeat_until','loop_statement',1,'p_loop_statement','Parser.py',1420),
  ('for_loop -> FOR LPAREN control_variable SEMICOLON for_expression SEMICOLON update RPAREN LBRACE statements RBRACE','for_loop',11,'p_for_loop','Parser.py',1428),
  ('for_expression -> for_factor for_factor_tail','for_expression',2,'p_for_expression','Parser.py',1433),
  ('for_factor -> for_var_call for_postfix','for_factor',2,'p_for_factor','Parser.py',1443),
  ('for_factor -> for_factor1','for_factor',1,'p_for_factor','Parser.py',1444),
  ('for_factor -> TILDE INT_LIT','for_factor',2,'p_for_factor','Parser.py',1445),
  ('for_factor -> TILDE FLT_LIT','for_factor',2,'p_for_factor','Parser.py',1446),
  ('for_factor -> LPAREN for_factor RPAREN','for_factor',3,'p_for_factor','Parser.py',1447),
  ('for_var_call -> IDENT for_list_index','for_var_call',2,'p_for_var_call','Parser.py',1467),
  ('for_postfix_op -> PLUS_PLUS','for_postfix_op',1,'p_for_postfix_op','Parser.py',1473),
  ('for_postfix_op -> MINUS_MINUS','for_postfix_op',1,'p_for_postfix_op','Parser.py',1474),
  ('for_postfix -> empty','for_postfix',1,'p_for_postfix','Parser.py',1479),
  ('for_postfix -> for_postfix_op','for_postfix',1,'p_for_postfix','Parser.py',1480),
  ('for_list_index -> LBRACKET for_index RBRACKET for_list_index2','for_list_index',4,'p_for_list_index','Parser.py',1486),
  ('for_list_index -> empty','for_list_index',1,'p_for_list_index','Parser.py',1487),
  ('for_list_index2 -> LBRACKET for_index RBRACKET','for_list_index2',3,'p_for_list_index2','Parser.py',1497),
  ('for_list_index2 -> empty','for_list_index2',1,'p_for_list_index2','Parser.py',1498),
  ('for_index -> INT_LIT','for_index',1,'p_for_int_lit','Parser.py',1507),
  ('for_index -> IDENT','for_index',1,'p_for_index_ident','Parser.py',1512),
  ('for_factor_tail -> PLUS for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1519),
  ('for_factor_tail -> MINUS for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1520),
  ('for_factor_tail -> MULTIPLY for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1521),
  ('for_factor_tail -> DIVISION for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1522),
  ('for_factor_tail -> MODULO for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1523),
  ('for_factor_tail -> EXPONENT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1524),
  ('for_factor_tail -> GT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1525),
  ('for_factor_tail -> LT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1526),
  ('for_factor_tail -> EQ_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1527),
  ('for_factor_tail -> GT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1528),
  ('for_factor_tail -> LT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1529),
  ('for_factor_tail -> NOT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1530),
  ('for_factor_tail -> AND for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1531),
  ('for_factor_tail -> OR for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1532),
  ('for_factor_tail -> empty','for_factor_tail',1,'p_for_factor_tail','Parser.py',1533),
  ('for_factor1 -> INT_LIT','for_factor1',1,'p_for_factor1','Parser.py',1547),
  ('for_factor1 -> FLT_LIT','for_factor1',1,'p_for_factor1','Parser.py',1548),
  ('for_factor1 -> DAY','for_factor1',1,'p_for_factor1','Parser.py',1549),
  ('for_factor1 -> NIGHT','for_factor1',1,'p_for_factor1','Parser.py',1550),
  ('for_factor1 -> STR_LIT','for_factor1',1,'p_for_factor1','Parser.py',1551),
  ('until_loop -> UNTIL LPAREN until_expression RPAREN LBRACE statements RBRACE','until_loop',7,'p_until_loop','Parser.py',1559),
  ('until_expression -> until_factor until_factor_tail','until_expression',2,'p_until_expression','Parser.py',1566),
  ('until_factor -> until_var_call until_postfix','until_factor',2,'p_until_factor','Parser.py',1576),
  ('until_factor -> until_factor1','until_factor',1,'p_until_factor','Parser.py',1577),
  ('until_factor -> TILDE INT_LIT','until_factor',2,'p_until_factor','Parser.py',1578),
  ('until_factor -> TILDE FLT_LIT','until_factor',2,'p_until_factor','Parser.py',1579),
  ('until_factor -> LPAREN until_factor RPAREN','until_factor',3,'p_until_factor','Parser.py',1580),
  ('until_var_call -> IDENT until_list_index','until_var_call',2,'p_until_var_call','Parser.py',1600),
  ('until_postfix_op -> PLUS_PLUS','until_postfix_op',1,'p_until_postfix_op','Parser.py',1606),
  ('until_postfix_op -> MINUS_MINUS','until_postfix_op',1,'p_until_postfix_op','Parser.py',1607),
  ('until_postfix -> empty','until_postfix',1,'p_until_postfix','Parser.py',1612),
  ('until_postfix -> until_postfix_op','until_postfix',1,'p_until_postfix','Parser.py',1613),
  ('until_list_index -> LBRACKET until_index RBRACKET until_list_index2','until_list_index',4,'p_until_list_index','Parser.py',1619),
  ('until_list_index -> empty','until_list_index',1,'p_until_list_index','Parser.py',1620),
  ('until_list_index2 -> LBRACKET until_index RBRACKET','until_list_index2',3,'p_until_list_index2','Parser.py',1630),
  ('until_list_index2 -> empty','until_list_index2',1,'p_until_list_index2','Parser.py',1631),
  ('until_index -> INT_LIT','until_index',1,'p_until_int_lit','Parser.py',1641),
  ('until_index -> IDENT','until_index',1,'p_until_index_ident','Parser.py',1646),
  ('until_factor_tail -> PLUS until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1651),
  ('until_factor_tail -> MINUS until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1652),
  ('until_factor_tail -> MULTIPLY until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1653),
  ('until_factor_tail -> DIVISION until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1654),
  ('until_factor_tail -> MODULO until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1655),
  ('until_factor_tail -> EXPONENT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1656),
  ('until_factor_tail -> GT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1657),
  ('until_factor_tail -> LT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1658),
  ('until_factor_tail -> EQ_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1659),
  ('until_factor_tail -> GT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1660),
  ('until_factor_tail -> LT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1661),
  ('until_factor_tail -> NOT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1662),
  ('until_factor_tail -> AND until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1663),
  ('until_factor_tail -> OR until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1664),
  ('until_factor_tail -> empty','until_factor_tail',1,'p_until_factor_tail','Parser.py',1665),
  ('until_factor1 -> INT_LIT','until_factor1',1,'p_until_factor1','Parser.py',1679),
  ('until_factor1 -> FLT_LIT','until_factor1',1,'p_until_factor1','Parser.py',1680),
  ('until_factor1 -> DAY','until_factor1',1,'p_until_factor1','Parser.py',1681),
  ('until_factor1 -> NIGHT','until_factor1',1,'p_until_factor1','Parser.py',1682),
  ('until_factor1 -> STR_LIT','until_factor1',1,'p_until_factor1','Parser.py',1683),
  ('repeat_until -> REPEAT LBRACE statements RBRACE UNTIL LPAREN until_expression RPAREN SEMICOLON','repeat_until',9,'p_repeat_until','Parser.py',1691),
  ('control_variable -> INT IDENT EQ control_var_tail','control_variable',4,'p_control_variable','Parser.py',1699),
  ('control_var_tail -> INT_LIT','control_var_tail',1,'p_control_var_tail','Parser.py',1713),
  ('control_var_tail -> var_call','control_var_tail',1,'p_control_var_tail','Parser.py',1714),
  ('update -> var_call update_tail','update',2,'p_update','Parser.py',1727),
  ('update_tail -> postfix_op','update_tail',1,'p_update_tail','Parser.py',1737),
  ('update_tail -> compound_op value','update_tail',2,'p_update_tail','Parser.py',1738),
  ('postfix_op -> PLUS_PLUS','postfix_op',1,'p_postfix_op','Parser.py',1751),
  ('postfix_op -> MINUS_MINUS','postfix_op',1,'p_postfix_op','Parser.py',1752),
  ('function_call -> FUNCTION_NAME LPAREN arguments RPAREN','function_call',4,'p_function_call','Parser.py',1762),
  ('function_call -> input_statement','function_call',1,'p_function_call','Parser.py',1763),
  ('arguments -> empty','arguments',1,'p_arguments','Parser.py',1778),
  ('arguments -> arg_value arg_tail','arguments',2,'p_arguments','Parser.py',1779),
  ('arg_tail -> COMMA arg_value arg_tail','arg_tail',3,'p_arg_tail','Parser.py',1792),
  ('arg_tail -> empty','arg_tail',1,'p_arg_tail','Parser.py',1793),
  ('arg_value -> literal','arg_value',1,'p_arg_value','Parser.py',1806),
  ('arg_value -> var_call','arg_value',1,'p_arg_value','Parser.py',1807),
  ('output_statement -> DISPLAY output_value next_val SEMICOLON','output_statement',4,'p_output_statement','Parser.py',1816),
  ('output_value -> output_type_cast','output_value',1,'p_output_value','Parser.py',1823),
  ('output_value -> output_expression','output_value',1,'p_output_value','Parser.py',1824),
  ('output_value -> function_call','output_value',1,'p_output_value','Parser.py',1825),
  ('output_expression -> output_factor output_factor_tail','output_expression',2,'p_output_expression','Parser.py',1831),
  ('output_factor -> output_var_call output_postfix','output_factor',2,'p_output_factor','Parser.py',1841),
  ('output_factor -> output_factor1','output_factor',1,'p_output_factor','Parser.py',1842),
  ('output_factor -> TILDE INT_LIT','output_factor',2,'p_output_factor','Parser.py',1843),
  ('output_factor -> TILDE FLT_LIT','output_factor',2,'p_output_factor','Parser.py',1844),
  ('output_factor -> LPAREN output_factor RPAREN','output_factor',3,'p_output_factor','Parser.py',1845),
  ('output_var_call -> IDENT output_list_index','output_var_call',2,'p_output_var_call','Parser.py',1865),
  ('output_postfix_op -> PLUS_PLUS','output_postfix_op',1,'p_output_postfix_op','Parser.py',1871),
  ('output_postfix_op -> MINUS_MINUS','output_postfix_op',1,'p_output_postfix_op','Parser.py',1872),
  ('output_postfix -> empty','output_postfix',1,'p_output_postfix','Parser.py',1877),
  ('output_postfix -> output_postfix_op','output_postfix',1,'p_output_postfix','Parser.py',1878),
  ('output_list_index -> LBRACKET output_index RBRACKET output_list_index2','output_list_index',4,'p_output_list_index','Parser.py',1884),
  ('output_list_index -> empty','output_list_index',1,'p_output_list_index','Parser.py',1885),
  ('output_list_index2 -> LBRACKET output_index RBRACKET','output_list_index2',3,'p_output_list_index2','Parser.py',1895),
  ('output_list_index2 -> empty','output_list_index2',1,'p_output_list_index2','Parser.py',1896),
  ('output_index -> INT_LIT','output_index',1,'p_output_int_lit','Parser.py',1905),
  ('output_index -> IDENT','output_index',1,'p_output_index_ident','Parser.py',1910),
  ('output_factor_tail -> PLUS output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1915),
  ('output_factor_tail -> MINUS output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1916),
  ('output_factor_tail -> MULTIPLY output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1917),
  ('output_factor_tail -> DIVISION output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1918),
  ('output_factor_tail -> MODULO output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1919),
  ('output_factor_tail -> EXPONENT output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1920),
  ('output_factor_tail -> GT output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1921),
  ('output_factor_tail -> LT output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1922),
  ('output_factor_tail -> EQ_EQ output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1923),
  ('output_factor_tail -> GT_EQ output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1924),
  ('output_factor_tail -> LT_EQ output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1925),
  ('output_factor_tail -> NOT_EQ output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1926),
  ('output_factor_tail -> AND output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1927),
  ('output_factor_tail -> OR output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1928),
  ('output_factor_tail -> empty','output_factor_tail',1,'p_output_factor_tail','Parser.py',1929),
  ('output_factor1 -> INT_LIT','output_factor1',1,'p_output_factor1','Parser.py',1943),
  ('output_factor1 -> FLT_LIT','output_factor1',1,'p_output_factor1','Parser.py',1944),
  ('output_factor1 -> DAY','output_factor1',1,'p_output_factor1','Parser.py',1945),
  ('output_factor1 -> NIGHT','output_factor1',1,'p_output_factor1','Parser.py',1946),
  ('output_factor1 -> STR_LIT','output_factor1',1,'p_output_factor1','Parser.py',1947),
  ('output_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','output_type_cast',4,'p_output_type_cast','Parser.py',1952),
  ('output_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','output_type_cast',4,'p_output_type_cast','Parser.py',1953),
  ('output_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','output_type_cast',4,'p_output_type_cast','Parser.py',1954),
  ('output_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','output_type_cast',4,'p_output_type_cast','Parser.py',1955),
  ('next_val -> COMMA value next_val','next_val',3,'p_next_val','Parser.py',1963),
  ('next_val -> empty','next_val',1,'p_next_val','Parser.py',1964),
  ('assignment_statement -> var_call EQ value SEMICOLON','assignment_statement',4,'p_assignment_statement_indexed','Parser.py',1977),
  ('assignment_statement -> IDENT assign_tail SEMICOLON','assignment_statement',3,'p_assignment_statement','Parser.py',1991),
  ('assign_tail -> DOT SPLICE LPAREN start COMMA deleteCount COMMA splice_items RPAREN','assign_tail',9,'p_assign_tail','Parser.py',2008),
  ('assign_tail -> DOT PUSH LPAREN list_element RPAREN','assign_tail',5,'p_assign_tail','Parser.py',2009),
  ('assign_tail -> assign_op assign_value','assign_tail',2,'p_assign_tail','Parser.py',2010),
  ('assign_value -> assign_type_cast','assign_value',1,'p_assign_value','Parser.py',2020),
  ('assign_value -> assign_expression','assign_value',1,'p_assign_value','Parser.py',2021),
  ('assign_value -> function_call','assign_value',1,'p_assign_value','Parser.py',2022),
  ('assign_expression -> assign_factor assign_factor_tail','assign_expression',2,'p_assign_expression','Parser.py',2028),
  ('assign_factor -> assign_var_call assign_postfix','assign_factor',2,'p_assign_factor','Parser.py',2038),
  ('assign_factor -> assign_factor1','assign_factor',1,'p_assign_factor','Parser.py',2039),
  ('assign_factor -> TILDE INT_LIT','assign_factor',2,'p_assign_factor','Parser.py',2040),
  ('assign_factor -> TILDE FLT_LIT','assign_factor',2,'p_assign_factor','Parser.py',2041),
  ('assign_factor -> LPAREN assign_factor RPAREN','assign_factor',3,'p_assign_factor','Parser.py',2042),
  ('assign_var_call -> IDENT assign_list_index','assign_var_call',2,'p_assign_var_call','Parser.py',2062),
  ('assign_postfix_op -> PLUS_PLUS','assign_postfix_op',1,'p_assign_postfix_op','Parser.py',2068),
  ('assign_postfix_op -> MINUS_MINUS','assign_postfix_op',1,'p_assign_postfix_op','Parser.py',2069),
  ('assign_postfix -> empty','assign_postfix',1,'p_assign_postfix','Parser.py',2074),
  ('assign_postfix -> assign_postfix_op','assign_postfix',1,'p_assign_postfix','Parser.py',2075),
  ('assign_list_index -> LBRACKET assign_index RBRACKET assign_list_index2','assign_list_index',4,'p_assign_list_index','Parser.py',2081),
  ('assign_list_index -> empty','assign_list_index',1,'p_assign_list_index','Parser.py',2082),
  ('assign_list_index2 -> LBRACKET assign_index RBRACKET','assign_list_index2',3,'p_assign_list_index2','Parser.py',2092),
  ('assign_list_index2 -> empty','assign_list_index2',1,'p_assign_list_index2','Parser.py',2093),
  ('assign_index -> INT_LIT','assign_index',1,'p_assign_int_lit','Parser.py',2102),
  ('assign_index -> IDENT','assign_index',1,'p_assign_index_ident','Parser.py',2107),
  ('assign_factor_tail -> PLUS assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2112),
  ('assign_factor_tail -> MINUS assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2113),
  ('assign_factor_tail -> MULTIPLY assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2114),
  ('assign_factor_tail -> DIVISION assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2115),
  ('assign_factor_tail -> MODULO assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2116),
  ('assign_factor_tail -> EXPONENT assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2117),
  ('assign_factor_tail -> GT assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2118),
  ('assign_factor_tail -> LT assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2119),
  ('assign_factor_tail -> EQ_EQ assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2120),
  ('assign_factor_tail -> GT_EQ assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2121),
  ('assign_factor_tail -> LT_EQ assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2122),
  ('assign_factor_tail -> NOT_EQ assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2123),
  ('assign_factor_tail -> AND assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2124),
  ('assign_factor_tail -> OR assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2125),
  ('assign_factor_tail -> empty','assign_factor_tail',1,'p_assign_factor_tail','Parser.py',2126),
  ('assign_factor1 -> INT_LIT','assign_factor1',1,'p_assign_factor1','Parser.py',2140),
  ('assign_factor1 -> FLT_LIT','assign_factor1',1,'p_assign_factor1','Parser.py',2141),
  ('assign_factor1 -> DAY','assign_factor1',1,'p_assign_factor1','Parser.py',2142),
  ('assign_factor1 -> NIGHT','assign_factor1',1,'p_assign_factor1','Parser.py',2143),
  ('assign_factor1 -> STR_LIT','assign_factor1',1,'p_assign_factor1','Parser.py',2144),
  ('assign_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','assign_type_cast',4,'p_assign_type_cast','Parser.py',2149),
  ('assign_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','assign_type_cast',4,'p_assign_type_cast','Parser.py',2150),
  ('assign_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','assign_type_cast',4,'p_assign_type_cast','Parser.py',2151),
  ('assign_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','assign_type_cast',4,'p_assign_type_cast','Parser.py',2152),
  ('assign_op -> compound_op','assign_op',1,'p_assign_op','Parser.py',2161),
  ('assign_op -> EQ','assign_op',1,'p_assign_op','Parser.py',2162),
  ('compound_op -> PLUS_EQ','compound_op',1,'p_compound_op','Parser.py',2175),
  ('compound_op -> MINUS_EQ','compound_op',1,'p_compound_op','Parser.py',2176),
  ('compound_op -> MUL_EQ','compound_op',1,'p_compound_op','Parser.py',2177),
  ('compound_op -> DIV_EQ','compound_op',1,'p_compound_op','Parser.py',2178),
  ('compound_op -> MOD_EQ','compound_op',1,'p_compound_op','Parser.py',2179),
  ('start -> INT_LIT','start',1,'p_start','Parser.py',2188),
  ('deleteCount -> empty','deleteCount',1,'p_deleteCount','Parser.py',2198),
  ('deleteCount -> INT_LIT','deleteCount',1,'p_deleteCount','Parser.py',2199),
  ('splice_items -> empty','splice_items',1,'p_splice_items','Parser.py',2212),
  ('splice_items -> list_element','splice_items',1,'p_splice_items','Parser.py',2213),
  ('var_call -> IDENT list_index','var_call',2,'p_var_call','Parser.py',2225),
  ('list_index -> LBRACKET index RBRACKET list_index2','list_index',4,'p_list_index','Parser.py',2236),
  ('list_index -> empty','list_index',1,'p_list_index','Parser.py',2237),
  ('list_index2 -> LBRACKET index RBRACKET','list_index2',3,'p_list_index2','Parser.py',2250),
  ('list_index2 -> empty','list_index2',1,'p_list_index2','Parser.py',2251),
  ('index -> INT_LIT','index',1,'p_index_int_lit','Parser.py',2264),
  ('index -> IDENT','index',1,'p_index_ident','Parser.py',2268),
  ('postfix -> empty','postfix',1,'p_postfix','Parser.py',2277),
  ('postfix -> postfix_op','postfix',1,'p_postfix','Parser.py',2278),
  ('value -> type_cast','value',1,'p_value','Parser.py',2289),
  ('value -> value_expression','value',1,'p_value','Parser.py',2290),
  ('value -> function_call','value',1,'p_value','Parser.py',2291),
  ('value_expression -> value_factor value_factor_tail','value_expression',2,'p_value_expression','Parser.py',2298),
  ('value_factor -> value_var_call value_postfix','value_factor',2,'p_value_factor','Parser.py',2308),
  ('value_factor -> value_factor1','value_factor',1,'p_value_factor','Parser.py',2309),
  ('value_factor -> TILDE INT_LIT','value_factor',2,'p_value_factor','Parser.py',2310),
  ('value_factor -> TILDE FLT_LIT','value_factor',2,'p_value_factor','Parser.py',2311),
  ('value_factor -> LPAREN value_factor RPAREN','value_factor',3,'p_value_factor','Parser.py',2312),
  ('value_var_call -> IDENT value_list_index','value_var_call',2,'p_value_var_call','Parser.py',2333),
  ('value_postfix_op -> PLUS_PLUS','value_postfix_op',1,'p_value_postfix_op','Parser.py',2339),
  ('value_postfix_op -> MINUS_MINUS','value_postfix_op',1,'p_value_postfix_op','Parser.py',2340),
  ('value_postfix -> empty','value_postfix',1,'p_value_postfix','Parser.py',2345),
  ('value_postfix -> value_postfix_op','value_postfix',1,'p_value_postfix','Parser.py',2346),
  ('value_list_index -> LBRACKET value_index RBRACKET value_list_index2','value_list_index',4,'p_value_list_index','Parser.py',2352),
  ('value_list_index -> empty','value_list_index',1,'p_value_list_index','Parser.py',2353),
  ('value_list_index2 -> LBRACKET value_index RBRACKET','value_list_index2',3,'p_value_list_index2','Parser.py',2363),
  ('value_list_index2 -> empty','value_list_index2',1,'p_value_list_index2','Parser.py',2364),
  ('value_index -> INT_LIT','value_index',1,'p_value_int_lit','Parser.py',2373),
  ('value_index -> IDENT','value_index',1,'p_value_index_ident','Parser.py',2378),
  ('value_factor_tail -> PLUS value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2383),
  ('value_factor_tail -> MINUS value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2384),
  ('value_factor_tail -> MULTIPLY value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2385),
  ('value_factor_tail -> DIVISION value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2386),
  ('value_factor_tail -> MODULO value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2387),
  ('value_factor_tail -> EXPONENT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2388),
  ('value_factor_tail -> GT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2389),
  ('value_factor_tail -> LT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2390),
  ('value_factor_tail -> EQ_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2391),
  ('value_factor_tail -> GT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2392),
  ('value_factor_tail -> LT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2393),
  ('value_factor_tail -> NOT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2394),
  ('value_factor_tail -> AND value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2395),
  ('value_factor_tail -> OR value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2396),
  ('value_factor_tail -> empty','value_factor_tail',1,'p_value_factor_tail','Parser.py',2397),
  ('value_factor1 -> INT_LIT','value_factor1',1,'p_value_factor1','Parser.py',2411),
  ('value_factor1 -> FLT_LIT','value_factor1',1,'p_value_factor1','Parser.py',2412),
  ('value_factor1 -> DAY','value_factor1',1,'p_value_factor1','Parser.py',2413),
  ('value_factor1 -> NIGHT','value_factor1',1,'p_value_factor1','Parser.py',2414),
  ('value_factor1 -> STR_LIT','value_factor1',1,'p_value_factor1','Parser.py',2415),
  ('type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',2426),
  ('type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',2427),
  ('type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',2428),
  ('type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',2429),
  ('typecast_value -> typecast_expression','typecast_value',1,'p_typecast_value','Parser.py',2441),
  ('typecast_value -> FUNCTION_NAME LPAREN RPAREN','typecast_value',3,'p_typecast_value','Parser.py',2442),
  ('typecast_value -> input_statement','typecast_value',1,'p_typecast_value','Parser.py',2443),
  ('typecast_expression -> typecast_factor typecast_factor_tail','typecast_expression',2,'p_typecast_expression','Parser.py',2453),
  ('typecast_factor -> var_call postfix','typecast_factor',2,'p_typecast_factor','Parser.py',2463),
  ('typecast_factor -> typecast_factor1','typecast_factor',1,'p_typecast_factor','Parser.py',2464),
  ('typecast_factor -> TILDE INT_LIT','typecast_factor',2,'p_typecast_factor','Parser.py',2465),
  ('typecast_factor -> TILDE FLT_LIT','typecast_factor',2,'p_typecast_factor','Parser.py',2466),
  ('typecast_factor -> LPAREN typecast_factor RPAREN','typecast_factor',3,'p_typecast_factor','Parser.py',2467),
  ('typecast_factor_tail -> PLUS typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2488),
  ('typecast_factor_tail -> MINUS typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2489),
  ('typecast_factor_tail -> MULTIPLY typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2490),
  ('typecast_factor_tail -> DIVISION typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2491),
  ('typecast_factor_tail -> MODULO typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2492),
  ('typecast_factor_tail -> EXPONENT typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2493),
  ('typecast_factor_tail -> GT typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2494),
  ('typecast_factor_tail -> LT typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2495),
  ('typecast_factor_tail -> EQ_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2496),
  ('typecast_factor_tail -> GT_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2497),
  ('typecast_factor_tail -> LT_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2498),
  ('typecast_factor_tail -> NOT_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2499),
  ('typecast_factor_tail -> AND typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2500),
  ('typecast_factor_tail -> OR typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2501),
  ('typecast_factor_tail -> empty','typecast_factor_tail',1,'p_typecast_factor_tail','Parser.py',2502),
  ('typecast_factor1 -> INT_LIT','typecast_factor1',1,'p_typecast_factor1','Parser.py',2516),
  ('typecast_factor1 -> FLT_LIT','typecast_factor1',1,'p_typecast_factor1','Parser.py',2517),
  ('typecast_factor1 -> DAY','typecast_factor1',1,'p_typecast_factor1','Parser.py',2518),
  ('typecast_factor1 -> NIGHT','typecast_factor1',1,'p_typecast_factor1','Parser.py',2519),
  ('typecast_factor1 -> STR_LIT','typecast_factor1',1,'p_typecast_factor1','Parser.py',2520),
  ('input_statement -> INPUT LPAREN RPAREN','input_statement',3,'p_input_statement','Parser.py',2528),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',2533),
]
