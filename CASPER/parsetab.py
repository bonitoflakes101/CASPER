
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEXPONENTrightNOTMINUSleftMULTIPLYDIVISIONMODULOleftPLUSMINUSleftPLUS_PLUSMINUS_MINUSleftEQ_EQNOT_EQLTGTLT_EQGT_EQleftANDleftORrightEQPLUS_EQMINUS_EQMUL_EQDIV_EQMOD_EQAND BIRTH BLN BLN_LIT CARRIAGE_RETURN CHECK CHR CHR_LIT COLON COMMA COMMENT CONVERT_TO_BLN CONVERT_TO_FLT CONVERT_TO_INT CONVERT_TO_STR DAY DISPLAY DIVISION DIV_EQ DOT DOUBLE_LT DOUBLE_SLASH EOF EQ EQ_EQ EXPONENT FLT FLT_LIT FOR FUNCTION FUNCTION_BLN FUNCTION_CHR FUNCTION_FLT FUNCTION_INT FUNCTION_LIST_BLN FUNCTION_LIST_BLN2D FUNCTION_LIST_CHR FUNCTION_LIST_CHR2D FUNCTION_LIST_FLT FUNCTION_LIST_FLT2D FUNCTION_LIST_INT FUNCTION_LIST_INT2D FUNCTION_LIST_STR FUNCTION_LIST_STR2D FUNCTION_NAME FUNCTION_STR GHOST GT GT_EQ IDENT ILLEGAL IN INPUT INT INT_LIT LBRACE LBRACKET LIST_BLN LIST_BLN2D LIST_CHR LIST_CHR2D LIST_FLT LIST_FLT2D LIST_INT LIST_INT2D LIST_STR LIST_STR2D LPAREN LT LT_EQ MAIN_CASPER MEASURE MINUS MINUS_EQ MINUS_MINUS MODULO MOD_EQ MULTIPLY MUL_EQ NEWLINE NIGHT NOT NOT_EQ OR OTHERWISE OTHERWISE_CHECK PLUS PLUS_EQ PLUS_PLUS POW PUSH RBRACE RBRACKET REPEAT REVIVE RPAREN SEMICOLON SHIFT SKIP SPLICE STOP STR STR_LIT SWAP TILDE TYPE UNTILprogram : BIRTH unli_newline global_dec maybe_newline function_statements maybe_newline main_function unli_newline GHOST\n    maybe_newline : empty\n                  | NEWLINE maybe_newline\n    \n    unli_newline : NEWLINE\n                 | NEWLINE unli_newline\n    main_function : MAIN_CASPER LPAREN RPAREN maybe_newline LBRACE maybe_newline statements maybe_newline RBRACE\n    global_dec : global_statement global_tail     \n               | empty                            \n    \n        global_tail : global_dec\n    \n        global_statement : var_statement global_statement_tail\n    \n        var_statement : data_type IDENT list_dec\n    \n    list_dec : empty               \n             | LBRACKET RBRACKET _2d_list \n    \n    _2d_list : empty            \n             | LBRACKET RBRACKET \n    \n    global_statement_tail : empty                        \n                          | COMMA IDENT global_statement_tail \n                          | EQ global_value global_statement_tail2 \n    \n    global_statement_tail2 : COMMA IDENT global_statement_tail \n                           | empty                           \n    \n    global_value : expression   \n                 | list_value   \n    \n     list_value : LBRACKET list_element RBRACKET\n    \n    list_element : literal element_tail  \n    \n    element_tail : COMMA list_element  \n                 | empty              \n    \n    data_type : INT   \n              | FLT   \n              | BLN  \n              | CHR  \n              | STR  \n    \n    expression : factor factor_tail\n    \n    factor : var_call postfix           \n           | literal1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN expression RPAREN    \n    \n    factor_tail : PLUS factor factor_tail\n                | MINUS factor factor_tail\n                | MULTIPLY factor factor_tail\n                | DIVISION factor factor_tail\n                | MODULO factor factor_tail\n                | EXPONENT factor factor_tail\n                | GT factor factor_tail\n                | LT factor factor_tail\n                | EQ_EQ factor factor_tail\n                | GT_EQ factor factor_tail\n                | LT_EQ factor factor_tail\n                | NOT_EQ factor factor_tail\n                | AND factor factor_tail\n                | OR factor factor_tail\n                | empty\n    \n    literal : literal1\n            | literal2\n    \n    literal1 : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    literal2 : CHR_LIT\n    \n    function_statements : ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements revive RBRACE function_statements_tail  \n                        | empty                                                          \n    \n    function_statements_tail : function_statements \n                             | empty               \n    \n    ret_type : FUNCTION           \n             | function_dtype    \n    \n    function_dtype : FUNCTION_INT       \n                   | FUNCTION_FLT      \n                   | FUNCTION_CHR       \n                   | FUNCTION_BLN       \n                   | FUNCTION_STR       \n                   | FUNCTION_LIST_INT \n                   | FUNCTION_LIST_FLT  \n                   | FUNCTION_LIST_CHR \n                   | FUNCTION_LIST_STR  \n                   | FUNCTION_LIST_BLN  \n    \n    parameters : data_type IDENT parameters_tail  \n               | empty                            \n    \n    parameters_tail : COMMA data_type IDENT parameters_tail \n                    | empty                                 \n    \n    revive : REVIVE value  \n           | empty        \n    \n    statements : local_dec statements_tail  \n    \n    statements_tail : statements_list  \n    \n    statements_list : conditional_statement statements_list2 \n                    | switch_statement statements_list2       \n                    | loop_statement statements_list2        \n                    | function_call statements_list2          \n                    | assignment_statement statements_list2    \n                    | output_statement statements_list2       \n                    | empty                                   \n    \n    statements_list2 : statements \n    \n    local_dec : var_statement local_dec_tail  \n              | empty                      \n    \n    local_dec_tail : empty                          \n                   | COMMA IDENT local_dec_tail     \n                   | EQ local_value local_dec_tail2  \n    \n    local_dec_tail2 : COMMA IDENT local_dec_tail  \n                    | empty                      \n    \n    local_value : value      \n                | list_value  \n    \n    conditional_statement : CHECK LPAREN expression RPAREN LBRACE statements RBRACE conditional_tail OTHERWISE LBRACE statements RBRACE  \n    \n    conditional_tail : OTHERWISE_CHECK LPAREN expression RPAREN LBRACE statements RBRACE conditional_tail \n                     | empty                                            \n    \n    switch_statement : SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE LBRACE statements RBRACE RBRACE \n    \n    switch_condition : SHIFT value COLON statements switchcond_tail  \n    \n    switchcond_tail : switch_condition  \n                    | empty          \n    \n    loop_statement : for_loop    \n                   | until_loop  \n                   | repeat_until\n    \n    for_loop : FOR LPAREN control_variable SEMICOLON expression SEMICOLON update RPAREN LBRACE statements RBRACE \n    \n    until_loop : UNTIL LPAREN expression RPAREN LBRACE statements RBRACE  \n    \n    repeat_until : REPEAT LBRACE statements RBRACE UNTIL LPAREN expression RPAREN \n    \n    control_variable : INT IDENT EQ control_var_tail\n    \n    control_var_tail : INT_LIT   \n                     | var_call \n    \n    update : var_call update_tail  \n    \n    update_tail : postfix_op         \n                | compound_op value   \n    \n    postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    function_call : FUNCTION_NAME LPAREN arguments RPAREN  \n                  | input_statement                      \n    \n    arguments : empty                  \n              | arg_value arg_tail    \n    \n    arg_tail : COMMA arg_value arg_tail   \n             | empty                     \n    \n    arg_value : literal   \n              | var_call \n    \n    output_statement : DISPLAY value next_val   \n    \n    next_val : COMMA value next_val  \n             | empty                \n    \n    assignment_statement : IDENT assign_tail  \n    \n    assign_tail : DOT SPLICE LPAREN start COMMA deleteCount COMMA splice_items RPAREN  \n                | DOT PUSH LPAREN list_element RPAREN                                  \n                | assign_op value                                                     \n    \n    assign_op : compound_op  \n              | EQ           \n    \n    compound_op : PLUS_EQ \n                | MINUS_EQ  \n                | MUL_EQ   \n                | DIV_EQ    \n                | MOD_EQ   \n    \n    start : INT_LIT \n    \n    deleteCount : empty     \n                | INT_LIT  \n    \n    splice_items : empty          \n                 | list_element  \n    \n    var_call : IDENT list_index  \n    \n    list_index : LBRACKET index RBRACKET list_index2  \n               | empty                                \n    \n    list_index2 : LBRACKET index RBRACKET \n                | empty                   \n    \n    index : INT_LIT    \n          | IDENT      \n    \n    postfix : empty        \n            | postfix_op  \n    \n    value : type_cast     \n          | expression   \n          | function_call \n    \n    type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN \n              | CONVERT_TO_FLT LPAREN typecast_value RPAREN  \n              | CONVERT_TO_BLN LPAREN typecast_value RPAREN  \n              | CONVERT_TO_STR LPAREN typecast_value RPAREN \n    \n    typecast_value : expression                           \n                   | FUNCTION_NAME LPAREN RPAREN          \n                   | input_statement                     \n    \n    input_statement : INPUT LPAREN RPAREN  \n    empty :'
    
_lr_action_items = {'BIRTH':([0,],[2,]),'$end':([1,152,],[0,-1,]),'NEWLINE':([2,3,4,5,6,7,8,15,16,17,18,19,20,21,22,25,26,28,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,153,157,158,165,167,168,169,171,172,176,177,178,179,180,181,182,183,184,188,189,190,192,198,199,203,204,206,207,208,213,214,215,216,217,218,219,222,233,238,239,240,241,244,245,246,255,261,263,268,269,270,272,273,285,289,294,295,297,298,299,306,311,317,333,345,361,365,366,367,],[4,-170,4,18,-170,-8,-170,-5,-170,-2,18,-7,-9,-10,-16,-170,18,-62,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,4,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,18,-151,-154,18,-170,-170,-94,-153,-170,-83,-84,-170,-170,-170,-170,-170,-170,-91,-109,-110,-111,-124,-93,-95,18,-170,-159,-160,-161,-85,-92,-86,-87,-88,-89,-90,-134,-170,-170,-170,-100,-101,-61,-63,-62,-137,-131,-133,-169,-96,-97,-99,-6,-123,-170,-170,-162,-163,-164,-165,-132,-98,-136,-113,-114,-135,-105,-112,-102,]),'FUNCTION':([3,4,5,6,7,8,15,16,17,18,19,20,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,171,204,],[-170,-4,-170,-170,-8,-170,-5,29,-2,-170,-7,-9,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-153,29,]),'FUNCTION_INT':([3,4,5,6,7,8,15,16,17,18,19,20,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,171,204,],[-170,-4,-170,-170,-8,-170,-5,31,-2,-170,-7,-9,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-153,31,]),'FUNCTION_FLT':([3,4,5,6,7,8,15,16,17,18,19,20,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,171,204,],[-170,-4,-170,-170,-8,-170,-5,32,-2,-170,-7,-9,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-153,32,]),'FUNCTION_CHR':([3,4,5,6,7,8,15,16,17,18,19,20,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,171,204,],[-170,-4,-170,-170,-8,-170,-5,33,-2,-170,-7,-9,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-153,33,]),'FUNCTION_BLN':([3,4,5,6,7,8,15,16,17,18,19,20,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,171,204,],[-170,-4,-170,-170,-8,-170,-5,34,-2,-170,-7,-9,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-153,34,]),'FUNCTION_STR':([3,4,5,6,7,8,15,16,17,18,19,20,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,171,204,],[-170,-4,-170,-170,-8,-170,-5,35,-2,-170,-7,-9,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-153,35,]),'FUNCTION_LIST_INT':([3,4,5,6,7,8,15,16,17,18,19,20,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,171,204,],[-170,-4,-170,-170,-8,-170,-5,36,-2,-170,-7,-9,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-153,36,]),'FUNCTION_LIST_FLT':([3,4,5,6,7,8,15,16,17,18,19,20,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,171,204,],[-170,-4,-170,-170,-8,-170,-5,37,-2,-170,-7,-9,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-153,37,]),'FUNCTION_LIST_CHR':([3,4,5,6,7,8,15,16,17,18,19,20,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,171,204,],[-170,-4,-170,-170,-8,-170,-5,38,-2,-170,-7,-9,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-153,38,]),'FUNCTION_LIST_STR':([3,4,5,6,7,8,15,16,17,18,19,20,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,171,204,],[-170,-4,-170,-170,-8,-170,-5,39,-2,-170,-7,-9,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-153,39,]),'FUNCTION_LIST_BLN':([3,4,5,6,7,8,15,16,17,18,19,20,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,171,204,],[-170,-4,-170,-170,-8,-170,-5,40,-2,-170,-7,-9,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-153,40,]),'MAIN_CASPER':([3,4,5,6,7,8,15,16,17,18,19,20,21,22,25,26,28,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,61,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,171,204,244,245,246,],[-170,-4,-170,-170,-8,-170,-5,-170,-2,-170,-7,-9,-10,-16,-170,-170,-62,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,101,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-153,-170,-61,-63,-62,]),'INT':([3,4,6,8,15,17,18,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,162,165,171,172,178,179,180,181,182,183,188,189,190,192,206,207,208,222,233,234,236,255,261,263,268,285,289,295,297,298,299,300,306,309,317,333,338,339,345,353,355,361,365,366,367,368,],[10,-4,10,-170,-5,-2,-170,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,10,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,10,10,-170,-153,10,10,10,10,10,10,10,-109,-110,-111,-124,-159,-160,-161,-134,-170,265,10,-137,-131,-133,-169,-123,-170,-162,-163,-164,-165,10,-132,10,-136,-113,10,10,-114,10,10,-135,-105,-112,-102,10,]),'FLT':([3,4,6,8,15,17,18,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,162,165,171,172,178,179,180,181,182,183,188,189,190,192,206,207,208,222,233,236,255,261,263,268,285,289,295,297,298,299,300,306,309,317,333,338,339,345,353,355,361,365,366,367,368,],[11,-4,11,-170,-5,-2,-170,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,11,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,11,11,-170,-153,11,11,11,11,11,11,11,-109,-110,-111,-124,-159,-160,-161,-134,-170,11,-137,-131,-133,-169,-123,-170,-162,-163,-164,-165,11,-132,11,-136,-113,11,11,-114,11,11,-135,-105,-112,-102,11,]),'BLN':([3,4,6,8,15,17,18,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,162,165,171,172,178,179,180,181,182,183,188,189,190,192,206,207,208,222,233,236,255,261,263,268,285,289,295,297,298,299,300,306,309,317,333,338,339,345,353,355,361,365,366,367,368,],[12,-4,12,-170,-5,-2,-170,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,12,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,12,12,-170,-153,12,12,12,12,12,12,12,-109,-110,-111,-124,-159,-160,-161,-134,-170,12,-137,-131,-133,-169,-123,-170,-162,-163,-164,-165,12,-132,12,-136,-113,12,12,-114,12,12,-135,-105,-112,-102,12,]),'CHR':([3,4,6,8,15,17,18,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,162,165,171,172,178,179,180,181,182,183,188,189,190,192,206,207,208,222,233,236,255,261,263,268,285,289,295,297,298,299,300,306,309,317,333,338,339,345,353,355,361,365,366,367,368,],[13,-4,13,-170,-5,-2,-170,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,13,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,13,13,-170,-153,13,13,13,13,13,13,13,-109,-110,-111,-124,-159,-160,-161,-134,-170,13,-137,-131,-133,-169,-123,-170,-162,-163,-164,-165,13,-132,13,-136,-113,13,13,-114,13,13,-135,-105,-112,-102,13,]),'STR':([3,4,6,8,15,17,18,21,22,25,41,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,63,64,66,67,82,88,89,90,91,92,93,94,96,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,162,165,171,172,178,179,180,181,182,183,188,189,190,192,206,207,208,222,233,236,255,261,263,268,285,289,295,297,298,299,300,306,309,317,333,338,339,345,353,355,361,365,366,367,368,],[14,-4,14,-170,-5,-2,-170,-10,-16,-170,-3,-170,-170,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-17,-18,-20,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,14,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,14,14,-170,-153,14,14,14,14,14,14,14,-109,-110,-111,-124,-159,-160,-161,-134,-170,14,-137,-131,-133,-169,-123,-170,-162,-163,-164,-165,14,-132,14,-136,-113,14,14,-114,14,14,-135,-105,-112,-102,14,]),'GHOST':([4,15,129,],[-4,-5,152,]),'COMMA':([8,25,42,43,44,45,46,48,49,51,52,54,55,56,57,58,59,67,82,84,85,86,87,88,89,90,91,92,93,94,96,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,155,157,158,168,171,192,202,206,207,208,233,238,239,240,241,258,259,260,268,285,289,294,295,297,298,299,302,303,305,316,328,329,330,],[23,-170,23,65,-21,-22,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-32,-52,120,-53,-54,-60,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,23,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,162,-151,-154,200,-153,-124,162,-159,-160,-161,262,200,271,-100,-101,287,-129,-130,-169,-123,262,200,-162,-163,-164,-165,316,-145,287,-170,340,-146,-147,]),'EQ':([8,25,42,58,59,99,103,127,128,151,168,187,238,291,294,],[24,-170,24,-11,-12,-170,24,-13,-14,-15,201,226,201,308,201,]),'IDENT':([9,10,11,12,13,14,17,18,23,24,25,41,46,48,49,51,52,53,54,55,56,57,58,59,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,88,89,90,91,92,93,94,96,97,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,156,157,158,160,165,167,168,169,170,171,172,174,178,179,180,181,182,183,188,189,190,192,193,198,199,200,201,206,207,208,220,221,222,224,225,226,227,228,229,230,231,232,233,235,236,238,239,240,241,247,248,249,250,255,261,262,263,265,268,269,270,271,272,285,287,289,290,294,295,297,298,299,300,306,308,309,311,315,317,319,324,333,338,339,344,345,347,353,355,361,365,366,367,368,],[25,-27,-28,-29,-30,-31,-2,-170,42,54,-170,-3,-170,-170,-34,-55,-56,54,-170,-57,-58,-59,-11,-12,103,-32,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-52,-33,-157,-158,-121,-122,-35,-36,-150,125,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,155,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,125,-151,-154,-170,-170,187,-170,-94,202,-153,-170,54,-170,-170,-170,-170,-170,-170,-109,-110,-111,-124,54,-93,-95,238,54,-159,-160,-161,54,252,-134,54,-138,-139,-140,-141,-142,-143,-144,54,-170,54,-170,-170,-170,-100,-101,54,54,54,54,-137,-131,54,-133,291,-169,-96,-97,294,-99,-123,54,-170,54,-170,-162,-163,-164,-165,-170,-132,54,-170,-98,54,-136,54,54,-113,-170,-170,54,-114,54,-170,-170,-135,-105,-112,-102,-170,]),'LBRACE':([17,18,41,153,154,159,196,281,282,292,326,341,346,364,],[-2,-170,-3,-170,160,165,236,300,301,309,338,353,355,368,]),'RBRACE':([17,18,25,41,46,48,49,51,52,54,55,56,57,58,59,67,82,88,89,90,91,92,93,94,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,165,166,167,168,169,171,172,173,175,176,177,178,179,180,181,182,183,184,188,189,190,192,198,199,203,205,206,207,208,213,214,215,216,217,218,219,222,233,236,238,239,240,241,243,255,261,263,267,268,269,270,272,285,289,294,295,297,298,299,300,306,309,311,313,317,323,333,338,345,348,353,355,357,361,362,363,365,366,367,368,369,],[-2,-170,-170,-3,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-170,-170,-170,-170,-170,-94,-153,-170,204,-82,-83,-84,-170,-170,-170,-170,-170,-170,-91,-109,-110,-111,-124,-93,-95,-170,-81,-159,-160,-161,-85,-92,-86,-87,-88,-89,-90,-134,-170,-170,-170,-170,-100,-101,273,-137,-131,-133,293,-169,-96,-97,-99,-123,-170,-170,-162,-163,-164,-165,-170,-132,-170,-98,325,-136,333,-113,-170,-114,357,-170,-170,365,-135,366,367,-105,-112,-102,-170,370,]),'CHECK':([17,18,25,41,46,48,49,51,52,54,55,56,57,58,59,67,82,88,89,90,91,92,93,94,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,165,167,168,169,171,172,178,179,180,181,182,183,188,189,190,192,198,199,206,207,208,222,233,236,238,239,240,241,255,261,263,268,269,270,272,285,289,294,295,297,298,299,300,306,309,311,317,333,338,339,345,353,355,361,365,366,367,368,],[-2,-170,-170,-3,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-170,-170,185,-170,-94,-153,-170,-170,-170,-170,-170,-170,-170,-109,-110,-111,-124,-93,-95,-159,-160,-161,-134,-170,-170,-170,-170,-100,-101,-137,-131,-133,-169,-96,-97,-99,-123,-170,-170,-162,-163,-164,-165,-170,-132,-170,-98,-136,-113,-170,-170,-114,-170,-170,-135,-105,-112,-102,-170,]),'SWAP':([17,18,25,41,46,48,49,51,52,54,55,56,57,58,59,67,82,88,89,90,91,92,93,94,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,165,167,168,169,171,172,178,179,180,181,182,183,188,189,190,192,198,199,206,207,208,222,233,236,238,239,240,241,255,261,263,268,269,270,272,285,289,294,295,297,298,299,300,306,309,311,317,333,338,339,345,353,355,361,365,366,367,368,],[-2,-170,-170,-3,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-170,-170,186,-170,-94,-153,-170,-170,-170,-170,-170,-170,-170,-109,-110,-111,-124,-93,-95,-159,-160,-161,-134,-170,-170,-170,-170,-100,-101,-137,-131,-133,-169,-96,-97,-99,-123,-170,-170,-162,-163,-164,-165,-170,-132,-170,-98,-136,-113,-170,-170,-114,-170,-170,-135,-105,-112,-102,-170,]),'FUNCTION_NAME':([17,18,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,46,48,49,51,52,54,55,56,57,58,59,67,82,88,89,90,91,92,93,94,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,165,167,168,169,171,172,174,178,179,180,181,182,183,188,189,190,192,193,198,199,201,206,207,208,222,224,225,226,227,228,229,230,231,233,236,238,239,240,241,247,248,249,250,255,261,262,263,268,269,270,272,285,289,294,295,297,298,299,300,306,309,311,315,317,333,338,339,344,345,353,355,361,365,366,367,368,],[-2,-170,-170,62,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-3,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-170,-170,191,-170,-94,-153,-170,191,-170,-170,-170,-170,-170,-170,-109,-110,-111,-124,191,-93,-95,191,-159,-160,-161,-134,191,-138,-139,-140,-141,-142,-143,-144,-170,-170,-170,-170,-100,-101,276,276,276,276,-137,-131,191,-133,-169,-96,-97,-99,-123,-170,-170,-162,-163,-164,-165,-170,-132,-170,-98,191,-136,-113,-170,-170,191,-114,-170,-170,-135,-105,-112,-102,-170,]),'DISPLAY':([17,18,25,41,46,48,49,51,52,54,55,56,57,58,59,67,82,88,89,90,91,92,93,94,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,165,167,168,169,171,172,178,179,180,181,182,183,188,189,190,192,198,199,206,207,208,222,233,236,238,239,240,241,255,261,263,268,269,270,272,285,289,294,295,297,298,299,300,306,309,311,317,333,338,339,345,353,355,361,365,366,367,368,],[-2,-170,-170,-3,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-170,-170,193,-170,-94,-153,-170,-170,-170,-170,-170,-170,-170,-109,-110,-111,-124,-93,-95,-159,-160,-161,-134,-170,-170,-170,-170,-100,-101,-137,-131,-133,-169,-96,-97,-99,-123,-170,-170,-162,-163,-164,-165,-170,-132,-170,-98,-136,-113,-170,-170,-114,-170,-170,-135,-105,-112,-102,-170,]),'FOR':([17,18,25,41,46,48,49,51,52,54,55,56,57,58,59,67,82,88,89,90,91,92,93,94,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,165,167,168,169,171,172,178,179,180,181,182,183,188,189,190,192,198,199,206,207,208,222,233,236,238,239,240,241,255,261,263,268,269,270,272,285,289,294,295,297,298,299,300,306,309,311,317,333,338,339,345,353,355,361,365,366,367,368,],[-2,-170,-170,-3,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-170,-170,194,-170,-94,-153,-170,-170,-170,-170,-170,-170,-170,-109,-110,-111,-124,-93,-95,-159,-160,-161,-134,-170,-170,-170,-170,-100,-101,-137,-131,-133,-169,-96,-97,-99,-123,-170,-170,-162,-163,-164,-165,-170,-132,-170,-98,-136,-113,-170,-170,-114,-170,-170,-135,-105,-112,-102,-170,]),'UNTIL':([17,18,25,41,46,48,49,51,52,54,55,56,57,58,59,67,82,88,89,90,91,92,93,94,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,165,167,168,169,171,172,178,179,180,181,182,183,188,189,190,192,198,199,206,207,208,222,233,236,238,239,240,241,255,261,263,268,269,270,272,285,289,293,294,295,297,298,299,300,306,309,311,317,333,338,339,345,353,355,361,365,366,367,368,],[-2,-170,-170,-3,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-170,-170,195,-170,-94,-153,-170,-170,-170,-170,-170,-170,-170,-109,-110,-111,-124,-93,-95,-159,-160,-161,-134,-170,-170,-170,-170,-100,-101,-137,-131,-133,-169,-96,-97,-99,-123,-170,310,-170,-162,-163,-164,-165,-170,-132,-170,-98,-136,-113,-170,-170,-114,-170,-170,-135,-105,-112,-102,-170,]),'REPEAT':([17,18,25,41,46,48,49,51,52,54,55,56,57,58,59,67,82,88,89,90,91,92,93,94,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,165,167,168,169,171,172,178,179,180,181,182,183,188,189,190,192,198,199,206,207,208,222,233,236,238,239,240,241,255,261,263,268,269,270,272,285,289,294,295,297,298,299,300,306,309,311,317,333,338,339,345,353,355,361,365,366,367,368,],[-2,-170,-170,-3,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-170,-170,196,-170,-94,-153,-170,-170,-170,-170,-170,-170,-170,-109,-110,-111,-124,-93,-95,-159,-160,-161,-134,-170,-170,-170,-170,-100,-101,-137,-131,-133,-169,-96,-97,-99,-123,-170,-170,-162,-163,-164,-165,-170,-132,-170,-98,-136,-113,-170,-170,-114,-170,-170,-135,-105,-112,-102,-170,]),'INPUT':([17,18,25,41,46,48,49,51,52,54,55,56,57,58,59,67,82,88,89,90,91,92,93,94,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,165,167,168,169,171,172,174,178,179,180,181,182,183,188,189,190,192,193,198,199,201,206,207,208,222,224,225,226,227,228,229,230,231,233,236,238,239,240,241,247,248,249,250,255,261,262,263,268,269,270,272,285,289,294,295,297,298,299,300,306,309,311,315,317,333,338,339,344,345,353,355,361,365,366,367,368,],[-2,-170,-170,-3,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-170,-170,197,-170,-94,-153,-170,197,-170,-170,-170,-170,-170,-170,-109,-110,-111,-124,197,-93,-95,197,-159,-160,-161,-134,197,-138,-139,-140,-141,-142,-143,-144,-170,-170,-170,-170,-100,-101,197,197,197,197,-137,-131,197,-133,-169,-96,-97,-99,-123,-170,-170,-162,-163,-164,-165,-170,-132,-170,-98,197,-136,-113,-170,-170,197,-114,-170,-170,-135,-105,-112,-102,-170,]),'LBRACKET':([24,25,54,99,150,201,],[47,60,97,126,156,47,]),'TILDE':([24,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,174,193,201,220,224,225,226,227,228,229,230,231,235,247,248,249,250,262,290,315,324,344,347,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-138,-139,-140,-141,-142,-143,-144,50,50,50,50,50,50,50,50,50,50,50,]),'LPAREN':([24,53,62,68,69,70,71,72,73,74,75,76,77,78,79,80,81,101,174,185,186,191,193,194,195,197,201,209,210,211,212,220,224,225,226,227,228,229,230,231,235,247,248,249,250,253,254,262,276,290,310,315,324,336,344,347,],[53,53,102,53,53,53,53,53,53,53,53,53,53,53,53,53,53,130,53,220,221,232,53,234,235,237,53,247,248,249,250,53,53,-138,-139,-140,-141,-142,-143,-144,53,53,53,53,53,283,284,53,296,53,324,53,53,347,53,53,]),'INT_LIT':([24,47,50,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,97,120,156,174,193,201,220,224,225,226,227,228,229,230,231,232,235,247,248,249,250,262,283,284,287,290,308,315,316,324,340,344,347,],[51,51,93,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,124,51,124,51,51,51,51,51,-138,-139,-140,-141,-142,-143,-144,51,51,51,51,51,51,51,303,51,51,51,321,51,330,51,51,51,51,]),'FLT_LIT':([24,47,50,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,120,174,193,201,220,224,225,226,227,228,229,230,231,232,235,247,248,249,250,262,284,287,290,315,324,340,344,347,],[52,52,94,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-138,-139,-140,-141,-142,-143,-144,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'DAY':([24,47,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,120,174,193,201,220,224,225,226,227,228,229,230,231,232,235,247,248,249,250,262,284,287,290,315,324,340,344,347,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-138,-139,-140,-141,-142,-143,-144,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'NIGHT':([24,47,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,120,174,193,201,220,224,225,226,227,228,229,230,231,232,235,247,248,249,250,262,284,287,290,315,324,340,344,347,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-138,-139,-140,-141,-142,-143,-144,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'STR_LIT':([24,47,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,120,174,193,201,220,224,225,226,227,228,229,230,231,232,235,247,248,249,250,262,284,287,290,315,324,340,344,347,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-138,-139,-140,-141,-142,-143,-144,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'REVIVE':([25,46,48,49,51,52,54,55,56,57,58,59,67,82,88,89,90,91,92,93,94,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,160,166,167,168,169,171,176,177,178,179,180,181,182,183,184,188,189,190,192,198,199,206,207,208,213,214,215,216,217,218,219,222,233,238,239,240,241,255,261,263,268,269,270,272,285,289,294,295,297,298,299,306,311,317,333,345,361,365,366,367,],[-170,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-170,174,-170,-170,-94,-153,-83,-84,-170,-170,-170,-170,-170,-170,-91,-109,-110,-111,-124,-93,-95,-159,-160,-161,-85,-92,-86,-87,-88,-89,-90,-134,-170,-170,-170,-100,-101,-137,-131,-133,-169,-96,-97,-99,-123,-170,-170,-162,-163,-164,-165,-132,-98,-136,-113,-114,-135,-105,-112,-102,]),'SHIFT':([25,46,48,49,51,52,54,55,56,57,58,59,67,82,88,89,90,91,92,93,94,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,167,168,169,171,176,177,178,179,180,181,182,183,184,188,189,190,192,198,199,206,207,208,213,214,215,216,217,218,219,222,233,238,239,240,241,255,261,263,268,269,270,272,285,289,294,295,297,298,299,301,306,311,317,333,339,345,349,361,365,366,367,],[-170,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-170,-170,-94,-153,-83,-84,-170,-170,-170,-170,-170,-170,-91,-109,-110,-111,-124,-93,-95,-159,-160,-161,-85,-92,-86,-87,-88,-89,-90,-134,-170,-170,-170,-100,-101,-137,-131,-133,-169,-96,-97,-99,-123,-170,-170,-162,-163,-164,-165,315,-132,-98,-136,-113,-170,-114,315,-135,-105,-112,-102,]),'OTHERWISE':([25,46,48,49,51,52,54,55,56,57,58,59,67,82,88,89,90,91,92,93,94,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,157,158,167,168,169,171,176,177,178,179,180,181,182,183,184,188,189,190,192,198,199,206,207,208,213,214,215,216,217,218,219,222,233,238,239,240,241,255,261,263,268,269,270,272,285,289,294,295,297,298,299,306,311,314,317,325,333,335,337,339,345,349,358,359,360,361,365,366,367,370,371,],[-170,-170,-170,-34,-55,-56,-170,-57,-58,-59,-11,-12,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-23,-37,-13,-14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-15,-151,-154,-170,-170,-94,-153,-83,-84,-170,-170,-170,-170,-170,-170,-91,-109,-110,-111,-124,-93,-95,-159,-160,-161,-85,-92,-86,-87,-88,-89,-90,-134,-170,-170,-170,-100,-101,-137,-131,-133,-169,-96,-97,-99,-123,-170,-170,-162,-163,-164,-165,-132,-98,326,-136,-170,-113,346,-104,-170,-114,-170,-106,-107,-108,-135,-105,-112,-102,-170,-103,]),'PLUS':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[68,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-37,-170,-151,-154,-153,]),'MINUS':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[69,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-37,-170,-151,-154,-153,]),'MULTIPLY':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[70,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-37,-170,-151,-154,-153,]),'DIVISION':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[71,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-37,-170,-151,-154,-153,]),'MODULO':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[72,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-37,-170,-151,-154,-153,]),'EXPONENT':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[73,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-37,-170,-151,-154,-153,]),'GT':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[74,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-37,-170,-151,-154,-153,]),'LT':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[75,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-37,-170,-151,-154,-153,]),'EQ_EQ':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[76,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-37,-170,-151,-154,-153,]),'GT_EQ':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[77,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-37,-170,-151,-154,-153,]),'LT_EQ':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[78,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-37,-170,-151,-154,-153,]),'NOT_EQ':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[79,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-37,-170,-151,-154,-153,]),'AND':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[80,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-37,-170,-151,-154,-153,]),'OR':([46,48,49,51,52,54,55,56,57,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,150,157,158,171,],[81,-170,-34,-55,-56,-170,-57,-58,-59,-33,-157,-158,-121,-122,-35,-36,-150,-152,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-37,-170,-151,-154,-153,]),'RPAREN':([46,48,49,51,52,54,55,56,57,67,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,122,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,157,158,161,163,171,192,202,206,207,208,232,237,242,251,252,256,257,258,259,260,266,268,274,275,277,278,279,280,285,286,288,295,296,297,298,299,304,305,312,318,331,334,340,342,343,350,351,352,354,356,],[-170,-170,-34,-55,-56,-170,-57,-58,-59,-32,-52,-170,-53,-54,-60,-33,-157,-158,-121,-122,-35,-36,122,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-24,-26,-37,153,154,-78,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-25,-170,-170,-151,-154,-77,-80,-153,-124,-170,-159,-160,-161,-170,268,-79,281,282,285,-125,-170,-129,-130,292,-169,295,-166,-168,297,298,299,-123,-126,-128,-162,312,-163,-164,-165,317,-170,-167,-127,341,345,-170,-118,-119,361,-148,-149,-120,364,]),'SEMICOLON':([46,48,49,51,52,54,55,56,57,67,82,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,157,158,171,264,307,320,321,322,],[-170,-170,-34,-55,-56,-170,-57,-58,-59,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-151,-154,-153,290,319,-115,-116,-117,]),'COLON':([46,48,49,51,52,54,55,56,57,67,82,88,89,90,91,92,93,94,96,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,122,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,157,158,171,192,206,207,208,268,285,295,297,298,299,327,],[-170,-170,-34,-55,-56,-170,-57,-58,-59,-32,-52,-33,-157,-158,-121,-122,-35,-36,-150,-152,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-170,-151,-154,-153,-124,-159,-160,-161,-169,-123,-162,-163,-164,-165,339,]),'CHR_LIT':([47,120,232,284,287,340,],[87,87,87,87,87,87,]),'PLUS_PLUS':([48,54,96,98,150,157,158,171,332,],[91,-170,-150,-152,-170,-151,-154,-153,91,]),'MINUS_MINUS':([48,54,96,98,150,157,158,171,332,],[92,-170,-150,-152,-170,-151,-154,-153,92,]),'RBRACKET':([51,52,55,56,57,60,83,84,85,86,87,119,121,123,124,125,126,149,164,],[-55,-56,-57,-58,-59,99,118,-170,-53,-54,-60,-24,-26,150,-155,-156,151,-25,171,]),'PLUS_EQ':([54,96,98,150,157,158,171,187,332,],[-170,-150,-152,-170,-151,-154,-153,227,227,]),'MINUS_EQ':([54,96,98,150,157,158,171,187,332,],[-170,-150,-152,-170,-151,-154,-153,228,228,]),'MUL_EQ':([54,96,98,150,157,158,171,187,332,],[-170,-150,-152,-170,-151,-154,-153,229,229,]),'DIV_EQ':([54,96,98,150,157,158,171,187,332,],[-170,-150,-152,-170,-151,-154,-153,230,230,]),'MOD_EQ':([54,96,98,150,157,158,171,187,332,],[-170,-150,-152,-170,-151,-154,-153,231,231,]),'CONVERT_TO_INT':([174,193,201,224,225,226,227,228,229,230,231,262,315,344,],[209,209,209,209,-138,-139,-140,-141,-142,-143,-144,209,209,209,]),'CONVERT_TO_FLT':([174,193,201,224,225,226,227,228,229,230,231,262,315,344,],[210,210,210,210,-138,-139,-140,-141,-142,-143,-144,210,210,210,]),'CONVERT_TO_BLN':([174,193,201,224,225,226,227,228,229,230,231,262,315,344,],[211,211,211,211,-138,-139,-140,-141,-142,-143,-144,211,211,211,]),'CONVERT_TO_STR':([174,193,201,224,225,226,227,228,229,230,231,262,315,344,],[212,212,212,212,-138,-139,-140,-141,-142,-143,-144,212,212,212,]),'DOT':([187,],[223,]),'SPLICE':([223,],[253,]),'PUSH':([223,],[254,]),'OTHERWISE_CHECK':([325,370,],[336,336,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'unli_newline':([2,4,100,],[3,15,129,]),'global_dec':([3,6,],[5,20,]),'global_statement':([3,6,],[6,6,]),'empty':([3,5,6,8,16,18,25,26,42,43,46,48,54,84,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,150,153,155,160,165,166,167,168,172,178,179,180,181,182,183,202,203,204,232,233,236,238,239,258,289,294,300,305,309,316,325,338,339,340,349,353,355,368,370,],[7,17,7,22,28,17,59,17,22,66,82,89,98,121,128,133,22,82,82,82,82,82,82,82,82,82,82,82,82,82,82,158,17,163,169,17,175,184,199,169,169,169,169,169,169,169,163,17,246,257,263,169,199,272,288,263,199,169,288,169,329,337,169,169,351,360,169,169,169,337,]),'var_statement':([3,6,160,172,178,179,180,181,182,183,236,300,309,338,339,353,355,368,],[8,8,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'data_type':([3,6,102,160,162,172,178,179,180,181,182,183,236,300,309,338,339,353,355,368,],[9,9,132,9,170,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'maybe_newline':([5,18,26,153,165,203,],[16,41,61,159,172,243,]),'global_tail':([6,],[19,]),'global_statement_tail':([8,42,103,],[21,63,134,]),'function_statements':([16,204,],[26,245,]),'ret_type':([16,204,],[27,27,]),'function_dtype':([16,204,],[30,30,]),'global_value':([24,],[43,]),'expression':([24,53,174,193,201,220,224,235,247,248,249,250,262,290,315,324,344,347,],[44,95,207,207,207,251,207,266,275,275,275,275,207,307,207,334,207,356,]),'list_value':([24,201,],[45,241,]),'factor':([24,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,174,193,201,220,224,235,247,248,249,250,262,290,315,324,344,347,],[46,46,104,105,106,107,108,109,110,111,112,113,114,115,116,117,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'var_call':([24,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,174,193,201,220,224,232,235,247,248,249,250,262,287,290,308,315,319,324,344,347,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,260,48,48,48,48,48,48,260,48,322,48,332,48,48,48,]),'literal1':([24,47,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,120,174,193,201,220,224,232,235,247,248,249,250,262,284,287,290,315,324,340,344,347,],[49,85,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,85,49,49,49,49,49,85,49,49,49,49,49,49,85,85,49,49,49,85,49,49,]),'list_dec':([25,],[58,]),'global_statement_tail2':([43,],[64,]),'factor_tail':([46,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[67,135,136,137,138,139,140,141,142,143,144,145,146,147,148,]),'list_element':([47,120,284,340,],[83,149,304,352,]),'literal':([47,120,232,284,287,340,],[84,84,259,84,259,84,]),'literal2':([47,120,232,284,287,340,],[86,86,86,86,86,86,]),'postfix':([48,],[88,]),'postfix_op':([48,332,],[90,343,]),'list_index':([54,],[96,]),'main_function':([61,],[100,]),'element_tail':([84,],[119,]),'index':([97,156,],[123,164,]),'_2d_list':([99,],[127,]),'parameters':([102,],[131,]),'list_index2':([150,],[157,]),'parameters_tail':([155,202,],[161,242,]),'statements':([160,172,178,179,180,181,182,183,236,300,309,338,339,353,355,368,],[166,203,214,214,214,214,214,214,267,313,323,348,349,362,363,369,]),'local_dec':([160,172,178,179,180,181,182,183,236,300,309,338,339,353,355,368,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'revive':([166,],[173,]),'statements_tail':([167,],[176,]),'statements_list':([167,],[177,]),'conditional_statement':([167,],[178,]),'switch_statement':([167,],[179,]),'loop_statement':([167,],[180,]),'function_call':([167,174,193,201,224,262,315,344,],[181,208,208,208,208,208,208,208,]),'assignment_statement':([167,],[182,]),'output_statement':([167,],[183,]),'for_loop':([167,],[188,]),'until_loop':([167,],[189,]),'repeat_until':([167,],[190,]),'input_statement':([167,174,193,201,224,247,248,249,250,262,315,344,],[192,192,192,192,192,277,277,277,277,192,192,192,]),'local_dec_tail':([168,238,294,],[198,269,311,]),'value':([174,193,201,224,262,315,344,],[205,233,240,255,289,327,354,]),'type_cast':([174,193,201,224,262,315,344,],[206,206,206,206,206,206,206,]),'statements_list2':([178,179,180,181,182,183,],[213,215,216,217,218,219,]),'assign_tail':([187,],[222,]),'assign_op':([187,],[224,]),'compound_op':([187,332,],[225,344,]),'local_value':([201,],[239,]),'function_statements_tail':([204,],[244,]),'arguments':([232,],[256,]),'arg_value':([232,287,],[258,305,]),'next_val':([233,289,],[261,306,]),'control_variable':([234,],[264,]),'local_dec_tail2':([239,],[270,]),'typecast_value':([247,248,249,250,],[274,278,279,280,]),'arg_tail':([258,305,],[286,318,]),'start':([283,],[302,]),'switch_condition':([301,349,],[314,359,]),'control_var_tail':([308,],[320,]),'deleteCount':([316,],[328,]),'update':([319,],[331,]),'conditional_tail':([325,370,],[335,371,]),'update_tail':([332,],[342,]),'splice_items':([340,],[350,]),'switchcond_tail':([349,],[358,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BIRTH unli_newline global_dec maybe_newline function_statements maybe_newline main_function unli_newline GHOST','program',9,'p_program','Parser.py',41),
  ('maybe_newline -> empty','maybe_newline',1,'p_maybe_newline','Parser.py',49),
  ('maybe_newline -> NEWLINE maybe_newline','maybe_newline',2,'p_maybe_newline','Parser.py',50),
  ('unli_newline -> NEWLINE','unli_newline',1,'p_unli_newline','Parser.py',58),
  ('unli_newline -> NEWLINE unli_newline','unli_newline',2,'p_unli_newline','Parser.py',59),
  ('main_function -> MAIN_CASPER LPAREN RPAREN maybe_newline LBRACE maybe_newline statements maybe_newline RBRACE','main_function',9,'p_main_function','Parser.py',65),
  ('global_dec -> global_statement global_tail','global_dec',2,'p_global_dec','Parser.py',77),
  ('global_dec -> empty','global_dec',1,'p_global_dec','Parser.py',78),
  ('global_tail -> global_dec','global_tail',1,'p_global_tail','Parser.py',93),
  ('global_statement -> var_statement global_statement_tail','global_statement',2,'p_global_statement','Parser.py',103),
  ('var_statement -> data_type IDENT list_dec','var_statement',3,'p_var_statement','Parser.py',113),
  ('list_dec -> empty','list_dec',1,'p_list_dec','Parser.py',128),
  ('list_dec -> LBRACKET RBRACKET _2d_list','list_dec',3,'p_list_dec','Parser.py',129),
  ('_2d_list -> empty','_2d_list',1,'p_2d_list','Parser.py',144),
  ('_2d_list -> LBRACKET RBRACKET','_2d_list',2,'p_2d_list','Parser.py',145),
  ('global_statement_tail -> empty','global_statement_tail',1,'p_global_statement_tail','Parser.py',160),
  ('global_statement_tail -> COMMA IDENT global_statement_tail','global_statement_tail',3,'p_global_statement_tail','Parser.py',161),
  ('global_statement_tail -> EQ global_value global_statement_tail2','global_statement_tail',3,'p_global_statement_tail','Parser.py',162),
  ('global_statement_tail2 -> COMMA IDENT global_statement_tail','global_statement_tail2',3,'p_global_statement_tail2','Parser.py',183),
  ('global_statement_tail2 -> empty','global_statement_tail2',1,'p_global_statement_tail2','Parser.py',184),
  ('global_value -> expression','global_value',1,'p_global_value','Parser.py',198),
  ('global_value -> list_value','global_value',1,'p_global_value','Parser.py',199),
  ('list_value -> LBRACKET list_element RBRACKET','list_value',3,'p_list_value','Parser.py',209),
  ('list_element -> literal element_tail','list_element',2,'p_list_element','Parser.py',221),
  ('element_tail -> COMMA list_element','element_tail',2,'p_element_tail','Parser.py',230),
  ('element_tail -> empty','element_tail',1,'p_element_tail','Parser.py',231),
  ('data_type -> INT','data_type',1,'p_data_type','Parser.py',248),
  ('data_type -> FLT','data_type',1,'p_data_type','Parser.py',249),
  ('data_type -> BLN','data_type',1,'p_data_type','Parser.py',250),
  ('data_type -> CHR','data_type',1,'p_data_type','Parser.py',251),
  ('data_type -> STR','data_type',1,'p_data_type','Parser.py',252),
  ('expression -> factor factor_tail','expression',2,'p_expression','Parser.py',262),
  ('factor -> var_call postfix','factor',2,'p_factor','Parser.py',279),
  ('factor -> literal1','factor',1,'p_factor','Parser.py',280),
  ('factor -> TILDE INT_LIT','factor',2,'p_factor','Parser.py',281),
  ('factor -> TILDE FLT_LIT','factor',2,'p_factor','Parser.py',282),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','Parser.py',283),
  ('factor_tail -> PLUS factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',321),
  ('factor_tail -> MINUS factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',322),
  ('factor_tail -> MULTIPLY factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',323),
  ('factor_tail -> DIVISION factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',324),
  ('factor_tail -> MODULO factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',325),
  ('factor_tail -> EXPONENT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',326),
  ('factor_tail -> GT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',327),
  ('factor_tail -> LT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',328),
  ('factor_tail -> EQ_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',329),
  ('factor_tail -> GT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',330),
  ('factor_tail -> LT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',331),
  ('factor_tail -> NOT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',332),
  ('factor_tail -> AND factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',333),
  ('factor_tail -> OR factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',334),
  ('factor_tail -> empty','factor_tail',1,'p_factor_tail','Parser.py',335),
  ('literal -> literal1','literal',1,'p_literal','Parser.py',349),
  ('literal -> literal2','literal',1,'p_literal','Parser.py',350),
  ('literal1 -> INT_LIT','literal1',1,'p_literal1','Parser.py',365),
  ('literal1 -> FLT_LIT','literal1',1,'p_literal1','Parser.py',366),
  ('literal1 -> DAY','literal1',1,'p_literal1','Parser.py',367),
  ('literal1 -> NIGHT','literal1',1,'p_literal1','Parser.py',368),
  ('literal1 -> STR_LIT','literal1',1,'p_literal1','Parser.py',369),
  ('literal2 -> CHR_LIT','literal2',1,'p_literal2','Parser.py',375),
  ('function_statements -> ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements revive RBRACE function_statements_tail','function_statements',10,'p_function_statements','Parser.py',385),
  ('function_statements -> empty','function_statements',1,'p_function_statements','Parser.py',386),
  ('function_statements_tail -> function_statements','function_statements_tail',1,'p_function_statements_tail','Parser.py',403),
  ('function_statements_tail -> empty','function_statements_tail',1,'p_function_statements_tail','Parser.py',404),
  ('ret_type -> FUNCTION','ret_type',1,'p_ret_type','Parser.py',417),
  ('ret_type -> function_dtype','ret_type',1,'p_ret_type','Parser.py',418),
  ('function_dtype -> FUNCTION_INT','function_dtype',1,'p_function_dtype','Parser.py',439),
  ('function_dtype -> FUNCTION_FLT','function_dtype',1,'p_function_dtype','Parser.py',440),
  ('function_dtype -> FUNCTION_CHR','function_dtype',1,'p_function_dtype','Parser.py',441),
  ('function_dtype -> FUNCTION_BLN','function_dtype',1,'p_function_dtype','Parser.py',442),
  ('function_dtype -> FUNCTION_STR','function_dtype',1,'p_function_dtype','Parser.py',443),
  ('function_dtype -> FUNCTION_LIST_INT','function_dtype',1,'p_function_dtype','Parser.py',444),
  ('function_dtype -> FUNCTION_LIST_FLT','function_dtype',1,'p_function_dtype','Parser.py',445),
  ('function_dtype -> FUNCTION_LIST_CHR','function_dtype',1,'p_function_dtype','Parser.py',446),
  ('function_dtype -> FUNCTION_LIST_STR','function_dtype',1,'p_function_dtype','Parser.py',447),
  ('function_dtype -> FUNCTION_LIST_BLN','function_dtype',1,'p_function_dtype','Parser.py',448),
  ('parameters -> data_type IDENT parameters_tail','parameters',3,'p_parameters','Parser.py',458),
  ('parameters -> empty','parameters',1,'p_parameters','Parser.py',459),
  ('parameters_tail -> COMMA data_type IDENT parameters_tail','parameters_tail',4,'p_parameters_tail','Parser.py',474),
  ('parameters_tail -> empty','parameters_tail',1,'p_parameters_tail','Parser.py',475),
  ('revive -> REVIVE value','revive',2,'p_revive','Parser.py',490),
  ('revive -> empty','revive',1,'p_revive','Parser.py',491),
  ('statements -> local_dec statements_tail','statements',2,'p_statements','Parser.py',505),
  ('statements_tail -> statements_list','statements_tail',1,'p_statements_tail_list','Parser.py',514),
  ('statements_list -> conditional_statement statements_list2','statements_list',2,'p_statements_list','Parser.py',529),
  ('statements_list -> switch_statement statements_list2','statements_list',2,'p_statements_list','Parser.py',530),
  ('statements_list -> loop_statement statements_list2','statements_list',2,'p_statements_list','Parser.py',531),
  ('statements_list -> function_call statements_list2','statements_list',2,'p_statements_list','Parser.py',532),
  ('statements_list -> assignment_statement statements_list2','statements_list',2,'p_statements_list','Parser.py',533),
  ('statements_list -> output_statement statements_list2','statements_list',2,'p_statements_list','Parser.py',534),
  ('statements_list -> empty','statements_list',1,'p_statements_list','Parser.py',535),
  ('statements_list2 -> statements','statements_list2',1,'p_statements_list2','Parser.py',549),
  ('local_dec -> var_statement local_dec_tail','local_dec',2,'p_local_dec','Parser.py',559),
  ('local_dec -> empty','local_dec',1,'p_local_dec','Parser.py',560),
  ('local_dec_tail -> empty','local_dec_tail',1,'p_local_dec_tail','Parser.py',576),
  ('local_dec_tail -> COMMA IDENT local_dec_tail','local_dec_tail',3,'p_local_dec_tail','Parser.py',577),
  ('local_dec_tail -> EQ local_value local_dec_tail2','local_dec_tail',3,'p_local_dec_tail','Parser.py',578),
  ('local_dec_tail2 -> COMMA IDENT local_dec_tail','local_dec_tail2',3,'p_local_dec_tail2','Parser.py',596),
  ('local_dec_tail2 -> empty','local_dec_tail2',1,'p_local_dec_tail2','Parser.py',597),
  ('local_value -> value','local_value',1,'p_local_value','Parser.py',611),
  ('local_value -> list_value','local_value',1,'p_local_value','Parser.py',612),
  ('conditional_statement -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE conditional_tail OTHERWISE LBRACE statements RBRACE','conditional_statement',12,'p_conditional_statement','Parser.py',621),
  ('conditional_tail -> OTHERWISE_CHECK LPAREN expression RPAREN LBRACE statements RBRACE conditional_tail','conditional_tail',8,'p_conditional_tail','Parser.py',631),
  ('conditional_tail -> empty','conditional_tail',1,'p_conditional_tail','Parser.py',632),
  ('switch_statement -> SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE LBRACE statements RBRACE RBRACE','switch_statement',11,'p_switch_statement','Parser.py',645),
  ('switch_condition -> SHIFT value COLON statements switchcond_tail','switch_condition',5,'p_switch_condition','Parser.py',654),
  ('switchcond_tail -> switch_condition','switchcond_tail',1,'p_switchcond_tail','Parser.py',664),
  ('switchcond_tail -> empty','switchcond_tail',1,'p_switchcond_tail','Parser.py',665),
  ('loop_statement -> for_loop','loop_statement',1,'p_loop_statement','Parser.py',679),
  ('loop_statement -> until_loop','loop_statement',1,'p_loop_statement','Parser.py',680),
  ('loop_statement -> repeat_until','loop_statement',1,'p_loop_statement','Parser.py',681),
  ('for_loop -> FOR LPAREN control_variable SEMICOLON expression SEMICOLON update RPAREN LBRACE statements RBRACE','for_loop',11,'p_for_loop','Parser.py',690),
  ('until_loop -> UNTIL LPAREN expression RPAREN LBRACE statements RBRACE','until_loop',7,'p_until_loop','Parser.py',699),
  ('repeat_until -> REPEAT LBRACE statements RBRACE UNTIL LPAREN expression RPAREN','repeat_until',8,'p_repeat_until','Parser.py',708),
  ('control_variable -> INT IDENT EQ control_var_tail','control_variable',4,'p_control_variable','Parser.py',717),
  ('control_var_tail -> INT_LIT','control_var_tail',1,'p_control_var_tail','Parser.py',727),
  ('control_var_tail -> var_call','control_var_tail',1,'p_control_var_tail','Parser.py',728),
  ('update -> var_call update_tail','update',2,'p_update','Parser.py',737),
  ('update_tail -> postfix_op','update_tail',1,'p_update_tail','Parser.py',747),
  ('update_tail -> compound_op value','update_tail',2,'p_update_tail','Parser.py',748),
  ('postfix_op -> PLUS_PLUS','postfix_op',1,'p_postfix_op','Parser.py',761),
  ('postfix_op -> MINUS_MINUS','postfix_op',1,'p_postfix_op','Parser.py',762),
  ('function_call -> FUNCTION_NAME LPAREN arguments RPAREN','function_call',4,'p_function_call','Parser.py',772),
  ('function_call -> input_statement','function_call',1,'p_function_call','Parser.py',773),
  ('arguments -> empty','arguments',1,'p_arguments','Parser.py',786),
  ('arguments -> arg_value arg_tail','arguments',2,'p_arguments','Parser.py',787),
  ('arg_tail -> COMMA arg_value arg_tail','arg_tail',3,'p_arg_tail','Parser.py',800),
  ('arg_tail -> empty','arg_tail',1,'p_arg_tail','Parser.py',801),
  ('arg_value -> literal','arg_value',1,'p_arg_value','Parser.py',814),
  ('arg_value -> var_call','arg_value',1,'p_arg_value','Parser.py',815),
  ('output_statement -> DISPLAY value next_val','output_statement',3,'p_output_statement','Parser.py',824),
  ('next_val -> COMMA value next_val','next_val',3,'p_next_val','Parser.py',834),
  ('next_val -> empty','next_val',1,'p_next_val','Parser.py',835),
  ('assignment_statement -> IDENT assign_tail','assignment_statement',2,'p_assignment_statement','Parser.py',847),
  ('assign_tail -> DOT SPLICE LPAREN start COMMA deleteCount COMMA splice_items RPAREN','assign_tail',9,'p_assign_tail','Parser.py',858),
  ('assign_tail -> DOT PUSH LPAREN list_element RPAREN','assign_tail',5,'p_assign_tail','Parser.py',859),
  ('assign_tail -> assign_op value','assign_tail',2,'p_assign_tail','Parser.py',860),
  ('assign_op -> compound_op','assign_op',1,'p_assign_op','Parser.py',878),
  ('assign_op -> EQ','assign_op',1,'p_assign_op','Parser.py',879),
  ('compound_op -> PLUS_EQ','compound_op',1,'p_compound_op','Parser.py',892),
  ('compound_op -> MINUS_EQ','compound_op',1,'p_compound_op','Parser.py',893),
  ('compound_op -> MUL_EQ','compound_op',1,'p_compound_op','Parser.py',894),
  ('compound_op -> DIV_EQ','compound_op',1,'p_compound_op','Parser.py',895),
  ('compound_op -> MOD_EQ','compound_op',1,'p_compound_op','Parser.py',896),
  ('start -> INT_LIT','start',1,'p_start','Parser.py',905),
  ('deleteCount -> empty','deleteCount',1,'p_deleteCount','Parser.py',915),
  ('deleteCount -> INT_LIT','deleteCount',1,'p_deleteCount','Parser.py',916),
  ('splice_items -> empty','splice_items',1,'p_splice_items','Parser.py',929),
  ('splice_items -> list_element','splice_items',1,'p_splice_items','Parser.py',930),
  ('var_call -> IDENT list_index','var_call',2,'p_var_call','Parser.py',942),
  ('list_index -> LBRACKET index RBRACKET list_index2','list_index',4,'p_list_index','Parser.py',952),
  ('list_index -> empty','list_index',1,'p_list_index','Parser.py',953),
  ('list_index2 -> LBRACKET index RBRACKET','list_index2',3,'p_list_index2','Parser.py',966),
  ('list_index2 -> empty','list_index2',1,'p_list_index2','Parser.py',967),
  ('index -> INT_LIT','index',1,'p_index','Parser.py',980),
  ('index -> IDENT','index',1,'p_index','Parser.py',981),
  ('postfix -> empty','postfix',1,'p_postfix','Parser.py',991),
  ('postfix -> postfix_op','postfix',1,'p_postfix','Parser.py',992),
  ('value -> type_cast','value',1,'p_value','Parser.py',1003),
  ('value -> expression','value',1,'p_value','Parser.py',1004),
  ('value -> function_call','value',1,'p_value','Parser.py',1005),
  ('type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',1017),
  ('type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',1018),
  ('type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',1019),
  ('type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',1020),
  ('typecast_value -> expression','typecast_value',1,'p_typecast_value','Parser.py',1031),
  ('typecast_value -> FUNCTION_NAME LPAREN RPAREN','typecast_value',3,'p_typecast_value','Parser.py',1032),
  ('typecast_value -> input_statement','typecast_value',1,'p_typecast_value','Parser.py',1033),
  ('input_statement -> INPUT LPAREN RPAREN','input_statement',3,'p_input_statement','Parser.py',1046),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',1051),
]
