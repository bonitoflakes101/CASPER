
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEXPONENTrightNOTMINUSleftMULTIPLYDIVISIONMODULOleftPLUSMINUSleftPLUS_PLUSMINUS_MINUSleftEQ_EQNOT_EQLTGTLT_EQGT_EQleftANDleftORrightEQPLUS_EQMINUS_EQMUL_EQDIV_EQMOD_EQAND BIRTH BLN BLN_LIT CARRIAGE_RETURN CHECK CHR CHR_LIT COLON COMMA COMMENT CONVERT_TO_BLN CONVERT_TO_FLT CONVERT_TO_INT CONVERT_TO_STR DAY DISPLAY DIVISION DIV_EQ DOT DOUBLE_LT DOUBLE_SLASH EOF EQ EQ_EQ EXPONENT FLT FLT_LIT FOR FUNCTION FUNCTION_BLN FUNCTION_CHR FUNCTION_FLT FUNCTION_INT FUNCTION_LIST_BLN FUNCTION_LIST_BLN2D FUNCTION_LIST_CHR FUNCTION_LIST_CHR2D FUNCTION_LIST_FLT FUNCTION_LIST_FLT2D FUNCTION_LIST_INT FUNCTION_LIST_INT2D FUNCTION_LIST_STR FUNCTION_LIST_STR2D FUNCTION_NAME FUNCTION_STR GHOST GT GT_EQ IDENT ILLEGAL IN INPUT INT INT_LIT LBRACE LBRACKET LIST_BLN LIST_BLN2D LIST_CHR LIST_CHR2D LIST_FLT LIST_FLT2D LIST_INT LIST_INT2D LIST_STR LIST_STR2D LPAREN LT LT_EQ MAIN_CASPER MEASURE MINUS MINUS_EQ MINUS_MINUS MODULO MOD_EQ MULTIPLY MUL_EQ NEWLINE NIGHT NOT NOT_EQ OR OTHERWISE OTHERWISE_CHECK PLUS PLUS_EQ PLUS_PLUS POW PUSH RBRACE RBRACKET REPEAT REVIVE RPAREN SEMICOLON SHIFT SKIP SPLICE STOP STR STR_LIT SWAP TILDE TYPE UNTILprogram : BIRTH LBRACE global_dec function_statements main_function RBRACE GHOSTmain_function : MAIN_CASPER LPAREN RPAREN LBRACE statements RBRACE\n    global_dec : global_statement SEMICOLON global_tail \n               | empty                            \n    \n        global_tail : global_dec\n    \n    global_statement : var_statement global_statement_tail \n    \n        var_statement : data_type IDENT list_dec \n    \n    list_dec : empty               \n             | LBRACKET RBRACKET _2d_list \n    \n    _2d_list : empty            \n             | LBRACKET RBRACKET \n    \n    global_statement_tail : empty                        \n                          | COMMA IDENT global_statement_tail \n                          | EQ global_value global_statement_tail2 \n    \n    global_statement_tail2 : COMMA IDENT global_statement_tail \n                           | empty                           \n    \n    global_value : expression   \n                 | list_value   \n    \n     list_value : LBRACKET list_element RBRACKET\n    \n    list_element : literal element_tail\n                 | list_value element_tail\n    \n    element_tail : COMMA list_element  \n                 | empty              \n    \n    data_type : INT   \n              | FLT   \n              | BLN  \n              | CHR  \n              | STR  \n    \n    expression : factor factor_tail\n    \n    factor : var_call postfix           \n           | literal1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN factor_expression RPAREN    \n    \n    factor_expression : factor_expression_factor factor_expression_tail\n    \n    factor_expression_factor : factor_var_call factor_postfix           \n           | factor_expression1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN factor_expression RPAREN    \n    \n    factor_var_call : IDENT factor_list_index  \n    \n    factor_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    factor_postfix : empty        \n            | factor_postfix_op  \n    \n    factor_list_index : LBRACKET factor_index RBRACKET factor_list_index2  \n               | empty                                \n    \n    factor_list_index2 : LBRACKET factor_index RBRACKET \n                | empty                   \n    factor_index : INT_LITfactor_index : IDENT\n    factor_expression_tail : PLUS factor_expression_factor factor_expression_tail\n                | MINUS factor_expression_factor factor_expression_tail\n                | MULTIPLY factor_expression_factor factor_expression_tail\n                | DIVISION factor_expression_factor factor_expression_tail\n                | MODULO factor_expression_factor factor_expression_tail\n                | EXPONENT factor_expression_factor factor_expression_tail\n                | GT factor_expression_factor factor_expression_tail\n                | LT factor_expression_factor factor_expression_tail\n                | EQ_EQ factor_expression_factor factor_expression_tail\n                | GT_EQ factor_expression_factor factor_expression_tail\n                | LT_EQ factor_expression_factor factor_expression_tail\n                | NOT_EQ factor_expression_factor factor_expression_tail\n                | AND factor_expression_factor factor_expression_tail\n                | OR factor_expression_factor factor_expression_tail\n                | empty\n    \n    factor_expression1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    factor_tail : PLUS factor factor_tail\n                | MINUS factor factor_tail\n                | MULTIPLY factor factor_tail\n                | DIVISION factor factor_tail\n                | MODULO factor factor_tail\n                | EXPONENT factor factor_tail\n                | GT factor factor_tail\n                | LT factor factor_tail\n                | EQ_EQ factor factor_tail\n                | GT_EQ factor factor_tail\n                | LT_EQ factor factor_tail\n                | NOT_EQ factor factor_tail\n                | AND factor factor_tail\n                | OR factor factor_tail\n                | empty\n    \n    literal : literal1\n            | literal2\n    \n    literal1 : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    literal2 : CHR_LIT\n    \n    function_statements : ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements revive RBRACE function_statements_tail  \n                        | empty                                                          \n    \n    function_statements_tail : function_statements \n                             | empty               \n    \n    ret_type : FUNCTION           \n             | function_dtype    \n    \n    function_dtype : FUNCTION_INT       \n                   | FUNCTION_FLT      \n                   | FUNCTION_CHR       \n                   | FUNCTION_BLN       \n                   | FUNCTION_STR       \n                   | FUNCTION_LIST_INT \n                   | FUNCTION_LIST_FLT  \n                   | FUNCTION_LIST_CHR \n                   | FUNCTION_LIST_STR  \n                   | FUNCTION_LIST_BLN  \n    \n    parameters : data_type IDENT parameters_tail  \n               | empty                            \n    \n    parameters_tail : COMMA data_type IDENT parameters_tail \n                    | empty                                 \n    \n    revive : REVIVE revive_value  \n           | empty        \n    revive_value : revive_type_cast\n             | revive_expression\n             | function_call\n    revive_expression : revive_factor revive_factor_tail\n    \n    revive_factor : revive_var_call revive_postfix           \n           | revive_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN revive_factor RPAREN    \n    \n    revive_var_call : IDENT revive_list_index  \n    \n    revive_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    revive_postfix : empty        \n            | revive_postfix_op  \n    \n    revive_list_index : LBRACKET revive_index RBRACKET revive_list_index2  \n               | empty                                \n    \n    revive_list_index2 : LBRACKET revive_index RBRACKET \n                | empty                   \n    revive_index : INT_LITrevive_index : IDENT\n    revive_factor_tail : PLUS revive_factor revive_factor_tail\n                | MINUS revive_factor revive_factor_tail\n                | MULTIPLY revive_factor revive_factor_tail\n                | DIVISION revive_factor revive_factor_tail\n                | MODULO revive_factor revive_factor_tail\n                | EXPONENT revive_factor revive_factor_tail\n                | GT revive_factor revive_factor_tail\n                | LT revive_factor revive_factor_tail\n                | EQ_EQ revive_factor revive_factor_tail\n                | GT_EQ revive_factor revive_factor_tail\n                | LT_EQ revive_factor revive_factor_tail\n                | NOT_EQ revive_factor revive_factor_tail\n                | AND revive_factor revive_factor_tail\n                | OR revive_factor revive_factor_tail\n                | empty\n    \n    revive_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    revive_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPARENstatements : empty\n           | local_dec statements_tail \n    statements_tail : switch_statement statements\n                    | loop_statement statements\n                    | function_call statements\n                    | assignment_statement statements\n                    | output_statement statements\n                    | conditional_statement statements\n                    | statements\n    \n    local_dec : local_var_statement local_dec_tail SEMICOLON\n              | empty\n    \n        local_var_statement : local_data_type IDENT local_list_dec\n    \n    local_data_type : INT   \n              | FLT   \n              | BLN  \n              | CHR  \n              | STR  \n    \n    local_list_dec : empty               \n             | LBRACKET RBRACKET local_2d_list \n    \n    local_2d_list : empty            \n             | LBRACKET RBRACKET \n    \n    local_dec_tail : empty                          \n                   | COMMA IDENT local_dec_tail     \n                   | EQ local_value local_dec_tail2  \n    \n    local_dec_tail2 : COMMA IDENT local_dec_tail  \n                    | empty                      \n    \n    local_value : local_value_value      \n                | list_value  \n    local_value_value  : local_type_cast\n             | local_expression\n             | function_call\n    local_expression : local_factor local_factor_tail\n    \n    local_factor : local_var_call local_postfix           \n           | local_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN local_factor RPAREN    \n    \n    local_var_call : IDENT local_list_index  \n    \n    local_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    local_postfix : empty        \n            | local_postfix_op  \n    \n    local_list_index : LBRACKET local_index RBRACKET local_list_index2  \n               | empty                                \n    \n    local_list_index2 : LBRACKET local_index RBRACKET \n                | empty                   \n    local_index : INT_LITlocal_index : IDENT\n    local_factor_tail : PLUS local_factor local_factor_tail\n                | MINUS local_factor local_factor_tail\n                | MULTIPLY local_factor local_factor_tail\n                | DIVISION local_factor local_factor_tail\n                | MODULO local_factor local_factor_tail\n                | EXPONENT local_factor local_factor_tail\n                | GT local_factor local_factor_tail\n                | LT local_factor local_factor_tail\n                | EQ_EQ local_factor local_factor_tail\n                | GT_EQ local_factor local_factor_tail\n                | LT_EQ local_factor local_factor_tail\n                | NOT_EQ local_factor local_factor_tail\n                | AND local_factor local_factor_tail\n                | OR local_factor local_factor_tail\n                | empty\n    \n    local_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    local_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    conditional_statement : CHECK LPAREN condition RPAREN LBRACE  statements RBRACE conditional_tail OTHERWISE LBRACE statements RBRACE  \n    \n    conditional_tail : OTHERWISE_CHECK LPAREN condition RPAREN LBRACE statements RBRACE conditional_tail \n                     | empty                                            \n    \n    condition : condition_factor condition_tail\n    \n    condition_factor : condition_var_call condition_postfix           \n           | condition1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN condition RPAREN    \n    \n    condition_var_call : IDENT condition_list_index  \n    \n    condition_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    condition_postfix : empty        \n            | condition_postfix_op  \n    \n    condition_list_index : LBRACKET condition_index RBRACKET condition_list_index2  \n               | empty                                \n    \n    condition_list_index2 : LBRACKET condition_index RBRACKET \n                | empty                   \n    condition_index : INT_LITcondition_index : IDENT\n    condition_tail : PLUS condition_factor condition_tail\n                | MINUS condition_factor condition_tail\n                | MULTIPLY condition_factor condition_tail\n                | DIVISION condition_factor condition_tail\n                | MODULO condition_factor condition_tail\n                | EXPONENT condition_factor condition_tail\n                | GT condition_factor condition_tail\n                | LT condition_factor condition_tail\n                | EQ_EQ condition_factor condition_tail\n                | GT_EQ condition_factor condition_tail\n                | LT_EQ condition_factor condition_tail\n                | NOT_EQ condition_factor condition_tail\n                | AND condition_factor condition_tail\n                | OR condition_factor condition_tail\n                | empty\n    \n    condition1 : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    switch_statement : SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE LBRACE statements RBRACE RBRACE\n    \n    switch_condition : SHIFT switch_value COLON statements switchcond_tail\n    switch_value  : switch_type_cast\n             | switch_expression\n             | function_call\n    switch_expression : switch_factor switch_factor_tail\n    \n    switch_factor : switch_var_call switch_postfix           \n           | switch_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN switch_factor RPAREN    \n    \n    switch_var_call : IDENT switch_list_index  \n    \n    switch_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    switch_postfix : empty        \n            | switch_postfix_op  \n    \n    switch_list_index : LBRACKET switch_index RBRACKET switch_list_index2  \n               | empty                                \n    \n    switch_list_index2 : LBRACKET switch_index RBRACKET \n                | empty                   \n    switch_index : INT_LITswitch_index : IDENT\n    switch_factor_tail : PLUS switch_factor switch_factor_tail\n                | MINUS switch_factor switch_factor_tail\n                | MULTIPLY switch_factor switch_factor_tail\n                | DIVISION switch_factor switch_factor_tail\n                | MODULO switch_factor switch_factor_tail\n                | EXPONENT switch_factor switch_factor_tail\n                | GT switch_factor switch_factor_tail\n                | LT switch_factor switch_factor_tail\n                | EQ_EQ switch_factor switch_factor_tail\n                | GT_EQ switch_factor switch_factor_tail\n                | LT_EQ switch_factor switch_factor_tail\n                | NOT_EQ switch_factor switch_factor_tail\n                | AND switch_factor switch_factor_tail\n                | OR switch_factor switch_factor_tail\n                | empty\n    \n    switch_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    switch_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    switchcond_tail : switch_condition  \n                    | empty          \n    \n    loop_statement : for_loop    \n                   | until_loop  \n                   | repeat_until\n    for_loop : FOR LPAREN control_variable SEMICOLON for_expression SEMICOLON update RPAREN LBRACE statements RBRACE\n    for_expression : for_factor for_factor_tail\n    \n    for_factor : for_var_call for_postfix           \n           | for_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN for_factor RPAREN    \n    \n    for_var_call : IDENT for_list_index  \n    \n    for_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    for_postfix : empty        \n            | for_postfix_op  \n    \n    for_list_index : LBRACKET for_index RBRACKET for_list_index2  \n               | empty                                \n    \n    for_list_index2 : LBRACKET for_index RBRACKET \n                | empty                   \n    for_index : INT_LITfor_index : IDENT\n    for_factor_tail : PLUS for_factor for_factor_tail\n                | MINUS for_factor for_factor_tail\n                | MULTIPLY for_factor for_factor_tail\n                | DIVISION for_factor for_factor_tail\n                | MODULO for_factor for_factor_tail\n                | EXPONENT for_factor for_factor_tail\n                | GT for_factor for_factor_tail\n                | LT for_factor for_factor_tail\n                | EQ_EQ for_factor for_factor_tail\n                | GT_EQ for_factor for_factor_tail\n                | LT_EQ for_factor for_factor_tail\n                | NOT_EQ for_factor for_factor_tail\n                | AND for_factor for_factor_tail\n                | OR for_factor for_factor_tail\n                | empty\n    \n    for_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    until_loop : UNTIL LPAREN until_expression RPAREN LBRACE statements RBRACE  \n    \n    until_expression : until_factor until_factor_tail\n    \n    until_factor : until_var_call until_postfix           \n           | until_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN until_factor RPAREN    \n    \n    until_var_call : IDENT until_list_index  \n    \n    until_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    until_postfix : empty        \n            | until_postfix_op  \n    \n    until_list_index : LBRACKET until_index RBRACKET until_list_index2  \n               | empty                                \n    \n    until_list_index2 : LBRACKET until_index RBRACKET \n                | empty                   \n    until_index : INT_LITuntil_index : IDENT\n    until_factor_tail : PLUS until_factor until_factor_tail\n                | MINUS until_factor until_factor_tail\n                | MULTIPLY until_factor until_factor_tail\n                | DIVISION until_factor until_factor_tail\n                | MODULO until_factor until_factor_tail\n                | EXPONENT until_factor until_factor_tail\n                | GT until_factor until_factor_tail\n                | LT until_factor until_factor_tail\n                | EQ_EQ until_factor until_factor_tail\n                | GT_EQ until_factor until_factor_tail\n                | LT_EQ until_factor until_factor_tail\n                | NOT_EQ until_factor until_factor_tail\n                | AND until_factor until_factor_tail\n                | OR until_factor until_factor_tail\n                | empty\n    \n    until_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    repeat_until : REPEAT LBRACE statements RBRACE UNTIL LPAREN until_expression RPAREN \n    control_variable : INT IDENT EQ control_var_tailcontrol_var_tail : INT_LIT \n                        | var_call\n    \n    update : var_call update_tail  \n    \n    update_tail : postfix_op         \n                | compound_op value   \n    \n    postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    function_call : FUNCTION_NAME LPAREN arguments RPAREN  SEMICOLON\n                  | input_statement SEMICOLON                    \n    \n    arguments : empty                  \n              | arg_value arg_tail    \n    \n    arg_tail : COMMA arg_value arg_tail   \n             | empty                     \n    \n    arg_value : literal   \n              | var_call \n    \n    output_statement : DISPLAY output_value next_val SEMICOLON   \n    output_value : output_type_cast\n             | output_expression\n             | function_call\n    output_expression : output_factor output_factor_tail\n    \n    output_factor : output_var_call output_postfix           \n           | output_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN output_factor RPAREN    \n    \n    output_var_call : IDENT output_list_index  \n    \n    output_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    output_postfix : empty        \n            | output_postfix_op  \n    \n    output_list_index : LBRACKET output_index RBRACKET output_list_index2  \n               | empty                                \n    \n    output_list_index2 : LBRACKET output_index RBRACKET \n                | empty                   \n    output_index : INT_LIToutput_index : IDENT\n    output_factor_tail : PLUS output_factor output_factor_tail\n                | MINUS output_factor output_factor_tail\n                | MULTIPLY output_factor output_factor_tail\n                | DIVISION output_factor output_factor_tail\n                | MODULO output_factor output_factor_tail\n                | EXPONENT output_factor output_factor_tail\n                | GT output_factor output_factor_tail\n                | LT output_factor output_factor_tail\n                | EQ_EQ output_factor output_factor_tail\n                | GT_EQ output_factor output_factor_tail\n                | LT_EQ output_factor output_factor_tail\n                | NOT_EQ output_factor output_factor_tail\n                | AND output_factor output_factor_tail\n                | OR output_factor output_factor_tail\n                | empty\n    \n    output_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    output_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    next_val : COMMA value next_val  \n             | empty                \n    \n    assignment_statement : var_call EQ value SEMICOLON\n    \n    assignment_statement : IDENT assign_tail SEMICOLON\n    \n    assign_tail : DOT SPLICE LPAREN start COMMA deleteCount COMMA splice_items RPAREN  \n                | DOT PUSH LPAREN list_element RPAREN                                  \n                | assign_op assign_value                                                     \n    assign_value : assign_type_cast\n             | assign_expression\n             | function_call\n    assign_expression : assign_factor assign_factor_tail\n    \n    assign_factor : assign_var_call assign_postfix           \n           | assign_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN assign_factor RPAREN  \n    \n    assign_var_call : IDENT assign_list_index  \n    \n    assign_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    assign_postfix : empty        \n            | assign_postfix_op  \n    \n    assign_list_index : LBRACKET assign_index RBRACKET assign_list_index2  \n               | empty                                \n    \n    assign_list_index2 : LBRACKET assign_index RBRACKET \n                | empty                   \n    assign_index : INT_LITassign_index : IDENT\n    assign_factor_tail : PLUS assign_factor assign_factor_tail\n                | MINUS assign_factor assign_factor_tail\n                | MULTIPLY assign_factor assign_factor_tail\n                | DIVISION assign_factor assign_factor_tail\n                | MODULO assign_factor assign_factor_tail\n                | EXPONENT assign_factor assign_factor_tail\n                | GT assign_factor assign_factor_tail\n                | LT assign_factor assign_factor_tail\n                | EQ_EQ assign_factor assign_factor_tail\n                | GT_EQ assign_factor assign_factor_tail\n                | LT_EQ assign_factor assign_factor_tail\n                | NOT_EQ assign_factor assign_factor_tail\n                | AND assign_factor assign_factor_tail\n                | OR assign_factor assign_factor_tail\n                | empty\n    \n    assign_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    assign_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    assign_op : compound_op  \n              | EQ           \n    \n    compound_op : PLUS_EQ \n                | MINUS_EQ  \n                | MUL_EQ   \n                | DIV_EQ    \n                | MOD_EQ   \n    \n    start : INT_LIT \n    \n    deleteCount : empty     \n                | INT_LIT  \n    \n    splice_items : empty          \n                 | list_element  \n    \n    var_call : IDENT list_index  \n    \n    list_index : LBRACKET index RBRACKET list_index2  \n               | empty                                \n    \n    list_index2 : LBRACKET index RBRACKET \n                | empty                   \n    index : INT_LITindex : IDENT\n    postfix : empty        \n            | postfix_op  \n    \n    value : type_cast     \n          | value_expression   \n          | function_call \n    \n    value_expression : value_factor value_factor_tail\n    \n    value_factor : value_var_call value_postfix           \n           | value_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN value_factor RPAREN    \n    \n    value_var_call : IDENT value_list_index  \n    \n    value_postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    value_postfix : empty        \n            | value_postfix_op  \n    \n    value_list_index : LBRACKET value_index RBRACKET value_list_index2  \n               | empty                                \n    \n    value_list_index2 : LBRACKET value_index RBRACKET \n                | empty                   \n    value_index : INT_LITvalue_index : IDENT\n    value_factor_tail : PLUS value_factor value_factor_tail\n                | MINUS value_factor value_factor_tail\n                | MULTIPLY value_factor value_factor_tail\n                | DIVISION value_factor value_factor_tail\n                | MODULO value_factor value_factor_tail\n                | EXPONENT value_factor value_factor_tail\n                | GT value_factor value_factor_tail\n                | LT value_factor value_factor_tail\n                | EQ_EQ value_factor value_factor_tail\n                | GT_EQ value_factor value_factor_tail\n                | LT_EQ value_factor value_factor_tail\n                | NOT_EQ value_factor value_factor_tail\n                | AND value_factor value_factor_tail\n                | OR value_factor value_factor_tail\n                | empty\n    \n    value_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN \n              | CONVERT_TO_FLT LPAREN typecast_value RPAREN  \n              | CONVERT_TO_BLN LPAREN typecast_value RPAREN  \n              | CONVERT_TO_STR LPAREN typecast_value RPAREN \n    \n    typecast_value : typecast_expression                           \n                   | FUNCTION_NAME LPAREN RPAREN          \n                   | input_statement                     \n    \n    typecast_expression : typecast_factor typecast_factor_tail\n    \n    typecast_factor : var_call postfix           \n           | typecast_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN typecast_factor RPAREN    \n    \n    typecast_factor_tail : PLUS typecast_factor typecast_factor_tail\n                | MINUS typecast_factor typecast_factor_tail\n                | MULTIPLY typecast_factor typecast_factor_tail\n                | DIVISION typecast_factor typecast_factor_tail\n                | MODULO typecast_factor typecast_factor_tail\n                | EXPONENT typecast_factor typecast_factor_tail\n                | GT typecast_factor typecast_factor_tail\n                | LT typecast_factor typecast_factor_tail\n                | EQ_EQ typecast_factor typecast_factor_tail\n                | GT_EQ typecast_factor typecast_factor_tail\n                | LT_EQ typecast_factor typecast_factor_tail\n                | NOT_EQ typecast_factor typecast_factor_tail\n                | AND typecast_factor typecast_factor_tail\n                | OR typecast_factor typecast_factor_tail\n                | empty\n    \n    typecast_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    input_statement : INPUT LPAREN RPAREN  \n    empty :'
    
_lr_action_items = {'BIRTH':([0,],[2,]),'$end':([1,111,],[0,-1,]),'LBRACE':([2,112,171,262,518,626,656,1078,1196,1248,1291,],[3,170,219,317,744,836,868,1155,1251,1282,1296,]),'FUNCTION':([3,4,6,29,38,39,496,],[-608,17,-4,-608,-3,-5,17,]),'FUNCTION_INT':([3,4,6,29,38,39,496,],[-608,19,-4,-608,-3,-5,19,]),'FUNCTION_FLT':([3,4,6,29,38,39,496,],[-608,20,-4,-608,-3,-5,20,]),'FUNCTION_CHR':([3,4,6,29,38,39,496,],[-608,21,-4,-608,-3,-5,21,]),'FUNCTION_BLN':([3,4,6,29,38,39,496,],[-608,22,-4,-608,-3,-5,22,]),'FUNCTION_STR':([3,4,6,29,38,39,496,],[-608,23,-4,-608,-3,-5,23,]),'FUNCTION_LIST_INT':([3,4,6,29,38,39,496,],[-608,24,-4,-608,-3,-5,24,]),'FUNCTION_LIST_FLT':([3,4,6,29,38,39,496,],[-608,25,-4,-608,-3,-5,25,]),'FUNCTION_LIST_CHR':([3,4,6,29,38,39,496,],[-608,26,-4,-608,-3,-5,26,]),'FUNCTION_LIST_STR':([3,4,6,29,38,39,496,],[-608,27,-4,-608,-3,-5,27,]),'FUNCTION_LIST_BLN':([3,4,6,29,38,39,496,],[-608,28,-4,-608,-3,-5,28,]),'MAIN_CASPER':([3,4,6,14,16,29,38,39,496,710,711,712,],[-608,-608,-4,36,-96,-608,-3,-5,-608,-95,-97,-96,]),'INT':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,293,315,317,319,352,556,588,770,836,868,1146,1155,1156,1216,1251,1282,1286,1292,1295,1296,],[9,9,9,214,-171,214,214,9,214,214,214,214,214,214,-321,-322,-323,-410,445,214,-170,-465,-464,-417,-409,214,214,-362,214,214,-400,214,214,-273,-324,-233,214,]),'FLT':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,293,317,319,352,556,588,770,836,868,1146,1155,1156,1216,1251,1282,1286,1292,1295,1296,],[10,10,10,215,-171,215,215,10,215,215,215,215,215,215,-321,-322,-323,-410,215,-170,-465,-464,-417,-409,215,215,-362,215,215,-400,215,215,-273,-324,-233,215,]),'BLN':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,293,317,319,352,556,588,770,836,868,1146,1155,1156,1216,1251,1282,1286,1292,1295,1296,],[11,11,11,216,-171,216,216,11,216,216,216,216,216,216,-321,-322,-323,-410,216,-170,-465,-464,-417,-409,216,216,-362,216,216,-400,216,216,-273,-324,-233,216,]),'CHR':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,293,317,319,352,556,588,770,836,868,1146,1155,1156,1216,1251,1282,1286,1292,1295,1296,],[12,12,12,217,-171,217,217,12,217,217,217,217,217,217,-321,-322,-323,-410,217,-170,-465,-464,-417,-409,217,217,-362,217,217,-400,217,217,-273,-324,-233,217,]),'STR':([3,29,61,170,210,211,219,221,243,245,246,247,248,249,252,253,254,293,317,319,352,556,588,770,836,868,1146,1155,1156,1216,1251,1282,1286,1292,1295,1296,],[13,13,13,218,-171,218,218,13,218,218,218,218,218,218,-321,-322,-323,-410,218,-170,-465,-464,-417,-409,218,218,-362,218,218,-400,218,218,-273,-324,-233,218,]),'SEMICOLON':([5,7,30,31,34,40,41,42,43,44,46,47,49,50,52,53,54,55,56,57,62,63,65,66,81,88,89,90,91,92,93,94,107,109,110,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,137,168,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,207,208,212,239,240,256,264,265,268,282,293,295,296,297,298,304,305,306,308,309,310,311,312,313,320,321,322,323,324,325,326,332,333,334,336,337,338,339,340,341,342,343,350,355,356,357,358,364,365,366,368,369,370,371,372,373,379,380,381,382,388,389,390,392,393,394,395,396,397,398,400,406,421,422,423,424,425,426,427,428,429,431,444,459,460,461,463,469,484,485,486,487,488,489,490,491,492,494,495,526,541,542,543,544,545,546,547,548,549,551,552,562,577,578,579,580,581,582,583,584,585,587,589,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,684,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,708,709,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,770,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,794,796,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,855,856,857,858,860,861,862,863,864,865,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,990,991,1010,1025,1026,1027,1028,1029,1030,1031,1032,1033,1035,1036,1037,1038,1057,1058,1102,1103,1105,1106,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1191,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1217,1246,1247,1254,1255,1281,1293,],[29,-608,-6,-12,-608,-608,-608,-17,-18,-608,-608,-31,-89,-90,-608,-91,-92,-93,-7,-8,-13,-14,-16,-29,-86,-30,-532,-533,-407,-408,-32,-33,-525,-527,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-19,-34,-9,-10,-15,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-608,-11,-608,-526,-529,293,319,-182,-608,352,-410,-608,-418,-419,-420,-608,-608,-423,-453,-454,-608,-455,-456,-457,-608,-608,-187,-188,-189,-190,-191,-608,-608,-194,-224,-225,-608,-226,-227,-228,-172,-178,-528,-468,-469,-470,-471,-608,-608,-474,-504,-505,-608,-506,-507,-508,556,-534,-535,-536,-608,-608,-539,-569,-570,-608,-571,-572,-573,588,-463,-421,-452,-422,-430,-431,-428,-429,-424,-425,-427,-433,653,-607,-183,-184,-186,-192,-223,-193,-201,-202,-199,-200,-195,-196,-198,-204,-608,-472,-503,-473,-481,-482,-479,-480,-475,-476,-478,-484,770,-537,-568,-538,-546,-547,-544,-545,-540,-541,-543,-549,-608,-426,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-197,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-179,-180,-477,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-409,-542,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-462,-458,-459,-460,-461,-438,-439,-440,-441,-442,-443,-444,-445,-446,-447,-448,-449,-450,-451,-608,1009,-608,-608,-327,-357,-358,-608,-359,-360,-361,-185,-229,-230,-231,-232,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,-221,-222,-608,-181,-467,-509,-510,-511,-512,-489,-490,-491,-492,-493,-494,-495,-496,-497,-498,-499,-500,-501,-502,-608,-574,-575,-576,-577,-554,-555,-556,-557,-558,-559,-560,-561,-562,-563,-564,-565,-566,-567,-608,-432,-435,-325,-356,-326,-334,-335,-332,-333,-328,-329,-331,-337,-401,-402,-403,-203,-206,-483,-486,-548,-551,-330,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-434,-342,-343,-344,-345,-346,-347,-348,-349,-350,-351,-352,-353,-354,-355,-608,-205,-485,-550,-336,-339,-466,-338,]),'COMMA':([7,34,40,41,42,43,44,46,47,49,50,52,53,54,55,56,57,66,81,83,84,85,86,87,88,89,90,91,92,93,94,107,109,110,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,137,168,169,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,207,208,212,239,240,268,293,295,296,297,298,304,305,306,308,309,310,311,312,313,320,321,322,323,324,325,326,332,333,334,336,337,338,339,340,341,342,343,348,350,376,377,378,380,381,382,388,389,390,392,393,394,395,396,397,406,421,422,423,424,425,426,427,428,429,431,469,484,485,486,487,488,489,490,491,492,494,495,562,577,578,579,580,581,582,583,584,585,587,589,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,684,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,708,709,745,746,770,771,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,796,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,932,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,990,991,1057,1058,1098,1099,1100,1105,1106,1191,1217,1247,],[32,-608,32,64,-17,-18,-608,-608,-31,-89,-90,-608,-91,-92,-93,-7,-8,-29,-86,133,133,-87,-88,-94,-30,-532,-533,-407,-408,-32,-33,-525,-527,-608,32,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-19,-34,-9,-10,221,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-608,-11,266,-526,-529,-608,-410,399,-418,-419,-420,-608,-608,-423,-453,-454,-608,-455,-456,-457,266,462,-187,-188,-189,-190,-191,-608,-608,-194,-224,-225,-608,-226,-227,-228,-172,-178,221,-528,554,-415,-416,-534,-535,-536,-608,-608,-539,-569,-570,-608,-571,-572,-573,-421,-452,-422,-430,-431,-428,-429,-424,-425,-427,-433,-192,-223,-193,-201,-202,-199,-200,-195,-196,-198,-204,-608,-537,-568,-538,-546,-547,-544,-545,-540,-541,-543,-549,399,-426,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,266,-197,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-179,-180,932,-520,-409,554,-542,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-458,-459,-460,-461,-438,-439,-440,-441,-442,-443,-444,-445,-446,-447,-448,-449,-450,-451,-608,-229,-230,-231,-232,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,-221,-222,-608,-181,-608,-574,-575,-576,-577,-554,-555,-556,-557,-558,-559,-560,-561,-562,-563,-564,-565,-566,-567,-608,-432,-435,-203,-206,1188,-521,-522,-548,-551,-434,-205,-550,]),'EQ':([7,34,40,56,57,107,109,110,116,168,169,207,208,212,239,240,251,257,268,320,342,343,350,495,654,684,708,709,907,],[33,-608,33,-7,-8,-525,-527,-608,33,-9,-10,-608,-11,267,-526,-529,286,294,-608,267,-172,-178,-528,-608,866,267,-179,-180,-181,]),'IDENT':([8,9,10,11,12,13,32,33,51,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,108,114,139,140,141,142,143,144,145,146,147,148,149,150,151,152,162,170,210,211,213,214,215,216,217,218,219,238,243,245,246,247,248,249,252,253,254,258,266,267,270,271,281,284,285,286,287,288,289,290,291,292,293,294,300,314,316,317,319,328,346,352,360,384,399,401,403,404,405,407,408,409,410,411,412,413,414,415,416,417,418,419,420,430,432,445,446,462,464,466,467,468,470,471,472,473,474,475,476,477,478,479,480,481,482,483,493,502,521,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,550,554,556,557,559,560,561,563,564,565,566,567,568,569,570,571,572,573,574,575,576,586,588,590,628,629,630,631,632,633,634,635,636,637,638,639,640,641,651,653,658,659,660,661,662,663,664,665,666,667,668,669,670,671,681,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,742,770,799,800,801,802,803,804,805,806,807,808,809,810,811,812,836,854,866,868,931,989,1009,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1034,1055,1056,1084,1101,1104,1123,1146,1147,1152,1155,1156,1157,1159,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1186,1199,1216,1249,1251,1253,1282,1286,1287,1292,1295,1296,],[34,-24,-25,-26,-27,-28,40,52,103,116,52,52,52,52,52,52,52,52,52,52,52,52,52,52,103,166,172,103,103,103,103,103,103,103,103,103,103,103,103,103,103,206,-608,-171,251,268,-173,-174,-175,-176,-177,-608,166,-608,-608,-608,-608,-608,-608,-321,-322,-323,310,320,338,348,206,351,370,-513,-514,-515,-516,-517,-518,-519,52,-410,394,310,440,454,-608,-170,338,512,-465,370,394,394,52,52,52,52,310,310,310,310,310,310,310,310,310,310,310,310,310,310,624,440,654,454,684,52,52,52,52,338,338,338,338,338,338,338,338,338,338,338,338,338,338,706,512,52,52,52,52,370,370,370,370,370,370,370,370,370,370,370,370,370,370,769,52,-464,52,52,52,52,394,394,394,394,394,394,394,394,394,394,394,394,394,394,793,-417,52,440,440,440,440,440,440,440,440,440,440,440,440,440,440,853,862,454,454,454,454,454,454,454,454,454,454,454,454,454,454,885,52,52,52,52,512,512,512,512,512,512,512,512,512,512,512,512,512,512,929,-409,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-608,862,52,-608,1094,624,52,862,862,862,862,862,862,862,862,862,862,862,862,862,862,1145,454,706,1094,769,793,853,-362,885,929,-608,-608,52,52,52,52,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1094,1242,394,-400,440,-608,1145,-608,-273,1242,-324,-233,-608,]),'FUNCTION_NAME':([15,17,18,19,20,21,22,23,24,25,26,27,28,170,210,211,219,243,245,246,247,248,249,252,253,254,258,267,284,285,286,287,288,289,290,291,293,294,317,319,346,352,399,401,403,404,405,464,466,467,468,521,523,524,525,556,557,559,560,561,588,713,715,716,717,770,836,868,931,1146,1155,1156,1157,1159,1160,1161,1199,1216,1251,1282,1286,1292,1295,1296,],[37,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-608,-171,255,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,255,255,255,-513,-514,-515,-516,-517,-518,-519,-410,255,-608,-170,255,-465,255,593,593,593,593,593,593,593,593,593,593,593,593,-464,593,593,593,593,-417,593,593,593,593,-409,-608,-608,255,-362,-608,-608,593,593,593,593,255,-400,-608,-608,-273,-324,-233,-608,]),'LBRACKET':([33,34,45,52,103,110,133,207,237,251,267,268,310,338,370,394,440,454,495,512,520,834,862,906,952,972,1007,1054,1077,1094,1188,1214,1280,],[45,58,45,108,162,167,45,238,271,108,45,344,430,493,550,586,651,681,707,742,45,989,1034,1056,1101,1104,1123,1147,1152,1186,45,1253,1287,]),'TILDE':([33,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,294,300,314,316,328,346,360,384,399,401,403,404,405,407,408,409,410,411,412,413,414,415,416,417,418,419,420,432,446,464,466,467,468,470,471,472,473,474,475,476,477,478,479,480,481,482,483,502,521,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,557,559,560,561,563,564,565,566,567,568,569,570,571,572,573,574,575,576,590,628,629,630,631,632,633,634,635,636,637,638,639,640,641,653,658,659,660,661,662,663,664,665,666,667,668,669,670,671,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,799,800,801,802,803,804,805,806,807,808,809,810,811,812,854,931,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1055,1084,1157,1159,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1199,1249,],[48,100,48,48,48,48,48,48,48,48,48,48,48,48,48,48,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,307,335,367,-513,-514,-515,-516,-517,-518,-519,391,307,437,451,335,509,367,391,391,598,598,598,598,307,307,307,307,307,307,307,307,307,307,307,307,307,307,437,451,598,598,598,598,335,335,335,335,335,335,335,335,335,335,335,335,335,335,509,598,598,598,598,367,367,367,367,367,367,367,367,367,367,367,367,367,367,598,598,598,598,391,391,391,391,391,391,391,391,391,391,391,391,391,391,598,437,437,437,437,437,437,437,437,437,437,437,437,437,437,859,451,451,451,451,451,451,451,451,451,451,451,451,451,451,598,598,598,598,509,509,509,509,509,509,509,509,509,509,509,509,509,509,598,598,598,598,598,598,598,598,598,598,598,598,598,598,859,1091,859,859,859,859,859,859,859,859,859,859,859,859,859,859,451,1091,598,598,598,598,1091,1091,1091,1091,1091,1091,1091,1091,1091,1091,1091,1091,1091,1091,391,437,]),'LPAREN':([33,36,37,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,250,255,258,259,260,261,263,267,284,285,286,287,288,289,290,291,294,299,300,301,302,303,314,316,327,328,329,330,331,346,353,354,359,360,361,362,363,383,384,385,386,387,399,401,403,404,405,407,408,409,410,411,412,413,414,415,416,417,418,419,420,432,446,464,466,467,468,470,471,472,473,474,475,476,477,478,479,480,481,482,483,501,502,503,504,505,521,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,557,559,560,561,563,564,565,566,567,568,569,570,571,572,573,574,575,576,590,593,628,629,630,631,632,633,634,635,636,637,638,639,640,641,653,658,659,660,661,662,663,664,665,666,667,668,669,670,671,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,799,800,801,802,803,804,805,806,807,808,809,810,811,812,854,886,931,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1055,1083,1084,1085,1086,1087,1157,1159,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1193,1199,1249,],[51,60,61,95,51,51,51,51,51,51,51,51,51,51,51,51,51,51,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,281,292,300,314,315,316,318,328,360,-513,-514,-515,-516,-517,-518,-519,384,401,300,403,404,405,432,446,464,328,466,467,468,502,519,520,521,360,523,524,525,557,384,559,560,561,384,590,590,590,590,300,300,300,300,300,300,300,300,300,300,300,300,300,300,432,446,590,590,590,590,328,328,328,328,328,328,328,328,328,328,328,328,328,328,713,502,715,716,717,590,590,590,590,360,360,360,360,360,360,360,360,360,360,360,360,360,360,590,590,590,590,384,384,384,384,384,384,384,384,384,384,384,384,384,384,590,797,432,432,432,432,432,432,432,432,432,432,432,432,432,432,854,446,446,446,446,446,446,446,446,446,446,446,446,446,446,590,590,590,590,502,502,502,502,502,502,502,502,502,502,502,502,502,502,590,590,590,590,590,590,590,590,590,590,590,590,590,590,854,1055,1084,854,854,854,854,854,854,854,854,854,854,854,854,854,854,446,1157,1084,1159,1160,1161,590,590,590,590,1084,1084,1084,1084,1084,1084,1084,1084,1084,1084,1084,1084,1084,1084,1249,384,432,]),'INT_LIT':([33,45,48,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,100,108,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,162,238,258,267,271,284,285,286,287,288,289,290,291,292,294,300,307,314,316,328,335,346,360,367,384,391,399,401,403,404,405,407,408,409,410,411,412,413,414,415,416,417,418,419,420,430,432,437,446,451,464,466,467,468,470,471,472,473,474,475,476,477,478,479,480,481,482,483,493,502,509,519,520,521,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,550,554,557,559,560,561,563,564,565,566,567,568,569,570,571,572,573,574,575,576,586,590,598,628,629,630,631,632,633,634,635,636,637,638,639,640,641,651,653,658,659,660,661,662,663,664,665,666,667,668,669,670,671,681,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,742,799,800,801,802,803,804,805,806,807,808,809,810,811,812,854,859,866,931,932,989,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1034,1055,1056,1084,1091,1101,1104,1123,1147,1152,1157,1159,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1186,1188,1199,1249,1253,1287,],[49,49,93,101,49,49,49,49,49,49,49,49,49,49,49,49,49,49,101,159,165,49,101,101,101,101,101,101,101,101,101,101,101,101,101,101,205,165,308,336,205,368,-513,-514,-515,-516,-517,-518,-519,49,392,308,427,438,452,336,490,510,368,547,392,583,392,599,599,599,599,308,308,308,308,308,308,308,308,308,308,308,308,308,308,623,438,648,452,678,599,599,599,599,336,336,336,336,336,336,336,336,336,336,336,336,336,336,705,510,739,746,49,599,599,599,599,368,368,368,368,368,368,368,368,368,368,368,368,368,368,768,49,599,599,599,599,392,392,392,392,392,392,392,392,392,392,392,392,392,392,792,599,815,438,438,438,438,438,438,438,438,438,438,438,438,438,438,852,860,452,452,452,452,452,452,452,452,452,452,452,452,452,452,884,599,599,599,599,510,510,510,510,510,510,510,510,510,510,510,510,510,510,928,599,599,599,599,599,599,599,599,599,599,599,599,599,599,860,1031,1037,1092,1100,623,860,860,860,860,860,860,860,860,860,860,860,860,860,860,1144,452,705,1092,1183,768,792,852,884,928,599,599,599,599,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1241,49,392,438,1144,1241,]),'FLT_LIT':([33,45,48,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,100,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,292,294,300,307,314,316,328,335,346,360,367,384,391,399,401,403,404,405,407,408,409,410,411,412,413,414,415,416,417,418,419,420,432,437,446,451,464,466,467,468,470,471,472,473,474,475,476,477,478,479,480,481,482,483,502,509,520,521,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,554,557,559,560,561,563,564,565,566,567,568,569,570,571,572,573,574,575,576,590,598,628,629,630,631,632,633,634,635,636,637,638,639,640,641,653,658,659,660,661,662,663,664,665,666,667,668,669,670,671,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,799,800,801,802,803,804,805,806,807,808,809,810,811,812,854,859,931,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1055,1084,1091,1157,1159,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1188,1199,1249,],[50,50,94,102,50,50,50,50,50,50,50,50,50,50,50,50,50,50,102,160,50,102,102,102,102,102,102,102,102,102,102,102,102,102,102,309,337,369,-513,-514,-515,-516,-517,-518,-519,50,393,309,428,439,453,337,491,511,369,548,393,584,393,600,600,600,600,309,309,309,309,309,309,309,309,309,309,309,309,309,309,439,649,453,679,600,600,600,600,337,337,337,337,337,337,337,337,337,337,337,337,337,337,511,740,50,600,600,600,600,369,369,369,369,369,369,369,369,369,369,369,369,369,369,50,600,600,600,600,393,393,393,393,393,393,393,393,393,393,393,393,393,393,600,816,439,439,439,439,439,439,439,439,439,439,439,439,439,439,861,453,453,453,453,453,453,453,453,453,453,453,453,453,453,600,600,600,600,511,511,511,511,511,511,511,511,511,511,511,511,511,511,600,600,600,600,600,600,600,600,600,600,600,600,600,600,861,1032,1093,861,861,861,861,861,861,861,861,861,861,861,861,861,861,453,1093,1184,600,600,600,600,1093,1093,1093,1093,1093,1093,1093,1093,1093,1093,1093,1093,1093,1093,50,393,439,]),'DAY':([33,45,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,292,294,300,314,316,328,346,360,384,399,401,403,404,405,407,408,409,410,411,412,413,414,415,416,417,418,419,420,432,446,464,466,467,468,470,471,472,473,474,475,476,477,478,479,480,481,482,483,502,520,521,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,554,557,559,560,561,563,564,565,566,567,568,569,570,571,572,573,574,575,576,590,628,629,630,631,632,633,634,635,636,637,638,639,640,641,653,658,659,660,661,662,663,664,665,666,667,668,669,670,671,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,799,800,801,802,803,804,805,806,807,808,809,810,811,812,854,931,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1055,1084,1157,1159,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1188,1199,1249,],[53,53,104,53,53,53,53,53,53,53,53,53,53,53,53,53,53,104,53,104,104,104,104,104,104,104,104,104,104,104,104,104,104,311,339,371,-513,-514,-515,-516,-517,-518,-519,53,395,311,441,455,339,513,371,395,395,601,601,601,601,311,311,311,311,311,311,311,311,311,311,311,311,311,311,441,455,601,601,601,601,339,339,339,339,339,339,339,339,339,339,339,339,339,339,513,53,601,601,601,601,371,371,371,371,371,371,371,371,371,371,371,371,371,371,53,601,601,601,601,395,395,395,395,395,395,395,395,395,395,395,395,395,395,601,441,441,441,441,441,441,441,441,441,441,441,441,441,441,863,455,455,455,455,455,455,455,455,455,455,455,455,455,455,601,601,601,601,513,513,513,513,513,513,513,513,513,513,513,513,513,513,601,601,601,601,601,601,601,601,601,601,601,601,601,601,863,1095,863,863,863,863,863,863,863,863,863,863,863,863,863,863,455,1095,601,601,601,601,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,1095,53,395,441,]),'NIGHT':([33,45,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,292,294,300,314,316,328,346,360,384,399,401,403,404,405,407,408,409,410,411,412,413,414,415,416,417,418,419,420,432,446,464,466,467,468,470,471,472,473,474,475,476,477,478,479,480,481,482,483,502,520,521,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,554,557,559,560,561,563,564,565,566,567,568,569,570,571,572,573,574,575,576,590,628,629,630,631,632,633,634,635,636,637,638,639,640,641,653,658,659,660,661,662,663,664,665,666,667,668,669,670,671,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,799,800,801,802,803,804,805,806,807,808,809,810,811,812,854,931,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1055,1084,1157,1159,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1188,1199,1249,],[54,54,105,54,54,54,54,54,54,54,54,54,54,54,54,54,54,105,54,105,105,105,105,105,105,105,105,105,105,105,105,105,105,312,340,372,-513,-514,-515,-516,-517,-518,-519,54,396,312,442,456,340,514,372,396,396,602,602,602,602,312,312,312,312,312,312,312,312,312,312,312,312,312,312,442,456,602,602,602,602,340,340,340,340,340,340,340,340,340,340,340,340,340,340,514,54,602,602,602,602,372,372,372,372,372,372,372,372,372,372,372,372,372,372,54,602,602,602,602,396,396,396,396,396,396,396,396,396,396,396,396,396,396,602,442,442,442,442,442,442,442,442,442,442,442,442,442,442,864,456,456,456,456,456,456,456,456,456,456,456,456,456,456,602,602,602,602,514,514,514,514,514,514,514,514,514,514,514,514,514,514,602,602,602,602,602,602,602,602,602,602,602,602,602,602,864,1096,864,864,864,864,864,864,864,864,864,864,864,864,864,864,456,1096,602,602,602,602,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,1096,54,396,442,]),'STR_LIT':([33,45,51,67,68,69,70,71,72,73,74,75,76,77,78,79,80,95,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,258,267,284,285,286,287,288,289,290,291,292,294,300,314,316,328,346,360,384,399,401,403,404,405,407,408,409,410,411,412,413,414,415,416,417,418,419,420,432,446,464,466,467,468,470,471,472,473,474,475,476,477,478,479,480,481,482,483,502,520,521,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,554,557,559,560,561,563,564,565,566,567,568,569,570,571,572,573,574,575,576,590,628,629,630,631,632,633,634,635,636,637,638,639,640,641,653,658,659,660,661,662,663,664,665,666,667,668,669,670,671,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,799,800,801,802,803,804,805,806,807,808,809,810,811,812,854,931,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1055,1084,1157,1159,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1188,1199,1249,],[55,55,106,55,55,55,55,55,55,55,55,55,55,55,55,55,55,106,55,106,106,106,106,106,106,106,106,106,106,106,106,106,106,313,341,373,-513,-514,-515,-516,-517,-518,-519,55,397,313,443,457,341,515,373,397,397,603,603,603,603,313,313,313,313,313,313,313,313,313,313,313,313,313,313,443,457,603,603,603,603,341,341,341,341,341,341,341,341,341,341,341,341,341,341,515,55,603,603,603,603,373,373,373,373,373,373,373,373,373,373,373,373,373,373,55,603,603,603,603,397,397,397,397,397,397,397,397,397,397,397,397,397,397,603,443,443,443,443,443,443,443,443,443,443,443,443,443,443,865,457,457,457,457,457,457,457,457,457,457,457,457,457,457,603,603,603,603,515,515,515,515,515,515,515,515,515,515,515,515,515,515,603,603,603,603,603,603,603,603,603,603,603,603,603,603,865,1097,865,865,865,865,865,865,865,865,865,865,865,865,865,865,457,1097,603,603,603,603,1097,1097,1097,1097,1097,1097,1097,1097,1097,1097,1097,1097,1097,1097,55,397,443,]),'RBRACE':([35,170,209,210,211,219,241,242,243,244,245,246,247,248,249,252,253,254,269,275,276,277,278,279,280,293,317,319,345,347,352,458,497,498,499,500,506,507,508,510,511,512,513,514,515,556,588,718,733,734,735,736,737,738,739,740,741,743,770,836,868,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,992,1039,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1146,1153,1154,1155,1216,1219,1251,1257,1258,1282,1284,1286,1290,1292,1295,1296,1298,],[59,-608,241,-161,-608,-608,-2,-162,-608,-169,-608,-608,-608,-608,-608,-321,-322,-323,-608,-163,-164,-165,-166,-167,-168,-410,-608,-170,496,-116,-465,683,-115,-117,-118,-119,-608,-608,-122,-152,-153,-608,-154,-155,-156,-464,-417,-120,-151,-121,-129,-130,-127,-128,-123,-124,-126,-132,-409,-608,-608,-125,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,1122,1146,-157,-158,-159,-160,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-608,-362,-131,-134,-608,-400,1258,-608,-133,1286,-608,1292,-273,1295,-324,-233,-608,1299,]),'PLUS':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[67,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,139,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-608,-608,-526,-529,-46,-49,407,-608,-423,-453,-454,-608,-455,-456,-457,470,-608,-194,-224,-225,-608,-226,-227,-228,-528,527,-608,-474,-504,-505,-608,-506,-507,-508,563,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,628,-608,-238,-268,-269,-608,-270,-271,-272,658,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,719,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,799,-608,-583,-602,-603,-604,-605,-606,-426,407,407,407,407,407,407,407,407,407,407,407,407,407,407,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,470,470,470,470,470,470,470,470,470,470,470,470,470,470,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,527,527,527,527,527,527,527,527,527,527,527,527,527,527,-542,563,563,563,563,563,563,563,563,563,563,563,563,563,563,-582,-584,-585,-608,-241,628,628,628,628,628,628,628,628,628,628,628,628,628,628,1011,-608,-327,-357,-358,-608,-359,-360,-361,-368,658,658,658,658,658,658,658,658,658,658,658,658,658,658,-608,-125,719,719,719,719,719,719,719,719,719,719,719,719,719,719,-608,-608,-586,799,799,799,799,799,799,799,799,799,799,799,799,799,799,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1163,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1011,1011,1011,1011,1011,1011,1011,1011,1011,1011,1011,1011,1011,1011,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1163,1163,1163,1163,1163,1163,1163,1163,1163,1163,1163,1163,1163,1163,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'MINUS':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[68,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,140,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,140,140,140,140,140,140,140,140,140,140,140,140,140,140,-608,-608,-526,-529,-46,-49,408,-608,-423,-453,-454,-608,-455,-456,-457,471,-608,-194,-224,-225,-608,-226,-227,-228,-528,528,-608,-474,-504,-505,-608,-506,-507,-508,564,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,629,-608,-238,-268,-269,-608,-270,-271,-272,659,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,720,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,800,-608,-583,-602,-603,-604,-605,-606,-426,408,408,408,408,408,408,408,408,408,408,408,408,408,408,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,471,471,471,471,471,471,471,471,471,471,471,471,471,471,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,528,528,528,528,528,528,528,528,528,528,528,528,528,528,-542,564,564,564,564,564,564,564,564,564,564,564,564,564,564,-582,-584,-585,-608,-241,629,629,629,629,629,629,629,629,629,629,629,629,629,629,1012,-608,-327,-357,-358,-608,-359,-360,-361,-368,659,659,659,659,659,659,659,659,659,659,659,659,659,659,-608,-125,720,720,720,720,720,720,720,720,720,720,720,720,720,720,-608,-608,-586,800,800,800,800,800,800,800,800,800,800,800,800,800,800,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1164,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1012,1012,1012,1012,1012,1012,1012,1012,1012,1012,1012,1012,1012,1012,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1164,1164,1164,1164,1164,1164,1164,1164,1164,1164,1164,1164,1164,1164,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'MULTIPLY':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[69,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,141,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,141,141,141,141,141,141,141,141,141,141,141,141,141,141,-608,-608,-526,-529,-46,-49,409,-608,-423,-453,-454,-608,-455,-456,-457,472,-608,-194,-224,-225,-608,-226,-227,-228,-528,529,-608,-474,-504,-505,-608,-506,-507,-508,565,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,630,-608,-238,-268,-269,-608,-270,-271,-272,660,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,721,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,801,-608,-583,-602,-603,-604,-605,-606,-426,409,409,409,409,409,409,409,409,409,409,409,409,409,409,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,472,472,472,472,472,472,472,472,472,472,472,472,472,472,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,529,529,529,529,529,529,529,529,529,529,529,529,529,529,-542,565,565,565,565,565,565,565,565,565,565,565,565,565,565,-582,-584,-585,-608,-241,630,630,630,630,630,630,630,630,630,630,630,630,630,630,1013,-608,-327,-357,-358,-608,-359,-360,-361,-368,660,660,660,660,660,660,660,660,660,660,660,660,660,660,-608,-125,721,721,721,721,721,721,721,721,721,721,721,721,721,721,-608,-608,-586,801,801,801,801,801,801,801,801,801,801,801,801,801,801,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1165,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1013,1013,1013,1013,1013,1013,1013,1013,1013,1013,1013,1013,1013,1013,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1165,1165,1165,1165,1165,1165,1165,1165,1165,1165,1165,1165,1165,1165,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'DIVISION':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[70,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,142,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,142,142,142,142,142,142,142,142,142,142,142,142,142,142,-608,-608,-526,-529,-46,-49,410,-608,-423,-453,-454,-608,-455,-456,-457,473,-608,-194,-224,-225,-608,-226,-227,-228,-528,530,-608,-474,-504,-505,-608,-506,-507,-508,566,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,631,-608,-238,-268,-269,-608,-270,-271,-272,661,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,722,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,802,-608,-583,-602,-603,-604,-605,-606,-426,410,410,410,410,410,410,410,410,410,410,410,410,410,410,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,473,473,473,473,473,473,473,473,473,473,473,473,473,473,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,530,530,530,530,530,530,530,530,530,530,530,530,530,530,-542,566,566,566,566,566,566,566,566,566,566,566,566,566,566,-582,-584,-585,-608,-241,631,631,631,631,631,631,631,631,631,631,631,631,631,631,1014,-608,-327,-357,-358,-608,-359,-360,-361,-368,661,661,661,661,661,661,661,661,661,661,661,661,661,661,-608,-125,722,722,722,722,722,722,722,722,722,722,722,722,722,722,-608,-608,-586,802,802,802,802,802,802,802,802,802,802,802,802,802,802,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1166,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,1014,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1166,1166,1166,1166,1166,1166,1166,1166,1166,1166,1166,1166,1166,1166,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'MODULO':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[71,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,143,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,143,143,143,143,143,143,143,143,143,143,143,143,143,143,-608,-608,-526,-529,-46,-49,411,-608,-423,-453,-454,-608,-455,-456,-457,474,-608,-194,-224,-225,-608,-226,-227,-228,-528,531,-608,-474,-504,-505,-608,-506,-507,-508,567,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,632,-608,-238,-268,-269,-608,-270,-271,-272,662,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,723,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,803,-608,-583,-602,-603,-604,-605,-606,-426,411,411,411,411,411,411,411,411,411,411,411,411,411,411,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,474,474,474,474,474,474,474,474,474,474,474,474,474,474,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,531,531,531,531,531,531,531,531,531,531,531,531,531,531,-542,567,567,567,567,567,567,567,567,567,567,567,567,567,567,-582,-584,-585,-608,-241,632,632,632,632,632,632,632,632,632,632,632,632,632,632,1015,-608,-327,-357,-358,-608,-359,-360,-361,-368,662,662,662,662,662,662,662,662,662,662,662,662,662,662,-608,-125,723,723,723,723,723,723,723,723,723,723,723,723,723,723,-608,-608,-586,803,803,803,803,803,803,803,803,803,803,803,803,803,803,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1167,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1015,1015,1015,1015,1015,1015,1015,1015,1015,1015,1015,1015,1015,1015,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1167,1167,1167,1167,1167,1167,1167,1167,1167,1167,1167,1167,1167,1167,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'EXPONENT':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[72,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,144,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,144,144,144,144,144,144,144,144,144,144,144,144,144,144,-608,-608,-526,-529,-46,-49,412,-608,-423,-453,-454,-608,-455,-456,-457,475,-608,-194,-224,-225,-608,-226,-227,-228,-528,532,-608,-474,-504,-505,-608,-506,-507,-508,568,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,633,-608,-238,-268,-269,-608,-270,-271,-272,663,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,724,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,804,-608,-583,-602,-603,-604,-605,-606,-426,412,412,412,412,412,412,412,412,412,412,412,412,412,412,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,475,475,475,475,475,475,475,475,475,475,475,475,475,475,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,532,532,532,532,532,532,532,532,532,532,532,532,532,532,-542,568,568,568,568,568,568,568,568,568,568,568,568,568,568,-582,-584,-585,-608,-241,633,633,633,633,633,633,633,633,633,633,633,633,633,633,1016,-608,-327,-357,-358,-608,-359,-360,-361,-368,663,663,663,663,663,663,663,663,663,663,663,663,663,663,-608,-125,724,724,724,724,724,724,724,724,724,724,724,724,724,724,-608,-608,-586,804,804,804,804,804,804,804,804,804,804,804,804,804,804,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1168,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,1016,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,1168,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'GT':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[73,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,145,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,145,145,145,145,145,145,145,145,145,145,145,145,145,145,-608,-608,-526,-529,-46,-49,413,-608,-423,-453,-454,-608,-455,-456,-457,476,-608,-194,-224,-225,-608,-226,-227,-228,-528,533,-608,-474,-504,-505,-608,-506,-507,-508,569,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,634,-608,-238,-268,-269,-608,-270,-271,-272,664,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,725,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,805,-608,-583,-602,-603,-604,-605,-606,-426,413,413,413,413,413,413,413,413,413,413,413,413,413,413,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,476,476,476,476,476,476,476,476,476,476,476,476,476,476,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,533,533,533,533,533,533,533,533,533,533,533,533,533,533,-542,569,569,569,569,569,569,569,569,569,569,569,569,569,569,-582,-584,-585,-608,-241,634,634,634,634,634,634,634,634,634,634,634,634,634,634,1017,-608,-327,-357,-358,-608,-359,-360,-361,-368,664,664,664,664,664,664,664,664,664,664,664,664,664,664,-608,-125,725,725,725,725,725,725,725,725,725,725,725,725,725,725,-608,-608,-586,805,805,805,805,805,805,805,805,805,805,805,805,805,805,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1169,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,1017,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'LT':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[74,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,146,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,146,146,146,146,146,146,146,146,146,146,146,146,146,146,-608,-608,-526,-529,-46,-49,414,-608,-423,-453,-454,-608,-455,-456,-457,477,-608,-194,-224,-225,-608,-226,-227,-228,-528,534,-608,-474,-504,-505,-608,-506,-507,-508,570,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,635,-608,-238,-268,-269,-608,-270,-271,-272,665,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,726,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,806,-608,-583,-602,-603,-604,-605,-606,-426,414,414,414,414,414,414,414,414,414,414,414,414,414,414,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,477,477,477,477,477,477,477,477,477,477,477,477,477,477,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,534,534,534,534,534,534,534,534,534,534,534,534,534,534,-542,570,570,570,570,570,570,570,570,570,570,570,570,570,570,-582,-584,-585,-608,-241,635,635,635,635,635,635,635,635,635,635,635,635,635,635,1018,-608,-327,-357,-358,-608,-359,-360,-361,-368,665,665,665,665,665,665,665,665,665,665,665,665,665,665,-608,-125,726,726,726,726,726,726,726,726,726,726,726,726,726,726,-608,-608,-586,806,806,806,806,806,806,806,806,806,806,806,806,806,806,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1170,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,1170,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'EQ_EQ':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[75,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,147,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,147,147,147,147,147,147,147,147,147,147,147,147,147,147,-608,-608,-526,-529,-46,-49,415,-608,-423,-453,-454,-608,-455,-456,-457,478,-608,-194,-224,-225,-608,-226,-227,-228,-528,535,-608,-474,-504,-505,-608,-506,-507,-508,571,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,636,-608,-238,-268,-269,-608,-270,-271,-272,666,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,727,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,807,-608,-583,-602,-603,-604,-605,-606,-426,415,415,415,415,415,415,415,415,415,415,415,415,415,415,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,478,478,478,478,478,478,478,478,478,478,478,478,478,478,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,535,535,535,535,535,535,535,535,535,535,535,535,535,535,-542,571,571,571,571,571,571,571,571,571,571,571,571,571,571,-582,-584,-585,-608,-241,636,636,636,636,636,636,636,636,636,636,636,636,636,636,1019,-608,-327,-357,-358,-608,-359,-360,-361,-368,666,666,666,666,666,666,666,666,666,666,666,666,666,666,-608,-125,727,727,727,727,727,727,727,727,727,727,727,727,727,727,-608,-608,-586,807,807,807,807,807,807,807,807,807,807,807,807,807,807,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1171,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,1171,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'GT_EQ':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[76,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,148,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,148,148,148,148,148,148,148,148,148,148,148,148,148,148,-608,-608,-526,-529,-46,-49,416,-608,-423,-453,-454,-608,-455,-456,-457,479,-608,-194,-224,-225,-608,-226,-227,-228,-528,536,-608,-474,-504,-505,-608,-506,-507,-508,572,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,637,-608,-238,-268,-269,-608,-270,-271,-272,667,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,728,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,808,-608,-583,-602,-603,-604,-605,-606,-426,416,416,416,416,416,416,416,416,416,416,416,416,416,416,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,479,479,479,479,479,479,479,479,479,479,479,479,479,479,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,536,536,536,536,536,536,536,536,536,536,536,536,536,536,-542,572,572,572,572,572,572,572,572,572,572,572,572,572,572,-582,-584,-585,-608,-241,637,637,637,637,637,637,637,637,637,637,637,637,637,637,1020,-608,-327,-357,-358,-608,-359,-360,-361,-368,667,667,667,667,667,667,667,667,667,667,667,667,667,667,-608,-125,728,728,728,728,728,728,728,728,728,728,728,728,728,728,-608,-608,-586,808,808,808,808,808,808,808,808,808,808,808,808,808,808,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1172,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,1172,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'LT_EQ':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[77,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,149,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,149,149,149,149,149,149,149,149,149,149,149,149,149,149,-608,-608,-526,-529,-46,-49,417,-608,-423,-453,-454,-608,-455,-456,-457,480,-608,-194,-224,-225,-608,-226,-227,-228,-528,537,-608,-474,-504,-505,-608,-506,-507,-508,573,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,638,-608,-238,-268,-269,-608,-270,-271,-272,668,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,729,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,809,-608,-583,-602,-603,-604,-605,-606,-426,417,417,417,417,417,417,417,417,417,417,417,417,417,417,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,480,480,480,480,480,480,480,480,480,480,480,480,480,480,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,537,537,537,537,537,537,537,537,537,537,537,537,537,537,-542,573,573,573,573,573,573,573,573,573,573,573,573,573,573,-582,-584,-585,-608,-241,638,638,638,638,638,638,638,638,638,638,638,638,638,638,1021,-608,-327,-357,-358,-608,-359,-360,-361,-368,668,668,668,668,668,668,668,668,668,668,668,668,668,668,-608,-125,729,729,729,729,729,729,729,729,729,729,729,729,729,729,-608,-608,-586,809,809,809,809,809,809,809,809,809,809,809,809,809,809,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1173,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,1173,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'NOT_EQ':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[78,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,150,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,150,150,150,150,150,150,150,150,150,150,150,150,150,150,-608,-608,-526,-529,-46,-49,418,-608,-423,-453,-454,-608,-455,-456,-457,481,-608,-194,-224,-225,-608,-226,-227,-228,-528,538,-608,-474,-504,-505,-608,-506,-507,-508,574,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,639,-608,-238,-268,-269,-608,-270,-271,-272,669,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,730,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,810,-608,-583,-602,-603,-604,-605,-606,-426,418,418,418,418,418,418,418,418,418,418,418,418,418,418,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,481,481,481,481,481,481,481,481,481,481,481,481,481,481,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,538,538,538,538,538,538,538,538,538,538,538,538,538,538,-542,574,574,574,574,574,574,574,574,574,574,574,574,574,574,-582,-584,-585,-608,-241,639,639,639,639,639,639,639,639,639,639,639,639,639,639,1022,-608,-327,-357,-358,-608,-359,-360,-361,-368,669,669,669,669,669,669,669,669,669,669,669,669,669,669,-608,-125,730,730,730,730,730,730,730,730,730,730,730,730,730,730,-608,-608,-586,810,810,810,810,810,810,810,810,810,810,810,810,810,810,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1174,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,1022,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,1174,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'AND':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[79,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,151,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,151,151,151,151,151,151,151,151,151,151,151,151,151,151,-608,-608,-526,-529,-46,-49,419,-608,-423,-453,-454,-608,-455,-456,-457,482,-608,-194,-224,-225,-608,-226,-227,-228,-528,539,-608,-474,-504,-505,-608,-506,-507,-508,575,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,640,-608,-238,-268,-269,-608,-270,-271,-272,670,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,731,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,811,-608,-583,-602,-603,-604,-605,-606,-426,419,419,419,419,419,419,419,419,419,419,419,419,419,419,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,482,482,482,482,482,482,482,482,482,482,482,482,482,482,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,539,539,539,539,539,539,539,539,539,539,539,539,539,539,-542,575,575,575,575,575,575,575,575,575,575,575,575,575,575,-582,-584,-585,-608,-241,640,640,640,640,640,640,640,640,640,640,640,640,640,640,1023,-608,-327,-357,-358,-608,-359,-360,-361,-368,670,670,670,670,670,670,670,670,670,670,670,670,670,670,-608,-125,731,731,731,731,731,731,731,731,731,731,731,731,731,731,-608,-608,-586,811,811,811,811,811,811,811,811,811,811,811,811,811,811,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1175,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,1175,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'OR':([44,46,47,49,50,52,53,54,55,88,89,90,91,92,93,94,97,98,99,101,102,103,104,105,106,107,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,154,155,156,157,158,159,160,161,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,237,239,240,272,273,304,305,306,308,309,310,311,312,313,332,333,334,336,337,338,339,340,341,350,364,365,366,368,369,370,371,372,373,388,389,390,392,393,394,395,396,397,422,423,424,425,426,427,428,429,431,434,435,436,438,439,440,441,442,443,448,449,450,452,453,454,455,456,457,485,486,487,488,489,490,491,492,494,506,507,508,510,511,512,513,514,515,517,542,543,544,545,546,547,548,549,551,578,579,580,581,582,583,584,585,587,595,596,597,599,600,601,602,603,604,608,609,610,611,612,613,614,615,616,617,618,619,620,621,643,644,645,646,647,648,649,650,652,673,674,675,676,677,678,679,680,682,686,690,691,692,693,694,695,696,697,698,699,700,701,702,703,734,735,736,737,738,739,740,741,743,749,753,754,755,756,757,758,759,760,761,762,763,764,765,766,773,777,778,779,780,781,782,783,784,785,786,787,788,789,790,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,909,913,914,915,916,917,918,919,920,921,922,923,924,925,926,952,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,1007,1026,1027,1028,1029,1030,1031,1032,1033,1035,1054,1057,1058,1077,1088,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1148,1149,1153,1154,1178,1179,1180,1181,1182,1183,1184,1185,1187,1191,1214,1217,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[80,-608,-31,-89,-90,-608,-91,-92,-93,-30,-532,-533,-407,-408,-32,-33,152,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-34,-36,-44,-45,-42,-43,-38,-39,-41,-47,-40,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-608,-608,-526,-529,-46,-49,420,-608,-423,-453,-454,-608,-455,-456,-457,483,-608,-194,-224,-225,-608,-226,-227,-228,-528,540,-608,-474,-504,-505,-608,-506,-507,-508,576,-608,-539,-569,-570,-608,-571,-572,-573,-422,-430,-431,-428,-429,-424,-425,-427,-433,641,-608,-238,-268,-269,-608,-270,-271,-272,671,-608,-365,-395,-396,-608,-397,-398,-399,-193,-201,-202,-199,-200,-195,-196,-198,-204,732,-608,-122,-152,-153,-608,-154,-155,-156,-48,-473,-481,-482,-479,-480,-475,-476,-478,-484,-538,-546,-547,-544,-545,-540,-541,-543,-549,812,-608,-583,-602,-603,-604,-605,-606,-426,420,420,420,420,420,420,420,420,420,420,420,420,420,420,-237,-245,-246,-243,-244,-239,-240,-242,-248,-364,-372,-373,-370,-371,-366,-367,-369,-375,-197,483,483,483,483,483,483,483,483,483,483,483,483,483,483,-121,-129,-130,-127,-128,-123,-124,-126,-132,-477,540,540,540,540,540,540,540,540,540,540,540,540,540,540,-542,576,576,576,576,576,576,576,576,576,576,576,576,576,576,-582,-584,-585,-608,-241,641,641,641,641,641,641,641,641,641,641,641,641,641,641,1024,-608,-327,-357,-358,-608,-359,-360,-361,-368,671,671,671,671,671,671,671,671,671,671,671,671,671,671,-608,-125,732,732,732,732,732,732,732,732,732,732,732,732,732,732,-608,-608,-586,812,812,812,812,812,812,812,812,812,812,812,812,812,812,-432,-435,-608,-326,-334,-335,-332,-333,-328,-329,-331,-337,-608,-203,-206,-608,1176,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-247,-250,-330,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,-374,-377,-131,-134,-279,-287,-288,-285,-286,-281,-282,-284,-290,-434,-608,-205,-283,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,1176,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'CHR_LIT':([45,133,292,520,554,1188,],[87,87,87,87,87,87,]),'PLUS_PLUS':([46,52,98,103,107,109,161,163,207,237,239,240,272,273,305,310,333,338,350,365,370,389,394,429,431,435,440,449,454,492,494,507,512,517,549,551,585,587,596,650,652,680,682,741,743,834,857,862,906,952,972,990,991,1007,1033,1035,1054,1057,1058,1077,1089,1094,1102,1103,1105,1106,1124,1125,1128,1148,1149,1153,1154,1185,1187,1191,1214,1217,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[91,-608,157,-608,-525,-527,-41,-47,-608,-608,-526,-529,-46,-49,425,-608,488,-608,-528,545,-608,581,-608,-427,-433,646,-608,676,-608,-198,-204,737,-608,-48,-478,-484,-543,-549,91,-242,-248,-369,-375,-126,-132,-608,1029,-608,-608,-608,-608,-432,-435,-608,-331,-337,-608,-203,-206,-608,1181,-608,-483,-486,-548,-551,-247,-250,91,-374,-377,-131,-134,-284,-290,-434,-608,-205,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'MINUS_MINUS':([46,52,98,103,107,109,161,163,207,237,239,240,272,273,305,310,333,338,350,365,370,389,394,429,431,435,440,449,454,492,494,507,512,517,549,551,585,587,596,650,652,680,682,741,743,834,857,862,906,952,972,990,991,1007,1033,1035,1054,1057,1058,1077,1089,1094,1102,1103,1105,1106,1124,1125,1128,1148,1149,1153,1154,1185,1187,1191,1214,1217,1246,1247,1250,1254,1255,1256,1257,1280,1288,1289,1293,1297,],[92,-608,158,-608,-525,-527,-41,-47,-608,-608,-526,-529,-46,-49,426,-608,489,-608,-528,546,-608,582,-608,-427,-433,647,-608,677,-608,-198,-204,738,-608,-48,-478,-484,-543,-549,92,-242,-248,-369,-375,-126,-132,-608,1030,-608,-608,-608,-608,-432,-435,-608,-331,-337,-608,-203,-206,-608,1182,-608,-483,-486,-548,-551,-247,-250,92,-374,-377,-131,-134,-284,-290,-434,-608,-205,-485,-550,-249,-336,-339,-376,-133,-608,-289,-292,-338,-291,]),'RBRACKET':([49,50,53,54,55,58,82,83,84,85,86,87,131,132,134,135,164,165,166,167,188,204,205,206,274,344,349,622,623,624,704,705,706,707,767,768,769,791,792,793,851,852,853,883,884,885,927,928,929,1121,1143,1144,1145,1151,1189,1190,1195,1215,1218,1240,1241,1242,1285,1294,],[-89,-90,-91,-92,-93,110,131,-608,-608,-87,-88,-94,-19,-20,-23,-21,207,-530,-531,208,-22,237,-50,-51,350,495,517,834,-436,-437,906,-207,-208,907,952,-487,-488,972,-552,-553,1007,-251,-252,1054,-378,-379,1077,-135,-136,1191,1214,-340,-341,1217,1246,1247,1250,1256,1257,1280,-293,-294,1293,1297,]),'RPAREN':([49,50,52,53,54,55,60,61,83,84,85,86,87,89,90,91,92,96,97,98,99,101,102,103,104,105,106,107,109,113,115,131,132,134,135,136,138,153,154,155,156,157,158,159,160,161,163,172,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,272,273,292,293,305,306,308,309,310,311,312,313,318,333,334,336,337,338,339,340,341,348,350,351,365,366,368,369,370,371,372,373,374,375,376,377,378,380,381,382,388,389,390,392,393,394,395,396,397,402,422,423,424,425,426,427,428,429,431,433,434,435,436,438,439,440,441,442,443,447,448,449,450,452,453,454,455,456,457,459,465,485,486,487,488,489,490,491,492,494,507,508,510,511,512,513,514,515,516,517,522,542,543,544,545,546,547,548,549,551,553,555,558,562,577,578,579,580,581,582,583,584,585,587,591,592,594,595,596,597,599,600,601,602,603,604,605,606,607,625,627,642,643,644,645,646,647,648,649,650,652,655,657,672,673,674,675,676,677,678,679,680,682,685,686,687,688,689,714,734,735,736,737,738,739,740,741,743,747,748,749,750,751,752,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,795,797,798,813,814,815,816,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,857,858,860,861,862,863,864,865,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,908,909,910,911,912,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1026,1027,1028,1029,1030,1031,1032,1033,1035,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1057,1058,1077,1089,1090,1092,1093,1094,1095,1096,1097,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1124,1125,1126,1127,1148,1149,1150,1153,1154,1158,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1191,1197,1198,1214,1217,1221,1222,1223,1224,1225,1243,1244,1245,1246,1247,1250,1252,1254,1255,1256,1257,1280,1283,1288,1289,1293,1297,],[-89,-90,-608,-91,-92,-93,112,-608,-608,-608,-87,-88,-94,-532,-533,-407,-408,137,-608,-608,-37,-67,-68,-608,-69,-70,-71,-525,-527,171,-112,-19,-20,-23,-21,189,-35,-66,-36,-44,-45,-42,-43,-38,-39,-41,-47,-608,-22,-40,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-111,-114,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-608,-526,-529,-46,-49,-608,-410,-608,-423,-453,-454,-608,-455,-456,-457,459,-608,-194,-224,-225,-608,-226,-227,-228,-608,-528,518,-608,-474,-504,-505,-608,-506,-507,-508,552,-411,-608,-415,-416,-534,-535,-536,-608,-608,-539,-569,-570,-608,-571,-572,-573,604,-422,-430,-431,-428,-429,-424,-425,-427,-433,626,-608,-608,-238,-268,-269,-608,-270,-271,-272,656,-608,-608,-365,-395,-396,-608,-397,-398,-399,-607,686,-193,-201,-202,-199,-200,-195,-196,-198,-204,-608,-122,-152,-153,-608,-154,-155,-156,-113,-48,749,-473,-481,-482,-479,-480,-475,-476,-478,-484,-412,-414,773,-537,-568,-538,-546,-547,-544,-545,-540,-541,-543,-549,796,-578,-580,-608,-608,-583,-602,-603,-604,-605,-606,-426,817,818,819,835,-236,-267,-237,-245,-246,-243,-244,-239,-240,-242,-248,867,-363,-394,-364,-372,-373,-370,-371,-366,-367,-369,-375,888,-197,889,890,891,909,-121,-129,-130,-127,-128,-123,-124,-126,-132,933,934,-477,935,936,937,-409,-608,954,-542,955,956,957,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,973,974,-581,-601,-582,-584,-585,-608,-241,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-327,-357,-358,-608,-359,-360,-361,-368,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,1059,-125,1060,1061,1062,-608,-413,-574,-575,-576,-577,-554,-555,-556,-557,-558,-559,-560,-561,-562,-563,-564,-565,-566,-567,-608,-586,-579,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-432,-435,-253,-254,-255,-256,-257,-258,-259,-260,-261,-262,-263,-264,-265,-266,-608,1126,-326,-334,-335,-332,-333,-328,-329,-331,-337,-380,-381,-382,-383,-384,-385,-386,-387,-388,-389,-390,-391,-392,-393,-608,-203,-206,-608,-608,-280,-310,-311,-608,-312,-313,-314,-483,-486,-548,-551,-587,-588,-589,-590,-591,-592,-593,-594,-595,-596,-597,-598,-599,-600,-247,-250,-330,1196,-374,-377,1216,-131,-134,1222,-279,-287,-288,-285,-286,-281,-282,-284,-290,-608,-434,-404,-405,-608,-205,1262,-283,1263,1264,1265,1281,-523,-524,-485,-550,-249,-406,-336,-339,-376,-133,-608,1291,-289,-292,-338,-291,]),'PLUS_EQ':([52,107,109,207,239,240,251,350,1128,],[-608,-525,-527,-608,-526,-529,287,-528,287,]),'MINUS_EQ':([52,107,109,207,239,240,251,350,1128,],[-608,-525,-527,-608,-526,-529,288,-528,288,]),'MUL_EQ':([52,107,109,207,239,240,251,350,1128,],[-608,-525,-527,-608,-526,-529,289,-528,289,]),'DIV_EQ':([52,107,109,207,239,240,251,350,1128,],[-608,-525,-527,-608,-526,-529,290,-528,290,]),'MOD_EQ':([52,107,109,207,239,240,251,350,1128,],[-608,-525,-527,-608,-526,-529,291,-528,291,]),'GHOST':([59,],[111,]),'SWAP':([170,210,211,219,243,245,246,247,248,249,252,253,254,293,317,319,352,556,588,770,836,868,1146,1155,1156,1216,1251,1282,1286,1292,1295,1296,],[-608,-171,250,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,-608,-170,-465,-464,-417,-409,-608,-608,-362,-608,-608,-400,-608,-608,-273,-324,-233,-608,]),'DISPLAY':([170,210,211,219,243,245,246,247,248,249,252,253,254,293,317,319,352,556,588,770,836,868,1146,1155,1156,1216,1251,1282,1286,1292,1295,1296,],[-608,-171,258,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,-608,-170,-465,-464,-417,-409,-608,-608,-362,-608,-608,-400,-608,-608,-273,-324,-233,-608,]),'CHECK':([170,210,211,219,243,245,246,247,248,249,252,253,254,293,317,319,352,556,588,770,836,868,1146,1155,1156,1216,1251,1282,1286,1292,1295,1296,],[-608,-171,259,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,-608,-170,-465,-464,-417,-409,-608,-608,-362,-608,-608,-400,-608,-608,-273,-324,-233,-608,]),'FOR':([170,210,211,219,243,245,246,247,248,249,252,253,254,293,317,319,352,556,588,770,836,868,1146,1155,1156,1216,1251,1282,1286,1292,1295,1296,],[-608,-171,260,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,-608,-170,-465,-464,-417,-409,-608,-608,-362,-608,-608,-400,-608,-608,-273,-324,-233,-608,]),'UNTIL':([170,210,211,219,243,245,246,247,248,249,252,253,254,293,317,319,352,556,588,683,770,836,868,1146,1155,1156,1216,1251,1282,1286,1292,1295,1296,],[-608,-171,261,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,-608,-170,-465,-464,-417,886,-409,-608,-608,-362,-608,-608,-400,-608,-608,-273,-324,-233,-608,]),'REPEAT':([170,210,211,219,243,245,246,247,248,249,252,253,254,293,317,319,352,556,588,770,836,868,1146,1155,1156,1216,1251,1282,1286,1292,1295,1296,],[-608,-171,262,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,-410,-608,-170,-465,-464,-417,-409,-608,-608,-362,-608,-608,-400,-608,-608,-273,-324,-233,-608,]),'INPUT':([170,210,211,219,243,245,246,247,248,249,252,253,254,258,267,284,285,286,287,288,289,290,291,293,294,317,319,346,352,399,401,403,404,405,464,466,467,468,521,523,524,525,556,557,559,560,561,588,713,715,716,717,770,836,868,931,1146,1155,1156,1157,1159,1160,1161,1199,1216,1251,1282,1286,1292,1295,1296,],[-608,-171,263,-608,-608,-608,-608,-608,-608,-608,-321,-322,-323,263,263,263,-513,-514,-515,-516,-517,-518,-519,-410,263,-608,-170,263,-465,263,263,263,263,263,263,263,263,263,263,263,263,263,-464,263,263,263,263,-417,263,263,263,263,-409,-608,-608,263,-362,-608,-608,263,263,263,263,263,-400,-608,-608,-273,-324,-233,-608,]),'REVIVE':([210,211,219,242,243,244,245,246,247,248,249,252,253,254,269,275,276,277,278,279,280,293,319,352,556,588,770,1146,1216,1286,1292,1295,],[-161,-608,-608,-162,-608,-169,-608,-608,-608,-608,-608,-321,-322,-323,346,-163,-164,-165,-166,-167,-168,-410,-170,-465,-464,-417,-409,-362,-400,-273,-324,-233,]),'SHIFT':([210,211,242,243,244,245,246,247,248,249,252,253,254,275,276,277,278,279,280,293,319,352,556,588,744,770,1146,1156,1216,1220,1286,1292,1295,],[-161,-608,-162,-608,-169,-608,-608,-608,-608,-608,-321,-322,-323,-163,-164,-165,-166,-167,-168,-410,-170,-465,-464,-417,931,-409,-362,-608,-400,931,-273,-324,-233,]),'OTHERWISE':([210,211,242,243,244,245,246,247,248,249,252,253,254,275,276,277,278,279,280,293,319,352,556,588,770,930,1122,1146,1156,1192,1194,1216,1220,1259,1260,1261,1286,1292,1295,1299,1300,],[-161,-608,-162,-608,-169,-608,-608,-608,-608,-608,-321,-322,-323,-163,-164,-165,-166,-167,-168,-410,-170,-465,-464,-417,-409,1078,-608,-362,-608,1248,-235,-400,-608,-274,-319,-320,-273,-324,-233,-608,-234,]),'DOT':([251,],[283,]),'CONVERT_TO_INT':([258,267,284,285,286,287,288,289,290,291,294,346,399,931,1199,],[299,327,359,-513,-514,-515,-516,-517,-518,-519,383,501,383,1083,383,]),'CONVERT_TO_FLT':([258,267,284,285,286,287,288,289,290,291,294,346,399,931,1199,],[301,329,361,-513,-514,-515,-516,-517,-518,-519,385,503,385,1085,385,]),'CONVERT_TO_BLN':([258,267,284,285,286,287,288,289,290,291,294,346,399,931,1199,],[302,330,362,-513,-514,-515,-516,-517,-518,-519,386,504,386,1086,386,]),'CONVERT_TO_STR':([258,267,284,285,286,287,288,289,290,291,294,346,399,931,1199,],[303,331,363,-513,-514,-515,-516,-517,-518,-519,387,505,387,1087,387,]),'SPLICE':([283,],[353,]),'PUSH':([283,],[354,]),'COLON':([293,770,1079,1080,1081,1082,1088,1089,1090,1092,1093,1094,1095,1096,1097,1162,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1222,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1288,1289,1297,],[-410,-409,1156,-275,-276,-277,-608,-608,-280,-310,-311,-608,-312,-313,-314,-278,-309,-279,-287,-288,-285,-286,-281,-282,-284,-290,-283,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-608,-315,-316,-317,-318,-295,-296,-297,-298,-299,-300,-301,-302,-303,-304,-305,-306,-307,-308,-608,-289,-292,-291,]),'OTHERWISE_CHECK':([1122,1299,],[1193,1193,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_dec':([3,29,],[4,39,]),'global_statement':([3,29,],[5,5,]),'empty':([3,4,7,29,34,40,41,44,46,52,61,83,84,97,98,103,110,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,170,172,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,211,212,219,237,243,245,246,247,248,249,251,268,269,292,295,304,305,310,317,320,321,332,333,338,348,364,365,370,376,388,389,394,434,435,440,448,449,454,495,496,506,507,512,589,595,596,608,609,610,611,612,613,614,615,616,617,618,619,620,621,684,690,691,692,693,694,695,696,697,698,699,700,701,702,703,753,754,755,756,757,758,759,760,761,762,763,764,765,766,771,777,778,779,780,781,782,783,784,785,786,787,788,789,790,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,857,862,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,906,913,914,915,916,917,918,919,920,921,922,923,924,925,926,932,952,972,975,976,977,978,979,980,981,982,983,984,985,986,987,988,1007,1054,1077,1088,1089,1094,1122,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1155,1156,1188,1214,1220,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1251,1280,1282,1296,1299,],[6,16,31,6,57,31,65,81,89,109,115,134,134,153,155,163,169,31,81,81,81,81,81,81,81,81,81,81,81,81,81,81,210,222,153,153,153,153,153,153,153,153,153,153,153,153,153,153,240,210,265,210,273,210,210,210,210,210,210,109,343,347,375,400,421,423,431,210,265,463,484,486,494,222,541,543,551,555,577,579,587,642,644,652,672,674,682,709,712,733,735,743,400,813,89,421,421,421,421,421,421,421,421,421,421,421,421,421,421,265,484,484,484,484,484,484,484,484,484,484,484,484,484,484,541,541,541,541,541,541,541,541,541,541,541,541,541,541,555,577,577,577,577,577,577,577,577,577,577,577,577,577,577,991,210,642,642,642,642,642,642,642,642,642,642,642,642,642,642,1025,1027,1035,210,672,672,672,672,672,672,672,672,672,672,672,672,672,672,1058,733,733,733,733,733,733,733,733,733,733,733,733,733,733,1099,1103,1106,813,813,813,813,813,813,813,813,813,813,813,813,813,813,1125,1149,1154,1177,1179,1187,1194,1025,1025,1025,1025,1025,1025,1025,1025,1025,1025,1025,1025,1025,1025,210,210,1244,1255,1261,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,210,1289,210,210,1194,]),'var_statement':([3,29,],[7,7,]),'data_type':([3,29,61,221,],[8,8,114,270,]),'function_statements':([4,496,],[14,711,]),'ret_type':([4,496,],[15,15,]),'function_dtype':([4,496,],[18,18,]),'global_statement_tail':([7,40,116,],[30,62,173,]),'main_function':([14,],[35,]),'global_tail':([29,],[38,]),'global_value':([33,],[41,]),'expression':([33,],[42,]),'list_value':([33,45,133,267,520,1188,],[43,84,84,323,84,84,]),'factor':([33,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[44,117,118,119,120,121,122,123,124,125,126,127,128,129,130,]),'var_call':([33,67,68,69,70,71,72,73,74,75,76,77,78,79,80,211,292,401,403,404,405,464,466,467,468,521,523,524,525,554,557,559,560,561,590,713,715,716,717,799,800,801,802,803,804,805,806,807,808,809,810,811,812,866,1009,1157,1159,1160,1161,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,257,378,596,596,596,596,596,596,596,596,596,596,596,596,378,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,1038,1128,596,596,596,596,]),'literal1':([33,45,67,68,69,70,71,72,73,74,75,76,77,78,79,80,133,292,520,554,1188,],[47,85,47,47,47,47,47,47,47,47,47,47,47,47,47,47,85,85,85,85,85,]),'list_dec':([34,],[56,]),'global_statement_tail2':([41,],[63,]),'factor_tail':([44,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[66,174,175,176,177,178,179,180,181,182,183,184,185,186,187,]),'list_element':([45,133,520,1188,],[82,188,747,1245,]),'literal':([45,133,292,520,554,1188,],[83,83,377,83,377,83,]),'literal2':([45,133,292,520,554,1188,],[86,86,86,86,86,86,]),'postfix':([46,596,],[88,814,]),'postfix_op':([46,596,1128,],[90,90,1198,]),'factor_expression':([51,95,],[96,136,]),'factor_expression_factor':([51,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,],[97,97,190,191,192,193,194,195,196,197,198,199,200,201,202,203,]),'factor_var_call':([51,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'factor_expression1':([51,95,139,140,141,142,143,144,145,146,147,148,149,150,151,152,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'list_index':([52,251,],[107,107,]),'parameters':([61,],[113,]),'element_tail':([83,84,],[132,135,]),'factor_expression_tail':([97,190,191,192,193,194,195,196,197,198,199,200,201,202,203,],[138,223,224,225,226,227,228,229,230,231,232,233,234,235,236,]),'factor_postfix':([98,],[154,]),'factor_postfix_op':([98,],[156,]),'factor_list_index':([103,],[161,]),'index':([108,238,],[164,274,]),'_2d_list':([110,],[168,]),'factor_index':([162,271,],[204,349,]),'statements':([170,211,219,243,245,246,247,248,249,317,836,868,1155,1156,1251,1282,1296,],[209,244,269,275,276,277,278,279,280,458,992,1039,1219,1220,1284,1290,1298,]),'local_dec':([170,211,219,243,245,246,247,248,249,317,836,868,1155,1156,1251,1282,1296,],[211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,]),'local_var_statement':([170,211,219,243,245,246,247,248,249,317,836,868,1155,1156,1251,1282,1296,],[212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,]),'local_data_type':([170,211,219,243,245,246,247,248,249,317,836,868,1155,1156,1251,1282,1296,],[213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,]),'parameters_tail':([172,348,],[220,516,]),'list_index2':([207,],[239,]),'statements_tail':([211,],[242,]),'switch_statement':([211,],[243,]),'loop_statement':([211,],[245,]),'function_call':([211,258,267,284,294,346,399,931,1199,],[246,298,326,358,382,500,382,1082,382,]),'assignment_statement':([211,],[247,]),'output_statement':([211,],[248,]),'conditional_statement':([211,],[249,]),'for_loop':([211,],[252,]),'until_loop':([211,],[253,]),'repeat_until':([211,],[254,]),'input_statement':([211,258,267,284,294,346,399,401,403,404,405,464,466,467,468,521,523,524,525,557,559,560,561,713,715,716,717,931,1157,1159,1160,1161,1199,],[256,256,256,256,256,256,256,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,256,594,594,594,594,256,]),'local_dec_tail':([212,320,684,],[264,460,887,]),'factor_list_index2':([237,],[272,]),'assign_tail':([251,],[282,]),'assign_op':([251,],[284,]),'compound_op':([251,1128,],[285,1199,]),'output_value':([258,],[295,]),'output_type_cast':([258,],[296,]),'output_expression':([258,],[297,]),'output_factor':([258,300,407,408,409,410,411,412,413,414,415,416,417,418,419,420,],[304,402,608,609,610,611,612,613,614,615,616,617,618,619,620,621,]),'output_var_call':([258,300,407,408,409,410,411,412,413,414,415,416,417,418,419,420,],[305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,]),'output_factor1':([258,300,407,408,409,410,411,412,413,414,415,416,417,418,419,420,],[306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,]),'local_value':([267,],[321,]),'local_value_value':([267,],[322,]),'local_type_cast':([267,],[324,]),'local_expression':([267,],[325,]),'local_factor':([267,328,470,471,472,473,474,475,476,477,478,479,480,481,482,483,],[332,465,690,691,692,693,694,695,696,697,698,699,700,701,702,703,]),'local_var_call':([267,328,470,471,472,473,474,475,476,477,478,479,480,481,482,483,],[333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,]),'local_factor1':([267,328,470,471,472,473,474,475,476,477,478,479,480,481,482,483,],[334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,]),'local_list_dec':([268,],[342,]),'revive':([269,],[345,]),'assign_value':([284,],[355,]),'assign_type_cast':([284,],[356,]),'assign_expression':([284,],[357,]),'assign_factor':([284,360,527,528,529,530,531,532,533,534,535,536,537,538,539,540,],[364,522,753,754,755,756,757,758,759,760,761,762,763,764,765,766,]),'assign_var_call':([284,360,527,528,529,530,531,532,533,534,535,536,537,538,539,540,],[365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,]),'assign_factor1':([284,360,527,528,529,530,531,532,533,534,535,536,537,538,539,540,],[366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,]),'arguments':([292,],[374,]),'arg_value':([292,554,],[376,771,]),'value':([294,399,1199,],[379,589,1252,]),'type_cast':([294,399,1199,],[380,380,380,]),'value_expression':([294,399,1199,],[381,381,381,]),'value_factor':([294,384,399,563,564,565,566,567,568,569,570,571,572,573,574,575,576,1199,],[388,558,388,777,778,779,780,781,782,783,784,785,786,787,788,789,790,388,]),'value_var_call':([294,384,399,563,564,565,566,567,568,569,570,571,572,573,574,575,576,1199,],[389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,]),'value_factor1':([294,384,399,563,564,565,566,567,568,569,570,571,572,573,574,575,576,1199,],[390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,]),'next_val':([295,589,],[398,794,]),'output_factor_tail':([304,608,609,610,611,612,613,614,615,616,617,618,619,620,621,],[406,820,821,822,823,824,825,826,827,828,829,830,831,832,833,]),'output_postfix':([305,],[422,]),'output_postfix_op':([305,],[424,]),'output_list_index':([310,],[429,]),'condition':([314,432,1249,],[433,625,1283,]),'condition_factor':([314,432,628,629,630,631,632,633,634,635,636,637,638,639,640,641,1249,],[434,434,837,838,839,840,841,842,843,844,845,846,847,848,849,850,434,]),'condition_var_call':([314,432,628,629,630,631,632,633,634,635,636,637,638,639,640,641,1249,],[435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,]),'condition1':([314,432,628,629,630,631,632,633,634,635,636,637,638,639,640,641,1249,],[436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,]),'control_variable':([315,],[444,]),'until_expression':([316,1055,],[447,1150,]),'until_factor':([316,446,658,659,660,661,662,663,664,665,666,667,668,669,670,671,1055,],[448,655,869,870,871,872,873,874,875,876,877,878,879,880,881,882,448,]),'until_var_call':([316,446,658,659,660,661,662,663,664,665,666,667,668,669,670,671,1055,],[449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,]),'until_factor1':([316,446,658,659,660,661,662,663,664,665,666,667,668,669,670,671,1055,],[450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,]),'local_dec_tail2':([321,],[461,]),'local_factor_tail':([332,690,691,692,693,694,695,696,697,698,699,700,701,702,703,],[469,892,893,894,895,896,897,898,899,900,901,902,903,904,905,]),'local_postfix':([333,],[485,]),'local_postfix_op':([333,],[487,]),'local_list_index':([338,],[492,]),'revive_value':([346,],[497,]),'revive_type_cast':([346,],[498,]),'revive_expression':([346,],[499,]),'revive_factor':([346,502,719,720,721,722,723,724,725,726,727,728,729,730,731,732,],[506,714,913,914,915,916,917,918,919,920,921,922,923,924,925,926,]),'revive_var_call':([346,502,719,720,721,722,723,724,725,726,727,728,729,730,731,732,],[507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,]),'revive_factor1':([346,502,719,720,721,722,723,724,725,726,727,728,729,730,731,732,],[508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,]),'assign_factor_tail':([364,753,754,755,756,757,758,759,760,761,762,763,764,765,766,],[526,938,939,940,941,942,943,944,945,946,947,948,949,950,951,]),'assign_postfix':([365,],[542,]),'assign_postfix_op':([365,],[544,]),'assign_list_index':([370,],[549,]),'arg_tail':([376,771,],[553,953,]),'value_factor_tail':([388,777,778,779,780,781,782,783,784,785,786,787,788,789,790,],[562,958,959,960,961,962,963,964,965,966,967,968,969,970,971,]),'value_postfix':([389,],[578,]),'value_postfix_op':([389,],[580,]),'value_list_index':([394,],[585,]),'typecast_value':([401,403,404,405,464,466,467,468,521,523,524,525,557,559,560,561,713,715,716,717,1157,1159,1160,1161,],[591,605,606,607,685,687,688,689,748,750,751,752,772,774,775,776,908,910,911,912,1221,1223,1224,1225,]),'typecast_expression':([401,403,404,405,464,466,467,468,521,523,524,525,557,559,560,561,713,715,716,717,1157,1159,1160,1161,],[592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,]),'typecast_factor':([401,403,404,405,464,466,467,468,521,523,524,525,557,559,560,561,590,713,715,716,717,799,800,801,802,803,804,805,806,807,808,809,810,811,812,1157,1159,1160,1161,],[595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,795,595,595,595,595,975,976,977,978,979,980,981,982,983,984,985,986,987,988,595,595,595,595,]),'typecast_factor1':([401,403,404,405,464,466,467,468,521,523,524,525,557,559,560,561,590,713,715,716,717,799,800,801,802,803,804,805,806,807,808,809,810,811,812,1157,1159,1160,1161,],[597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,]),'output_index':([430,989,],[622,1121,]),'condition_tail':([434,837,838,839,840,841,842,843,844,845,846,847,848,849,850,],[627,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,]),'condition_postfix':([435,],[643,]),'condition_postfix_op':([435,],[645,]),'condition_list_index':([440,],[650,]),'until_factor_tail':([448,869,870,871,872,873,874,875,876,877,878,879,880,881,882,],[657,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,]),'until_postfix':([449,],[673,]),'until_postfix_op':([449,],[675,]),'until_list_index':([454,],[680,]),'local_index':([493,1056,],[704,1151,]),'local_2d_list':([495,],[708,]),'function_statements_tail':([496,],[710,]),'revive_factor_tail':([506,913,914,915,916,917,918,919,920,921,922,923,924,925,926,],[718,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,]),'revive_postfix':([507,],[734,]),'revive_postfix_op':([507,],[736,]),'revive_list_index':([512,],[741,]),'start':([519,],[745,]),'assign_index':([550,1101,],[767,1189,]),'value_index':([586,1104,],[791,1190,]),'typecast_factor_tail':([595,975,976,977,978,979,980,981,982,983,984,985,986,987,988,],[798,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,]),'condition_index':([651,1123,],[851,1195,]),'for_expression':([653,],[855,]),'for_factor':([653,854,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,],[856,1008,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,]),'for_var_call':([653,854,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,],[857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,]),'for_factor1':([653,854,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,],[858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,]),'until_index':([681,1147,],[883,1215,]),'revive_index':([742,1152,],[927,1218,]),'switch_condition':([744,1220,],[930,1260,]),'output_list_index2':([834,],[990,]),'for_factor_tail':([856,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,],[1010,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,]),'for_postfix':([857,],[1026,]),'for_postfix_op':([857,],[1028,]),'for_list_index':([862,],[1033,]),'control_var_tail':([866,],[1036,]),'local_list_index2':([906,],[1057,]),'switch_value':([931,],[1079,]),'switch_type_cast':([931,],[1080,]),'switch_expression':([931,],[1081,]),'switch_factor':([931,1084,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,],[1088,1158,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,]),'switch_var_call':([931,1084,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,],[1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,1089,]),'switch_factor1':([931,1084,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,],[1090,1090,1090,1090,1090,1090,1090,1090,1090,1090,1090,1090,1090,1090,1090,1090,]),'deleteCount':([932,],[1098,]),'assign_list_index2':([952,],[1102,]),'value_list_index2':([972,],[1105,]),'condition_list_index2':([1007,],[1124,]),'update':([1009,],[1127,]),'for_index':([1034,1253,],[1143,1285,]),'until_list_index2':([1054,],[1148,]),'revive_list_index2':([1077,],[1153,]),'switch_factor_tail':([1088,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,],[1162,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,]),'switch_postfix':([1089,],[1178,]),'switch_postfix_op':([1089,],[1180,]),'switch_list_index':([1094,],[1185,]),'conditional_tail':([1122,1299,],[1192,1300,]),'update_tail':([1128,],[1197,]),'switch_index':([1186,1287,],[1240,1294,]),'splice_items':([1188,],[1243,]),'for_list_index2':([1214,],[1254,]),'switchcond_tail':([1220,],[1259,]),'switch_list_index2':([1280,],[1288,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BIRTH LBRACE global_dec function_statements main_function RBRACE GHOST','program',7,'p_program','Parser.py',41),
  ('main_function -> MAIN_CASPER LPAREN RPAREN LBRACE statements RBRACE','main_function',6,'p_main_function','Parser.py',49),
  ('global_dec -> global_statement SEMICOLON global_tail','global_dec',3,'p_global_dec','Parser.py',61),
  ('global_dec -> empty','global_dec',1,'p_global_dec','Parser.py',62),
  ('global_tail -> global_dec','global_tail',1,'p_global_tail','Parser.py',75),
  ('global_statement -> var_statement global_statement_tail','global_statement',2,'p_global_statement','Parser.py',85),
  ('var_statement -> data_type IDENT list_dec','var_statement',3,'p_var_statement','Parser.py',118),
  ('list_dec -> empty','list_dec',1,'p_list_dec','Parser.py',133),
  ('list_dec -> LBRACKET RBRACKET _2d_list','list_dec',3,'p_list_dec','Parser.py',134),
  ('_2d_list -> empty','_2d_list',1,'p_2d_list','Parser.py',149),
  ('_2d_list -> LBRACKET RBRACKET','_2d_list',2,'p_2d_list','Parser.py',150),
  ('global_statement_tail -> empty','global_statement_tail',1,'p_global_statement_tail','Parser.py',165),
  ('global_statement_tail -> COMMA IDENT global_statement_tail','global_statement_tail',3,'p_global_statement_tail','Parser.py',166),
  ('global_statement_tail -> EQ global_value global_statement_tail2','global_statement_tail',3,'p_global_statement_tail','Parser.py',167),
  ('global_statement_tail2 -> COMMA IDENT global_statement_tail','global_statement_tail2',3,'p_global_statement_tail2','Parser.py',184),
  ('global_statement_tail2 -> empty','global_statement_tail2',1,'p_global_statement_tail2','Parser.py',185),
  ('global_value -> expression','global_value',1,'p_global_value','Parser.py',200),
  ('global_value -> list_value','global_value',1,'p_global_value','Parser.py',201),
  ('list_value -> LBRACKET list_element RBRACKET','list_value',3,'p_list_value','Parser.py',211),
  ('list_element -> literal element_tail','list_element',2,'p_list_element','Parser.py',223),
  ('list_element -> list_value element_tail','list_element',2,'p_list_element','Parser.py',224),
  ('element_tail -> COMMA list_element','element_tail',2,'p_element_tail','Parser.py',240),
  ('element_tail -> empty','element_tail',1,'p_element_tail','Parser.py',241),
  ('data_type -> INT','data_type',1,'p_data_type','Parser.py',258),
  ('data_type -> FLT','data_type',1,'p_data_type','Parser.py',259),
  ('data_type -> BLN','data_type',1,'p_data_type','Parser.py',260),
  ('data_type -> CHR','data_type',1,'p_data_type','Parser.py',261),
  ('data_type -> STR','data_type',1,'p_data_type','Parser.py',262),
  ('expression -> factor factor_tail','expression',2,'p_expression','Parser.py',272),
  ('factor -> var_call postfix','factor',2,'p_factor','Parser.py',289),
  ('factor -> literal1','factor',1,'p_factor','Parser.py',290),
  ('factor -> TILDE INT_LIT','factor',2,'p_factor','Parser.py',291),
  ('factor -> TILDE FLT_LIT','factor',2,'p_factor','Parser.py',292),
  ('factor -> LPAREN factor_expression RPAREN','factor',3,'p_factor','Parser.py',293),
  ('factor_expression -> factor_expression_factor factor_expression_tail','factor_expression',2,'p_factor_expression','Parser.py',315),
  ('factor_expression_factor -> factor_var_call factor_postfix','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',325),
  ('factor_expression_factor -> factor_expression1','factor_expression_factor',1,'p_factor_expression_factor','Parser.py',326),
  ('factor_expression_factor -> TILDE INT_LIT','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',327),
  ('factor_expression_factor -> TILDE FLT_LIT','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',328),
  ('factor_expression_factor -> LPAREN factor_expression RPAREN','factor_expression_factor',3,'p_factor_expression_factor','Parser.py',329),
  ('factor_var_call -> IDENT factor_list_index','factor_var_call',2,'p_factor_var_call','Parser.py',350),
  ('factor_postfix_op -> PLUS_PLUS','factor_postfix_op',1,'p_factor_postfix_op','Parser.py',356),
  ('factor_postfix_op -> MINUS_MINUS','factor_postfix_op',1,'p_factor_postfix_op','Parser.py',357),
  ('factor_postfix -> empty','factor_postfix',1,'p_factor_postfix','Parser.py',362),
  ('factor_postfix -> factor_postfix_op','factor_postfix',1,'p_factor_postfix','Parser.py',363),
  ('factor_list_index -> LBRACKET factor_index RBRACKET factor_list_index2','factor_list_index',4,'p_factor_list_index','Parser.py',369),
  ('factor_list_index -> empty','factor_list_index',1,'p_factor_list_index','Parser.py',370),
  ('factor_list_index2 -> LBRACKET factor_index RBRACKET','factor_list_index2',3,'p_factor_list_index2','Parser.py',380),
  ('factor_list_index2 -> empty','factor_list_index2',1,'p_factor_list_index2','Parser.py',381),
  ('factor_index -> INT_LIT','factor_index',1,'p_factor__int_lit','Parser.py',391),
  ('factor_index -> IDENT','factor_index',1,'p_factor_index_ident','Parser.py',396),
  ('factor_expression_tail -> PLUS factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',402),
  ('factor_expression_tail -> MINUS factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',403),
  ('factor_expression_tail -> MULTIPLY factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',404),
  ('factor_expression_tail -> DIVISION factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',405),
  ('factor_expression_tail -> MODULO factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',406),
  ('factor_expression_tail -> EXPONENT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',407),
  ('factor_expression_tail -> GT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',408),
  ('factor_expression_tail -> LT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',409),
  ('factor_expression_tail -> EQ_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',410),
  ('factor_expression_tail -> GT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',411),
  ('factor_expression_tail -> LT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',412),
  ('factor_expression_tail -> NOT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',413),
  ('factor_expression_tail -> AND factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',414),
  ('factor_expression_tail -> OR factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',415),
  ('factor_expression_tail -> empty','factor_expression_tail',1,'p_factor_expression_tail','Parser.py',416),
  ('factor_expression1 -> INT_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',430),
  ('factor_expression1 -> FLT_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',431),
  ('factor_expression1 -> DAY','factor_expression1',1,'p_factor_expression1','Parser.py',432),
  ('factor_expression1 -> NIGHT','factor_expression1',1,'p_factor_expression1','Parser.py',433),
  ('factor_expression1 -> STR_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',434),
  ('factor_tail -> PLUS factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',458),
  ('factor_tail -> MINUS factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',459),
  ('factor_tail -> MULTIPLY factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',460),
  ('factor_tail -> DIVISION factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',461),
  ('factor_tail -> MODULO factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',462),
  ('factor_tail -> EXPONENT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',463),
  ('factor_tail -> GT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',464),
  ('factor_tail -> LT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',465),
  ('factor_tail -> EQ_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',466),
  ('factor_tail -> GT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',467),
  ('factor_tail -> LT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',468),
  ('factor_tail -> NOT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',469),
  ('factor_tail -> AND factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',470),
  ('factor_tail -> OR factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',471),
  ('factor_tail -> empty','factor_tail',1,'p_factor_tail','Parser.py',472),
  ('literal -> literal1','literal',1,'p_literal','Parser.py',490),
  ('literal -> literal2','literal',1,'p_literal','Parser.py',491),
  ('literal1 -> INT_LIT','literal1',1,'p_literal1','Parser.py',512),
  ('literal1 -> FLT_LIT','literal1',1,'p_literal1','Parser.py',513),
  ('literal1 -> DAY','literal1',1,'p_literal1','Parser.py',514),
  ('literal1 -> NIGHT','literal1',1,'p_literal1','Parser.py',515),
  ('literal1 -> STR_LIT','literal1',1,'p_literal1','Parser.py',516),
  ('literal2 -> CHR_LIT','literal2',1,'p_literal2','Parser.py',521),
  ('function_statements -> ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements revive RBRACE function_statements_tail','function_statements',10,'p_function_statements','Parser.py',532),
  ('function_statements -> empty','function_statements',1,'p_function_statements','Parser.py',533),
  ('function_statements_tail -> function_statements','function_statements_tail',1,'p_function_statements_tail','Parser.py',583),
  ('function_statements_tail -> empty','function_statements_tail',1,'p_function_statements_tail','Parser.py',584),
  ('ret_type -> FUNCTION','ret_type',1,'p_ret_type','Parser.py',597),
  ('ret_type -> function_dtype','ret_type',1,'p_ret_type','Parser.py',598),
  ('function_dtype -> FUNCTION_INT','function_dtype',1,'p_function_dtype','Parser.py',619),
  ('function_dtype -> FUNCTION_FLT','function_dtype',1,'p_function_dtype','Parser.py',620),
  ('function_dtype -> FUNCTION_CHR','function_dtype',1,'p_function_dtype','Parser.py',621),
  ('function_dtype -> FUNCTION_BLN','function_dtype',1,'p_function_dtype','Parser.py',622),
  ('function_dtype -> FUNCTION_STR','function_dtype',1,'p_function_dtype','Parser.py',623),
  ('function_dtype -> FUNCTION_LIST_INT','function_dtype',1,'p_function_dtype','Parser.py',624),
  ('function_dtype -> FUNCTION_LIST_FLT','function_dtype',1,'p_function_dtype','Parser.py',625),
  ('function_dtype -> FUNCTION_LIST_CHR','function_dtype',1,'p_function_dtype','Parser.py',626),
  ('function_dtype -> FUNCTION_LIST_STR','function_dtype',1,'p_function_dtype','Parser.py',627),
  ('function_dtype -> FUNCTION_LIST_BLN','function_dtype',1,'p_function_dtype','Parser.py',628),
  ('parameters -> data_type IDENT parameters_tail','parameters',3,'p_parameters','Parser.py',638),
  ('parameters -> empty','parameters',1,'p_parameters','Parser.py',639),
  ('parameters_tail -> COMMA data_type IDENT parameters_tail','parameters_tail',4,'p_parameters_tail','Parser.py',653),
  ('parameters_tail -> empty','parameters_tail',1,'p_parameters_tail','Parser.py',654),
  ('revive -> REVIVE revive_value','revive',2,'p_revive','Parser.py',666),
  ('revive -> empty','revive',1,'p_revive','Parser.py',667),
  ('revive_value -> revive_type_cast','revive_value',1,'p_revive_value','Parser.py',677),
  ('revive_value -> revive_expression','revive_value',1,'p_revive_value','Parser.py',678),
  ('revive_value -> function_call','revive_value',1,'p_revive_value','Parser.py',679),
  ('revive_expression -> revive_factor revive_factor_tail','revive_expression',2,'p_revive_expression','Parser.py',685),
  ('revive_factor -> revive_var_call revive_postfix','revive_factor',2,'p_revive_factor','Parser.py',695),
  ('revive_factor -> revive_factor1','revive_factor',1,'p_revive_factor','Parser.py',696),
  ('revive_factor -> TILDE INT_LIT','revive_factor',2,'p_revive_factor','Parser.py',697),
  ('revive_factor -> TILDE FLT_LIT','revive_factor',2,'p_revive_factor','Parser.py',698),
  ('revive_factor -> LPAREN revive_factor RPAREN','revive_factor',3,'p_revive_factor','Parser.py',699),
  ('revive_var_call -> IDENT revive_list_index','revive_var_call',2,'p_revive_var_call','Parser.py',719),
  ('revive_postfix_op -> PLUS_PLUS','revive_postfix_op',1,'p_revive_postfix_op','Parser.py',725),
  ('revive_postfix_op -> MINUS_MINUS','revive_postfix_op',1,'p_revive_postfix_op','Parser.py',726),
  ('revive_postfix -> empty','revive_postfix',1,'p_revive_postfix','Parser.py',731),
  ('revive_postfix -> revive_postfix_op','revive_postfix',1,'p_revive_postfix','Parser.py',732),
  ('revive_list_index -> LBRACKET revive_index RBRACKET revive_list_index2','revive_list_index',4,'p_revive_list_index','Parser.py',738),
  ('revive_list_index -> empty','revive_list_index',1,'p_revive_list_index','Parser.py',739),
  ('revive_list_index2 -> LBRACKET revive_index RBRACKET','revive_list_index2',3,'p_revive_list_index2','Parser.py',749),
  ('revive_list_index2 -> empty','revive_list_index2',1,'p_revive_list_index2','Parser.py',750),
  ('revive_index -> INT_LIT','revive_index',1,'p_revive_int_lit','Parser.py',759),
  ('revive_index -> IDENT','revive_index',1,'p_revive_index_ident','Parser.py',764),
  ('revive_factor_tail -> PLUS revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',768),
  ('revive_factor_tail -> MINUS revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',769),
  ('revive_factor_tail -> MULTIPLY revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',770),
  ('revive_factor_tail -> DIVISION revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',771),
  ('revive_factor_tail -> MODULO revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',772),
  ('revive_factor_tail -> EXPONENT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',773),
  ('revive_factor_tail -> GT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',774),
  ('revive_factor_tail -> LT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',775),
  ('revive_factor_tail -> EQ_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',776),
  ('revive_factor_tail -> GT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',777),
  ('revive_factor_tail -> LT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',778),
  ('revive_factor_tail -> NOT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',779),
  ('revive_factor_tail -> AND revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',780),
  ('revive_factor_tail -> OR revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',781),
  ('revive_factor_tail -> empty','revive_factor_tail',1,'p_revive_factor_tail','Parser.py',782),
  ('revive_factor1 -> INT_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',796),
  ('revive_factor1 -> FLT_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',797),
  ('revive_factor1 -> DAY','revive_factor1',1,'p_revive_factor1','Parser.py',798),
  ('revive_factor1 -> NIGHT','revive_factor1',1,'p_revive_factor1','Parser.py',799),
  ('revive_factor1 -> STR_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',800),
  ('revive_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',805),
  ('revive_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',806),
  ('revive_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',807),
  ('revive_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',808),
  ('statements -> empty','statements',1,'p_statements','Parser.py',815),
  ('statements -> local_dec statements_tail','statements',2,'p_statements','Parser.py',816),
  ('statements_tail -> switch_statement statements','statements_tail',2,'p_statements_tail','Parser.py',830),
  ('statements_tail -> loop_statement statements','statements_tail',2,'p_statements_tail','Parser.py',831),
  ('statements_tail -> function_call statements','statements_tail',2,'p_statements_tail','Parser.py',832),
  ('statements_tail -> assignment_statement statements','statements_tail',2,'p_statements_tail','Parser.py',833),
  ('statements_tail -> output_statement statements','statements_tail',2,'p_statements_tail','Parser.py',834),
  ('statements_tail -> conditional_statement statements','statements_tail',2,'p_statements_tail','Parser.py',835),
  ('statements_tail -> statements','statements_tail',1,'p_statements_tail','Parser.py',836),
  ('local_dec -> local_var_statement local_dec_tail SEMICOLON','local_dec',3,'p_local_dec','Parser.py',854),
  ('local_dec -> empty','local_dec',1,'p_local_dec','Parser.py',855),
  ('local_var_statement -> local_data_type IDENT local_list_dec','local_var_statement',3,'p_local_var_statement','Parser.py',873),
  ('local_data_type -> INT','local_data_type',1,'p_local_data_type','Parser.py',883),
  ('local_data_type -> FLT','local_data_type',1,'p_local_data_type','Parser.py',884),
  ('local_data_type -> BLN','local_data_type',1,'p_local_data_type','Parser.py',885),
  ('local_data_type -> CHR','local_data_type',1,'p_local_data_type','Parser.py',886),
  ('local_data_type -> STR','local_data_type',1,'p_local_data_type','Parser.py',887),
  ('local_list_dec -> empty','local_list_dec',1,'p_local_list_dec','Parser.py',893),
  ('local_list_dec -> LBRACKET RBRACKET local_2d_list','local_list_dec',3,'p_local_list_dec','Parser.py',894),
  ('local_2d_list -> empty','local_2d_list',1,'p_local_2d_list','Parser.py',905),
  ('local_2d_list -> LBRACKET RBRACKET','local_2d_list',2,'p_local_2d_list','Parser.py',906),
  ('local_dec_tail -> empty','local_dec_tail',1,'p_local_dec_tail','Parser.py',921),
  ('local_dec_tail -> COMMA IDENT local_dec_tail','local_dec_tail',3,'p_local_dec_tail','Parser.py',922),
  ('local_dec_tail -> EQ local_value local_dec_tail2','local_dec_tail',3,'p_local_dec_tail','Parser.py',923),
  ('local_dec_tail2 -> COMMA IDENT local_dec_tail','local_dec_tail2',3,'p_local_dec_tail2','Parser.py',938),
  ('local_dec_tail2 -> empty','local_dec_tail2',1,'p_local_dec_tail2','Parser.py',939),
  ('local_value -> local_value_value','local_value',1,'p_local_value','Parser.py',953),
  ('local_value -> list_value','local_value',1,'p_local_value','Parser.py',954),
  ('local_value_value -> local_type_cast','local_value_value',1,'p_local_value_value','Parser.py',959),
  ('local_value_value -> local_expression','local_value_value',1,'p_local_value_value','Parser.py',960),
  ('local_value_value -> function_call','local_value_value',1,'p_local_value_value','Parser.py',961),
  ('local_expression -> local_factor local_factor_tail','local_expression',2,'p_local_expression','Parser.py',966),
  ('local_factor -> local_var_call local_postfix','local_factor',2,'p_local_factor','Parser.py',976),
  ('local_factor -> local_factor1','local_factor',1,'p_local_factor','Parser.py',977),
  ('local_factor -> TILDE INT_LIT','local_factor',2,'p_local_factor','Parser.py',978),
  ('local_factor -> TILDE FLT_LIT','local_factor',2,'p_local_factor','Parser.py',979),
  ('local_factor -> LPAREN local_factor RPAREN','local_factor',3,'p_local_factor','Parser.py',980),
  ('local_var_call -> IDENT local_list_index','local_var_call',2,'p_local_var_call','Parser.py',1001),
  ('local_postfix_op -> PLUS_PLUS','local_postfix_op',1,'p_local_postfix_op','Parser.py',1007),
  ('local_postfix_op -> MINUS_MINUS','local_postfix_op',1,'p_local_postfix_op','Parser.py',1008),
  ('local_postfix -> empty','local_postfix',1,'p_local_postfix','Parser.py',1013),
  ('local_postfix -> local_postfix_op','local_postfix',1,'p_local_postfix','Parser.py',1014),
  ('local_list_index -> LBRACKET local_index RBRACKET local_list_index2','local_list_index',4,'p_local_list_index','Parser.py',1020),
  ('local_list_index -> empty','local_list_index',1,'p_local_list_index','Parser.py',1021),
  ('local_list_index2 -> LBRACKET local_index RBRACKET','local_list_index2',3,'p_local_list_index2','Parser.py',1031),
  ('local_list_index2 -> empty','local_list_index2',1,'p_local_list_index2','Parser.py',1032),
  ('local_index -> INT_LIT','local_index',1,'p_local_int_lit','Parser.py',1041),
  ('local_index -> IDENT','local_index',1,'p_local_index_ident','Parser.py',1046),
  ('local_factor_tail -> PLUS local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1050),
  ('local_factor_tail -> MINUS local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1051),
  ('local_factor_tail -> MULTIPLY local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1052),
  ('local_factor_tail -> DIVISION local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1053),
  ('local_factor_tail -> MODULO local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1054),
  ('local_factor_tail -> EXPONENT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1055),
  ('local_factor_tail -> GT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1056),
  ('local_factor_tail -> LT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1057),
  ('local_factor_tail -> EQ_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1058),
  ('local_factor_tail -> GT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1059),
  ('local_factor_tail -> LT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1060),
  ('local_factor_tail -> NOT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1061),
  ('local_factor_tail -> AND local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1062),
  ('local_factor_tail -> OR local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',1063),
  ('local_factor_tail -> empty','local_factor_tail',1,'p_local_factor_tail','Parser.py',1064),
  ('local_factor1 -> INT_LIT','local_factor1',1,'p_local_factor1','Parser.py',1078),
  ('local_factor1 -> FLT_LIT','local_factor1',1,'p_local_factor1','Parser.py',1079),
  ('local_factor1 -> DAY','local_factor1',1,'p_local_factor1','Parser.py',1080),
  ('local_factor1 -> NIGHT','local_factor1',1,'p_local_factor1','Parser.py',1081),
  ('local_factor1 -> STR_LIT','local_factor1',1,'p_local_factor1','Parser.py',1082),
  ('local_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',1087),
  ('local_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',1088),
  ('local_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',1089),
  ('local_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',1090),
  ('conditional_statement -> CHECK LPAREN condition RPAREN LBRACE statements RBRACE conditional_tail OTHERWISE LBRACE statements RBRACE','conditional_statement',12,'p_conditional_statement','Parser.py',1097),
  ('conditional_tail -> OTHERWISE_CHECK LPAREN condition RPAREN LBRACE statements RBRACE conditional_tail','conditional_tail',8,'p_conditional_tail','Parser.py',1108),
  ('conditional_tail -> empty','conditional_tail',1,'p_conditional_tail','Parser.py',1109),
  ('condition -> condition_factor condition_tail','condition',2,'p_condition','Parser.py',1119),
  ('condition_factor -> condition_var_call condition_postfix','condition_factor',2,'p_condition_factor','Parser.py',1129),
  ('condition_factor -> condition1','condition_factor',1,'p_condition_factor','Parser.py',1130),
  ('condition_factor -> TILDE INT_LIT','condition_factor',2,'p_condition_factor','Parser.py',1131),
  ('condition_factor -> TILDE FLT_LIT','condition_factor',2,'p_condition_factor','Parser.py',1132),
  ('condition_factor -> LPAREN condition RPAREN','condition_factor',3,'p_condition_factor','Parser.py',1133),
  ('condition_var_call -> IDENT condition_list_index','condition_var_call',2,'p_condition_var_call','Parser.py',1153),
  ('condition_postfix_op -> PLUS_PLUS','condition_postfix_op',1,'p_condition_postfix_op','Parser.py',1159),
  ('condition_postfix_op -> MINUS_MINUS','condition_postfix_op',1,'p_condition_postfix_op','Parser.py',1160),
  ('condition_postfix -> empty','condition_postfix',1,'p_condition_postfix','Parser.py',1165),
  ('condition_postfix -> condition_postfix_op','condition_postfix',1,'p_condition_postfix','Parser.py',1166),
  ('condition_list_index -> LBRACKET condition_index RBRACKET condition_list_index2','condition_list_index',4,'p_condition_list_index','Parser.py',1172),
  ('condition_list_index -> empty','condition_list_index',1,'p_condition_list_index','Parser.py',1173),
  ('condition_list_index2 -> LBRACKET condition_index RBRACKET','condition_list_index2',3,'p_condition_list_index2','Parser.py',1183),
  ('condition_list_index2 -> empty','condition_list_index2',1,'p_condition_list_index2','Parser.py',1184),
  ('condition_index -> INT_LIT','condition_index',1,'p_condition_int_lit','Parser.py',1193),
  ('condition_index -> IDENT','condition_index',1,'p_condition_index_ident','Parser.py',1198),
  ('condition_tail -> PLUS condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1202),
  ('condition_tail -> MINUS condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1203),
  ('condition_tail -> MULTIPLY condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1204),
  ('condition_tail -> DIVISION condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1205),
  ('condition_tail -> MODULO condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1206),
  ('condition_tail -> EXPONENT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1207),
  ('condition_tail -> GT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1208),
  ('condition_tail -> LT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1209),
  ('condition_tail -> EQ_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1210),
  ('condition_tail -> GT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1211),
  ('condition_tail -> LT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1212),
  ('condition_tail -> NOT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1213),
  ('condition_tail -> AND condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1214),
  ('condition_tail -> OR condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',1215),
  ('condition_tail -> empty','condition_tail',1,'p_condition_tail','Parser.py',1216),
  ('condition1 -> INT_LIT','condition1',1,'p_condition1','Parser.py',1230),
  ('condition1 -> FLT_LIT','condition1',1,'p_condition1','Parser.py',1231),
  ('condition1 -> DAY','condition1',1,'p_condition1','Parser.py',1232),
  ('condition1 -> NIGHT','condition1',1,'p_condition1','Parser.py',1233),
  ('condition1 -> STR_LIT','condition1',1,'p_condition1','Parser.py',1234),
  ('switch_statement -> SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE LBRACE statements RBRACE RBRACE','switch_statement',11,'p_switch_statement','Parser.py',1246),
  ('switch_condition -> SHIFT switch_value COLON statements switchcond_tail','switch_condition',5,'p_switch_condition','Parser.py',1260),
  ('switch_value -> switch_type_cast','switch_value',1,'p_switch_value','Parser.py',1266),
  ('switch_value -> switch_expression','switch_value',1,'p_switch_value','Parser.py',1267),
  ('switch_value -> function_call','switch_value',1,'p_switch_value','Parser.py',1268),
  ('switch_expression -> switch_factor switch_factor_tail','switch_expression',2,'p_switch_expression','Parser.py',1273),
  ('switch_factor -> switch_var_call switch_postfix','switch_factor',2,'p_switch_factor','Parser.py',1283),
  ('switch_factor -> switch_factor1','switch_factor',1,'p_switch_factor','Parser.py',1284),
  ('switch_factor -> TILDE INT_LIT','switch_factor',2,'p_switch_factor','Parser.py',1285),
  ('switch_factor -> TILDE FLT_LIT','switch_factor',2,'p_switch_factor','Parser.py',1286),
  ('switch_factor -> LPAREN switch_factor RPAREN','switch_factor',3,'p_switch_factor','Parser.py',1287),
  ('switch_var_call -> IDENT switch_list_index','switch_var_call',2,'p_switch_var_call','Parser.py',1307),
  ('switch_postfix_op -> PLUS_PLUS','switch_postfix_op',1,'p_switch_postfix_op','Parser.py',1313),
  ('switch_postfix_op -> MINUS_MINUS','switch_postfix_op',1,'p_switch_postfix_op','Parser.py',1314),
  ('switch_postfix -> empty','switch_postfix',1,'p_switch_postfix','Parser.py',1319),
  ('switch_postfix -> switch_postfix_op','switch_postfix',1,'p_switch_postfix','Parser.py',1320),
  ('switch_list_index -> LBRACKET switch_index RBRACKET switch_list_index2','switch_list_index',4,'p_switch_list_index','Parser.py',1326),
  ('switch_list_index -> empty','switch_list_index',1,'p_switch_list_index','Parser.py',1327),
  ('switch_list_index2 -> LBRACKET switch_index RBRACKET','switch_list_index2',3,'p_switch_list_index2','Parser.py',1337),
  ('switch_list_index2 -> empty','switch_list_index2',1,'p_switch_list_index2','Parser.py',1338),
  ('switch_index -> INT_LIT','switch_index',1,'p_switch_int_lit','Parser.py',1346),
  ('switch_index -> IDENT','switch_index',1,'p_switch_index_ident','Parser.py',1351),
  ('switch_factor_tail -> PLUS switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1356),
  ('switch_factor_tail -> MINUS switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1357),
  ('switch_factor_tail -> MULTIPLY switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1358),
  ('switch_factor_tail -> DIVISION switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1359),
  ('switch_factor_tail -> MODULO switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1360),
  ('switch_factor_tail -> EXPONENT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1361),
  ('switch_factor_tail -> GT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1362),
  ('switch_factor_tail -> LT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1363),
  ('switch_factor_tail -> EQ_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1364),
  ('switch_factor_tail -> GT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1365),
  ('switch_factor_tail -> LT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1366),
  ('switch_factor_tail -> NOT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1367),
  ('switch_factor_tail -> AND switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1368),
  ('switch_factor_tail -> OR switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1369),
  ('switch_factor_tail -> empty','switch_factor_tail',1,'p_switch_factor_tail','Parser.py',1370),
  ('switch_factor1 -> INT_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1384),
  ('switch_factor1 -> FLT_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1385),
  ('switch_factor1 -> DAY','switch_factor1',1,'p_switch_factor1','Parser.py',1386),
  ('switch_factor1 -> NIGHT','switch_factor1',1,'p_switch_factor1','Parser.py',1387),
  ('switch_factor1 -> STR_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1388),
  ('switch_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1393),
  ('switch_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1394),
  ('switch_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1395),
  ('switch_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1396),
  ('switchcond_tail -> switch_condition','switchcond_tail',1,'p_switchcond_tail','Parser.py',1404),
  ('switchcond_tail -> empty','switchcond_tail',1,'p_switchcond_tail','Parser.py',1405),
  ('loop_statement -> for_loop','loop_statement',1,'p_loop_statement','Parser.py',1420),
  ('loop_statement -> until_loop','loop_statement',1,'p_loop_statement','Parser.py',1421),
  ('loop_statement -> repeat_until','loop_statement',1,'p_loop_statement','Parser.py',1422),
  ('for_loop -> FOR LPAREN control_variable SEMICOLON for_expression SEMICOLON update RPAREN LBRACE statements RBRACE','for_loop',11,'p_for_loop','Parser.py',1430),
  ('for_expression -> for_factor for_factor_tail','for_expression',2,'p_for_expression','Parser.py',1435),
  ('for_factor -> for_var_call for_postfix','for_factor',2,'p_for_factor','Parser.py',1445),
  ('for_factor -> for_factor1','for_factor',1,'p_for_factor','Parser.py',1446),
  ('for_factor -> TILDE INT_LIT','for_factor',2,'p_for_factor','Parser.py',1447),
  ('for_factor -> TILDE FLT_LIT','for_factor',2,'p_for_factor','Parser.py',1448),
  ('for_factor -> LPAREN for_factor RPAREN','for_factor',3,'p_for_factor','Parser.py',1449),
  ('for_var_call -> IDENT for_list_index','for_var_call',2,'p_for_var_call','Parser.py',1469),
  ('for_postfix_op -> PLUS_PLUS','for_postfix_op',1,'p_for_postfix_op','Parser.py',1475),
  ('for_postfix_op -> MINUS_MINUS','for_postfix_op',1,'p_for_postfix_op','Parser.py',1476),
  ('for_postfix -> empty','for_postfix',1,'p_for_postfix','Parser.py',1481),
  ('for_postfix -> for_postfix_op','for_postfix',1,'p_for_postfix','Parser.py',1482),
  ('for_list_index -> LBRACKET for_index RBRACKET for_list_index2','for_list_index',4,'p_for_list_index','Parser.py',1488),
  ('for_list_index -> empty','for_list_index',1,'p_for_list_index','Parser.py',1489),
  ('for_list_index2 -> LBRACKET for_index RBRACKET','for_list_index2',3,'p_for_list_index2','Parser.py',1499),
  ('for_list_index2 -> empty','for_list_index2',1,'p_for_list_index2','Parser.py',1500),
  ('for_index -> INT_LIT','for_index',1,'p_for_int_lit','Parser.py',1509),
  ('for_index -> IDENT','for_index',1,'p_for_index_ident','Parser.py',1514),
  ('for_factor_tail -> PLUS for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1521),
  ('for_factor_tail -> MINUS for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1522),
  ('for_factor_tail -> MULTIPLY for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1523),
  ('for_factor_tail -> DIVISION for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1524),
  ('for_factor_tail -> MODULO for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1525),
  ('for_factor_tail -> EXPONENT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1526),
  ('for_factor_tail -> GT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1527),
  ('for_factor_tail -> LT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1528),
  ('for_factor_tail -> EQ_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1529),
  ('for_factor_tail -> GT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1530),
  ('for_factor_tail -> LT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1531),
  ('for_factor_tail -> NOT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1532),
  ('for_factor_tail -> AND for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1533),
  ('for_factor_tail -> OR for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1534),
  ('for_factor_tail -> empty','for_factor_tail',1,'p_for_factor_tail','Parser.py',1535),
  ('for_factor1 -> INT_LIT','for_factor1',1,'p_for_factor1','Parser.py',1549),
  ('for_factor1 -> FLT_LIT','for_factor1',1,'p_for_factor1','Parser.py',1550),
  ('for_factor1 -> DAY','for_factor1',1,'p_for_factor1','Parser.py',1551),
  ('for_factor1 -> NIGHT','for_factor1',1,'p_for_factor1','Parser.py',1552),
  ('for_factor1 -> STR_LIT','for_factor1',1,'p_for_factor1','Parser.py',1553),
  ('until_loop -> UNTIL LPAREN until_expression RPAREN LBRACE statements RBRACE','until_loop',7,'p_until_loop','Parser.py',1561),
  ('until_expression -> until_factor until_factor_tail','until_expression',2,'p_until_expression','Parser.py',1568),
  ('until_factor -> until_var_call until_postfix','until_factor',2,'p_until_factor','Parser.py',1578),
  ('until_factor -> until_factor1','until_factor',1,'p_until_factor','Parser.py',1579),
  ('until_factor -> TILDE INT_LIT','until_factor',2,'p_until_factor','Parser.py',1580),
  ('until_factor -> TILDE FLT_LIT','until_factor',2,'p_until_factor','Parser.py',1581),
  ('until_factor -> LPAREN until_factor RPAREN','until_factor',3,'p_until_factor','Parser.py',1582),
  ('until_var_call -> IDENT until_list_index','until_var_call',2,'p_until_var_call','Parser.py',1602),
  ('until_postfix_op -> PLUS_PLUS','until_postfix_op',1,'p_until_postfix_op','Parser.py',1608),
  ('until_postfix_op -> MINUS_MINUS','until_postfix_op',1,'p_until_postfix_op','Parser.py',1609),
  ('until_postfix -> empty','until_postfix',1,'p_until_postfix','Parser.py',1614),
  ('until_postfix -> until_postfix_op','until_postfix',1,'p_until_postfix','Parser.py',1615),
  ('until_list_index -> LBRACKET until_index RBRACKET until_list_index2','until_list_index',4,'p_until_list_index','Parser.py',1621),
  ('until_list_index -> empty','until_list_index',1,'p_until_list_index','Parser.py',1622),
  ('until_list_index2 -> LBRACKET until_index RBRACKET','until_list_index2',3,'p_until_list_index2','Parser.py',1632),
  ('until_list_index2 -> empty','until_list_index2',1,'p_until_list_index2','Parser.py',1633),
  ('until_index -> INT_LIT','until_index',1,'p_until_int_lit','Parser.py',1643),
  ('until_index -> IDENT','until_index',1,'p_until_index_ident','Parser.py',1648),
  ('until_factor_tail -> PLUS until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1653),
  ('until_factor_tail -> MINUS until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1654),
  ('until_factor_tail -> MULTIPLY until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1655),
  ('until_factor_tail -> DIVISION until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1656),
  ('until_factor_tail -> MODULO until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1657),
  ('until_factor_tail -> EXPONENT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1658),
  ('until_factor_tail -> GT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1659),
  ('until_factor_tail -> LT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1660),
  ('until_factor_tail -> EQ_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1661),
  ('until_factor_tail -> GT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1662),
  ('until_factor_tail -> LT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1663),
  ('until_factor_tail -> NOT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1664),
  ('until_factor_tail -> AND until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1665),
  ('until_factor_tail -> OR until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1666),
  ('until_factor_tail -> empty','until_factor_tail',1,'p_until_factor_tail','Parser.py',1667),
  ('until_factor1 -> INT_LIT','until_factor1',1,'p_until_factor1','Parser.py',1681),
  ('until_factor1 -> FLT_LIT','until_factor1',1,'p_until_factor1','Parser.py',1682),
  ('until_factor1 -> DAY','until_factor1',1,'p_until_factor1','Parser.py',1683),
  ('until_factor1 -> NIGHT','until_factor1',1,'p_until_factor1','Parser.py',1684),
  ('until_factor1 -> STR_LIT','until_factor1',1,'p_until_factor1','Parser.py',1685),
  ('repeat_until -> REPEAT LBRACE statements RBRACE UNTIL LPAREN until_expression RPAREN','repeat_until',8,'p_repeat_until','Parser.py',1693),
  ('control_variable -> INT IDENT EQ control_var_tail','control_variable',4,'p_control_variable','Parser.py',1701),
  ('control_var_tail -> INT_LIT','control_var_tail',1,'p_control_var_tail','Parser.py',1715),
  ('control_var_tail -> var_call','control_var_tail',1,'p_control_var_tail','Parser.py',1716),
  ('update -> var_call update_tail','update',2,'p_update','Parser.py',1729),
  ('update_tail -> postfix_op','update_tail',1,'p_update_tail','Parser.py',1739),
  ('update_tail -> compound_op value','update_tail',2,'p_update_tail','Parser.py',1740),
  ('postfix_op -> PLUS_PLUS','postfix_op',1,'p_postfix_op','Parser.py',1753),
  ('postfix_op -> MINUS_MINUS','postfix_op',1,'p_postfix_op','Parser.py',1754),
  ('function_call -> FUNCTION_NAME LPAREN arguments RPAREN SEMICOLON','function_call',5,'p_function_call','Parser.py',1764),
  ('function_call -> input_statement SEMICOLON','function_call',2,'p_function_call','Parser.py',1765),
  ('arguments -> empty','arguments',1,'p_arguments','Parser.py',1777),
  ('arguments -> arg_value arg_tail','arguments',2,'p_arguments','Parser.py',1778),
  ('arg_tail -> COMMA arg_value arg_tail','arg_tail',3,'p_arg_tail','Parser.py',1791),
  ('arg_tail -> empty','arg_tail',1,'p_arg_tail','Parser.py',1792),
  ('arg_value -> literal','arg_value',1,'p_arg_value','Parser.py',1805),
  ('arg_value -> var_call','arg_value',1,'p_arg_value','Parser.py',1806),
  ('output_statement -> DISPLAY output_value next_val SEMICOLON','output_statement',4,'p_output_statement','Parser.py',1815),
  ('output_value -> output_type_cast','output_value',1,'p_output_value','Parser.py',1822),
  ('output_value -> output_expression','output_value',1,'p_output_value','Parser.py',1823),
  ('output_value -> function_call','output_value',1,'p_output_value','Parser.py',1824),
  ('output_expression -> output_factor output_factor_tail','output_expression',2,'p_output_expression','Parser.py',1830),
  ('output_factor -> output_var_call output_postfix','output_factor',2,'p_output_factor','Parser.py',1840),
  ('output_factor -> output_factor1','output_factor',1,'p_output_factor','Parser.py',1841),
  ('output_factor -> TILDE INT_LIT','output_factor',2,'p_output_factor','Parser.py',1842),
  ('output_factor -> TILDE FLT_LIT','output_factor',2,'p_output_factor','Parser.py',1843),
  ('output_factor -> LPAREN output_factor RPAREN','output_factor',3,'p_output_factor','Parser.py',1844),
  ('output_var_call -> IDENT output_list_index','output_var_call',2,'p_output_var_call','Parser.py',1864),
  ('output_postfix_op -> PLUS_PLUS','output_postfix_op',1,'p_output_postfix_op','Parser.py',1870),
  ('output_postfix_op -> MINUS_MINUS','output_postfix_op',1,'p_output_postfix_op','Parser.py',1871),
  ('output_postfix -> empty','output_postfix',1,'p_output_postfix','Parser.py',1876),
  ('output_postfix -> output_postfix_op','output_postfix',1,'p_output_postfix','Parser.py',1877),
  ('output_list_index -> LBRACKET output_index RBRACKET output_list_index2','output_list_index',4,'p_output_list_index','Parser.py',1883),
  ('output_list_index -> empty','output_list_index',1,'p_output_list_index','Parser.py',1884),
  ('output_list_index2 -> LBRACKET output_index RBRACKET','output_list_index2',3,'p_output_list_index2','Parser.py',1894),
  ('output_list_index2 -> empty','output_list_index2',1,'p_output_list_index2','Parser.py',1895),
  ('output_index -> INT_LIT','output_index',1,'p_output_int_lit','Parser.py',1904),
  ('output_index -> IDENT','output_index',1,'p_output_index_ident','Parser.py',1909),
  ('output_factor_tail -> PLUS output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1914),
  ('output_factor_tail -> MINUS output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1915),
  ('output_factor_tail -> MULTIPLY output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1916),
  ('output_factor_tail -> DIVISION output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1917),
  ('output_factor_tail -> MODULO output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1918),
  ('output_factor_tail -> EXPONENT output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1919),
  ('output_factor_tail -> GT output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1920),
  ('output_factor_tail -> LT output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1921),
  ('output_factor_tail -> EQ_EQ output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1922),
  ('output_factor_tail -> GT_EQ output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1923),
  ('output_factor_tail -> LT_EQ output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1924),
  ('output_factor_tail -> NOT_EQ output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1925),
  ('output_factor_tail -> AND output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1926),
  ('output_factor_tail -> OR output_factor output_factor_tail','output_factor_tail',3,'p_output_factor_tail','Parser.py',1927),
  ('output_factor_tail -> empty','output_factor_tail',1,'p_output_factor_tail','Parser.py',1928),
  ('output_factor1 -> INT_LIT','output_factor1',1,'p_output_factor1','Parser.py',1942),
  ('output_factor1 -> FLT_LIT','output_factor1',1,'p_output_factor1','Parser.py',1943),
  ('output_factor1 -> DAY','output_factor1',1,'p_output_factor1','Parser.py',1944),
  ('output_factor1 -> NIGHT','output_factor1',1,'p_output_factor1','Parser.py',1945),
  ('output_factor1 -> STR_LIT','output_factor1',1,'p_output_factor1','Parser.py',1946),
  ('output_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','output_type_cast',4,'p_output_type_cast','Parser.py',1951),
  ('output_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','output_type_cast',4,'p_output_type_cast','Parser.py',1952),
  ('output_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','output_type_cast',4,'p_output_type_cast','Parser.py',1953),
  ('output_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','output_type_cast',4,'p_output_type_cast','Parser.py',1954),
  ('next_val -> COMMA value next_val','next_val',3,'p_next_val','Parser.py',1962),
  ('next_val -> empty','next_val',1,'p_next_val','Parser.py',1963),
  ('assignment_statement -> var_call EQ value SEMICOLON','assignment_statement',4,'p_assignment_statement_indexed','Parser.py',1976),
  ('assignment_statement -> IDENT assign_tail SEMICOLON','assignment_statement',3,'p_assignment_statement','Parser.py',1990),
  ('assign_tail -> DOT SPLICE LPAREN start COMMA deleteCount COMMA splice_items RPAREN','assign_tail',9,'p_assign_tail','Parser.py',2008),
  ('assign_tail -> DOT PUSH LPAREN list_element RPAREN','assign_tail',5,'p_assign_tail','Parser.py',2009),
  ('assign_tail -> assign_op assign_value','assign_tail',2,'p_assign_tail','Parser.py',2010),
  ('assign_value -> assign_type_cast','assign_value',1,'p_assign_value','Parser.py',2020),
  ('assign_value -> assign_expression','assign_value',1,'p_assign_value','Parser.py',2021),
  ('assign_value -> function_call','assign_value',1,'p_assign_value','Parser.py',2022),
  ('assign_expression -> assign_factor assign_factor_tail','assign_expression',2,'p_assign_expression','Parser.py',2028),
  ('assign_factor -> assign_var_call assign_postfix','assign_factor',2,'p_assign_factor','Parser.py',2038),
  ('assign_factor -> assign_factor1','assign_factor',1,'p_assign_factor','Parser.py',2039),
  ('assign_factor -> TILDE INT_LIT','assign_factor',2,'p_assign_factor','Parser.py',2040),
  ('assign_factor -> TILDE FLT_LIT','assign_factor',2,'p_assign_factor','Parser.py',2041),
  ('assign_factor -> LPAREN assign_factor RPAREN','assign_factor',3,'p_assign_factor','Parser.py',2042),
  ('assign_var_call -> IDENT assign_list_index','assign_var_call',2,'p_assign_var_call','Parser.py',2062),
  ('assign_postfix_op -> PLUS_PLUS','assign_postfix_op',1,'p_assign_postfix_op','Parser.py',2068),
  ('assign_postfix_op -> MINUS_MINUS','assign_postfix_op',1,'p_assign_postfix_op','Parser.py',2069),
  ('assign_postfix -> empty','assign_postfix',1,'p_assign_postfix','Parser.py',2074),
  ('assign_postfix -> assign_postfix_op','assign_postfix',1,'p_assign_postfix','Parser.py',2075),
  ('assign_list_index -> LBRACKET assign_index RBRACKET assign_list_index2','assign_list_index',4,'p_assign_list_index','Parser.py',2081),
  ('assign_list_index -> empty','assign_list_index',1,'p_assign_list_index','Parser.py',2082),
  ('assign_list_index2 -> LBRACKET assign_index RBRACKET','assign_list_index2',3,'p_assign_list_index2','Parser.py',2092),
  ('assign_list_index2 -> empty','assign_list_index2',1,'p_assign_list_index2','Parser.py',2093),
  ('assign_index -> INT_LIT','assign_index',1,'p_assign_int_lit','Parser.py',2102),
  ('assign_index -> IDENT','assign_index',1,'p_assign_index_ident','Parser.py',2107),
  ('assign_factor_tail -> PLUS assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2112),
  ('assign_factor_tail -> MINUS assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2113),
  ('assign_factor_tail -> MULTIPLY assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2114),
  ('assign_factor_tail -> DIVISION assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2115),
  ('assign_factor_tail -> MODULO assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2116),
  ('assign_factor_tail -> EXPONENT assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2117),
  ('assign_factor_tail -> GT assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2118),
  ('assign_factor_tail -> LT assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2119),
  ('assign_factor_tail -> EQ_EQ assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2120),
  ('assign_factor_tail -> GT_EQ assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2121),
  ('assign_factor_tail -> LT_EQ assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2122),
  ('assign_factor_tail -> NOT_EQ assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2123),
  ('assign_factor_tail -> AND assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2124),
  ('assign_factor_tail -> OR assign_factor assign_factor_tail','assign_factor_tail',3,'p_assign_factor_tail','Parser.py',2125),
  ('assign_factor_tail -> empty','assign_factor_tail',1,'p_assign_factor_tail','Parser.py',2126),
  ('assign_factor1 -> INT_LIT','assign_factor1',1,'p_assign_factor1','Parser.py',2140),
  ('assign_factor1 -> FLT_LIT','assign_factor1',1,'p_assign_factor1','Parser.py',2141),
  ('assign_factor1 -> DAY','assign_factor1',1,'p_assign_factor1','Parser.py',2142),
  ('assign_factor1 -> NIGHT','assign_factor1',1,'p_assign_factor1','Parser.py',2143),
  ('assign_factor1 -> STR_LIT','assign_factor1',1,'p_assign_factor1','Parser.py',2144),
  ('assign_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','assign_type_cast',4,'p_assign_type_cast','Parser.py',2149),
  ('assign_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','assign_type_cast',4,'p_assign_type_cast','Parser.py',2150),
  ('assign_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','assign_type_cast',4,'p_assign_type_cast','Parser.py',2151),
  ('assign_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','assign_type_cast',4,'p_assign_type_cast','Parser.py',2152),
  ('assign_op -> compound_op','assign_op',1,'p_assign_op','Parser.py',2161),
  ('assign_op -> EQ','assign_op',1,'p_assign_op','Parser.py',2162),
  ('compound_op -> PLUS_EQ','compound_op',1,'p_compound_op','Parser.py',2175),
  ('compound_op -> MINUS_EQ','compound_op',1,'p_compound_op','Parser.py',2176),
  ('compound_op -> MUL_EQ','compound_op',1,'p_compound_op','Parser.py',2177),
  ('compound_op -> DIV_EQ','compound_op',1,'p_compound_op','Parser.py',2178),
  ('compound_op -> MOD_EQ','compound_op',1,'p_compound_op','Parser.py',2179),
  ('start -> INT_LIT','start',1,'p_start','Parser.py',2188),
  ('deleteCount -> empty','deleteCount',1,'p_deleteCount','Parser.py',2198),
  ('deleteCount -> INT_LIT','deleteCount',1,'p_deleteCount','Parser.py',2199),
  ('splice_items -> empty','splice_items',1,'p_splice_items','Parser.py',2212),
  ('splice_items -> list_element','splice_items',1,'p_splice_items','Parser.py',2213),
  ('var_call -> IDENT list_index','var_call',2,'p_var_call','Parser.py',2225),
  ('list_index -> LBRACKET index RBRACKET list_index2','list_index',4,'p_list_index','Parser.py',2236),
  ('list_index -> empty','list_index',1,'p_list_index','Parser.py',2237),
  ('list_index2 -> LBRACKET index RBRACKET','list_index2',3,'p_list_index2','Parser.py',2250),
  ('list_index2 -> empty','list_index2',1,'p_list_index2','Parser.py',2251),
  ('index -> INT_LIT','index',1,'p_index_int_lit','Parser.py',2264),
  ('index -> IDENT','index',1,'p_index_ident','Parser.py',2268),
  ('postfix -> empty','postfix',1,'p_postfix','Parser.py',2277),
  ('postfix -> postfix_op','postfix',1,'p_postfix','Parser.py',2278),
  ('value -> type_cast','value',1,'p_value','Parser.py',2289),
  ('value -> value_expression','value',1,'p_value','Parser.py',2290),
  ('value -> function_call','value',1,'p_value','Parser.py',2291),
  ('value_expression -> value_factor value_factor_tail','value_expression',2,'p_value_expression','Parser.py',2298),
  ('value_factor -> value_var_call value_postfix','value_factor',2,'p_value_factor','Parser.py',2308),
  ('value_factor -> value_factor1','value_factor',1,'p_value_factor','Parser.py',2309),
  ('value_factor -> TILDE INT_LIT','value_factor',2,'p_value_factor','Parser.py',2310),
  ('value_factor -> TILDE FLT_LIT','value_factor',2,'p_value_factor','Parser.py',2311),
  ('value_factor -> LPAREN value_factor RPAREN','value_factor',3,'p_value_factor','Parser.py',2312),
  ('value_var_call -> IDENT value_list_index','value_var_call',2,'p_value_var_call','Parser.py',2333),
  ('value_postfix_op -> PLUS_PLUS','value_postfix_op',1,'p_value_postfix_op','Parser.py',2339),
  ('value_postfix_op -> MINUS_MINUS','value_postfix_op',1,'p_value_postfix_op','Parser.py',2340),
  ('value_postfix -> empty','value_postfix',1,'p_value_postfix','Parser.py',2345),
  ('value_postfix -> value_postfix_op','value_postfix',1,'p_value_postfix','Parser.py',2346),
  ('value_list_index -> LBRACKET value_index RBRACKET value_list_index2','value_list_index',4,'p_value_list_index','Parser.py',2352),
  ('value_list_index -> empty','value_list_index',1,'p_value_list_index','Parser.py',2353),
  ('value_list_index2 -> LBRACKET value_index RBRACKET','value_list_index2',3,'p_value_list_index2','Parser.py',2363),
  ('value_list_index2 -> empty','value_list_index2',1,'p_value_list_index2','Parser.py',2364),
  ('value_index -> INT_LIT','value_index',1,'p_value_int_lit','Parser.py',2373),
  ('value_index -> IDENT','value_index',1,'p_value_index_ident','Parser.py',2378),
  ('value_factor_tail -> PLUS value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2383),
  ('value_factor_tail -> MINUS value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2384),
  ('value_factor_tail -> MULTIPLY value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2385),
  ('value_factor_tail -> DIVISION value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2386),
  ('value_factor_tail -> MODULO value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2387),
  ('value_factor_tail -> EXPONENT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2388),
  ('value_factor_tail -> GT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2389),
  ('value_factor_tail -> LT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2390),
  ('value_factor_tail -> EQ_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2391),
  ('value_factor_tail -> GT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2392),
  ('value_factor_tail -> LT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2393),
  ('value_factor_tail -> NOT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2394),
  ('value_factor_tail -> AND value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2395),
  ('value_factor_tail -> OR value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',2396),
  ('value_factor_tail -> empty','value_factor_tail',1,'p_value_factor_tail','Parser.py',2397),
  ('value_factor1 -> INT_LIT','value_factor1',1,'p_value_factor1','Parser.py',2411),
  ('value_factor1 -> FLT_LIT','value_factor1',1,'p_value_factor1','Parser.py',2412),
  ('value_factor1 -> DAY','value_factor1',1,'p_value_factor1','Parser.py',2413),
  ('value_factor1 -> NIGHT','value_factor1',1,'p_value_factor1','Parser.py',2414),
  ('value_factor1 -> STR_LIT','value_factor1',1,'p_value_factor1','Parser.py',2415),
  ('type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',2426),
  ('type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',2427),
  ('type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',2428),
  ('type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',2429),
  ('typecast_value -> typecast_expression','typecast_value',1,'p_typecast_value','Parser.py',2441),
  ('typecast_value -> FUNCTION_NAME LPAREN RPAREN','typecast_value',3,'p_typecast_value','Parser.py',2442),
  ('typecast_value -> input_statement','typecast_value',1,'p_typecast_value','Parser.py',2443),
  ('typecast_expression -> typecast_factor typecast_factor_tail','typecast_expression',2,'p_typecast_expression','Parser.py',2453),
  ('typecast_factor -> var_call postfix','typecast_factor',2,'p_typecast_factor','Parser.py',2463),
  ('typecast_factor -> typecast_factor1','typecast_factor',1,'p_typecast_factor','Parser.py',2464),
  ('typecast_factor -> TILDE INT_LIT','typecast_factor',2,'p_typecast_factor','Parser.py',2465),
  ('typecast_factor -> TILDE FLT_LIT','typecast_factor',2,'p_typecast_factor','Parser.py',2466),
  ('typecast_factor -> LPAREN typecast_factor RPAREN','typecast_factor',3,'p_typecast_factor','Parser.py',2467),
  ('typecast_factor_tail -> PLUS typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2488),
  ('typecast_factor_tail -> MINUS typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2489),
  ('typecast_factor_tail -> MULTIPLY typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2490),
  ('typecast_factor_tail -> DIVISION typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2491),
  ('typecast_factor_tail -> MODULO typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2492),
  ('typecast_factor_tail -> EXPONENT typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2493),
  ('typecast_factor_tail -> GT typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2494),
  ('typecast_factor_tail -> LT typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2495),
  ('typecast_factor_tail -> EQ_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2496),
  ('typecast_factor_tail -> GT_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2497),
  ('typecast_factor_tail -> LT_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2498),
  ('typecast_factor_tail -> NOT_EQ typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2499),
  ('typecast_factor_tail -> AND typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2500),
  ('typecast_factor_tail -> OR typecast_factor typecast_factor_tail','typecast_factor_tail',3,'p_typecast_factor_tail','Parser.py',2501),
  ('typecast_factor_tail -> empty','typecast_factor_tail',1,'p_typecast_factor_tail','Parser.py',2502),
  ('typecast_factor1 -> INT_LIT','typecast_factor1',1,'p_typecast_factor1','Parser.py',2516),
  ('typecast_factor1 -> FLT_LIT','typecast_factor1',1,'p_typecast_factor1','Parser.py',2517),
  ('typecast_factor1 -> DAY','typecast_factor1',1,'p_typecast_factor1','Parser.py',2518),
  ('typecast_factor1 -> NIGHT','typecast_factor1',1,'p_typecast_factor1','Parser.py',2519),
  ('typecast_factor1 -> STR_LIT','typecast_factor1',1,'p_typecast_factor1','Parser.py',2520),
  ('input_statement -> INPUT LPAREN RPAREN','input_statement',3,'p_input_statement','Parser.py',2528),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',2533),
]
