
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEXPONENTrightNOTMINUSleftMULTIPLYDIVISIONMODULOleftPLUSMINUSleftPLUS_PLUSMINUS_MINUSleftEQ_EQNOT_EQLTGTLT_EQGT_EQleftANDleftORrightEQPLUS_EQMINUS_EQMUL_EQDIV_EQMOD_EQAND BIRTH BLN BLN_LIT CARRIAGE_RETURN CHECK CHR CHR_LIT COLON COMMA COMMENT CONVERT_TO_BLN CONVERT_TO_FLT CONVERT_TO_INT CONVERT_TO_STR DAY DISPLAY DIVISION DIV_EQ DOT DOUBLE_LT DOUBLE_SLASH EOF EQ EQ_EQ EXPONENT FLT FLT_LIT FOR FUNCTION FUNCTION_BLN FUNCTION_CHR FUNCTION_FLT FUNCTION_INT FUNCTION_LIST_BLN FUNCTION_LIST_BLN2D FUNCTION_LIST_CHR FUNCTION_LIST_CHR2D FUNCTION_LIST_FLT FUNCTION_LIST_FLT2D FUNCTION_LIST_INT FUNCTION_LIST_INT2D FUNCTION_LIST_STR FUNCTION_LIST_STR2D FUNCTION_NAME FUNCTION_STR GHOST GT GT_EQ IDENT ILLEGAL IN INPUT INT INT_LIT LBRACE LBRACKET LIST_BLN LIST_BLN2D LIST_CHR LIST_CHR2D LIST_FLT LIST_FLT2D LIST_INT LIST_INT2D LIST_STR LIST_STR2D LPAREN LT LT_EQ MAIN_CASPER MEASURE MINUS MINUS_EQ MINUS_MINUS MODULO MOD_EQ MULTIPLY MUL_EQ NEWLINE NIGHT NOT NOT_EQ OR OTHERWISE OTHERWISE_CHECK PLUS PLUS_EQ PLUS_PLUS POW PUSH RBRACE RBRACKET REPEAT REVIVE RPAREN SEMICOLON SHIFT SKIP SPLICE STOP STR STR_LIT SWAP TILDE TYPE UNTILprogram : BIRTH unli_newline global_dec maybe_newline function_statements maybe_newline main_function unli_newline GHOST\n    maybe_newline : empty\n                  | NEWLINE maybe_newline\n    \n    unli_newline : NEWLINE\n                 | NEWLINE unli_newline\n    main_function : MAIN_CASPER LPAREN RPAREN maybe_newline LBRACE maybe_newline statements maybe_newline RBRACE\n    global_dec : global_statement unli_newline global_tail     \n               | empty                            \n    \n        global_tail : global_dec\n    \n        global_statement : var_statement global_statement_tail\n    \n        var_statement : data_type IDENT list_dec\n    \n    list_dec : empty               \n             | LBRACKET RBRACKET _2d_list \n    \n    _2d_list : empty            \n             | LBRACKET RBRACKET \n    \n    global_statement_tail : empty                        \n                          | COMMA IDENT global_statement_tail \n                          | EQ global_value global_statement_tail2 \n    \n    global_statement_tail2 : COMMA IDENT global_statement_tail \n                           | empty                           \n    \n    global_value : expression   \n                 | list_value   \n    \n     list_value : LBRACKET list_element RBRACKET\n    \n    list_element : literal element_tail  \n    \n    element_tail : COMMA list_element  \n                 | empty              \n    \n    data_type : INT   \n              | FLT   \n              | BLN  \n              | CHR  \n              | STR  \n    \n    expression : factor factor_tail\n    \n    factor : var_call postfix           \n           | literal1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN factor_expression RPAREN    \n    \n    factor_expression : factor_expression_factor factor_expression_tail\n    \n    factor_expression_factor : var_call postfix           \n           | factor_expression1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN factor_expression RPAREN    \n    \n    factor_expression_tail : PLUS factor_expression_factor factor_expression_tail\n                | MINUS factor_expression_factor factor_expression_tail\n                | MULTIPLY factor_expression_factor factor_expression_tail\n                | DIVISION factor_expression_factor factor_expression_tail\n                | MODULO factor_expression_factor factor_expression_tail\n                | EXPONENT factor_expression_factor factor_expression_tail\n                | GT factor_expression_factor factor_expression_tail\n                | LT factor_expression_factor factor_expression_tail\n                | EQ_EQ factor_expression_factor factor_expression_tail\n                | GT_EQ factor_expression_factor factor_expression_tail\n                | LT_EQ factor_expression_factor factor_expression_tail\n                | NOT_EQ factor_expression_factor factor_expression_tail\n                | AND factor_expression_factor factor_expression_tail\n                | OR factor_expression_factor factor_expression_tail\n                | empty\n    \n    factor_expression1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    factor_tail : PLUS factor factor_tail\n                | MINUS factor factor_tail\n                | MULTIPLY factor factor_tail\n                | DIVISION factor factor_tail\n                | MODULO factor factor_tail\n                | EXPONENT factor factor_tail\n                | GT factor factor_tail\n                | LT factor factor_tail\n                | EQ_EQ factor factor_tail\n                | GT_EQ factor factor_tail\n                | LT_EQ factor factor_tail\n                | NOT_EQ factor factor_tail\n                | AND factor factor_tail\n                | OR factor factor_tail\n                | empty\n    \n    literal : literal1\n            | literal2\n    \n    literal1 : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    literal2 : CHR_LIT\n    \n    function_statements : ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE maybe_newline statements maybe_newline revive unli_newline RBRACE function_statements_tail  \n                        | empty                                                          \n    \n    function_statements_tail : function_statements \n                             | empty               \n    \n    ret_type : FUNCTION           \n             | function_dtype    \n    \n    function_dtype : FUNCTION_INT       \n                   | FUNCTION_FLT      \n                   | FUNCTION_CHR       \n                   | FUNCTION_BLN       \n                   | FUNCTION_STR       \n                   | FUNCTION_LIST_INT \n                   | FUNCTION_LIST_FLT  \n                   | FUNCTION_LIST_CHR \n                   | FUNCTION_LIST_STR  \n                   | FUNCTION_LIST_BLN  \n    \n    parameters : data_type IDENT parameters_tail  \n               | empty                            \n    \n    parameters_tail : COMMA data_type IDENT parameters_tail \n                    | empty                                 \n    \n    revive : REVIVE revive_value  \n           | empty        \n    revive_value : revive_type_cast\n             | revive_expression\n             | function_call\n    revive_expression : revive_factor revive_factor_tail\n    \n    revive_factor : var_call postfix           \n           | revive_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN revive_factor RPAREN    \n    \n    revive_factor_tail : PLUS revive_factor revive_factor_tail\n                | MINUS revive_factor revive_factor_tail\n                | MULTIPLY revive_factor revive_factor_tail\n                | DIVISION revive_factor revive_factor_tail\n                | MODULO revive_factor revive_factor_tail\n                | EXPONENT revive_factor revive_factor_tail\n                | GT revive_factor revive_factor_tail\n                | LT revive_factor revive_factor_tail\n                | EQ_EQ revive_factor revive_factor_tail\n                | GT_EQ revive_factor revive_factor_tail\n                | LT_EQ revive_factor revive_factor_tail\n                | NOT_EQ revive_factor revive_factor_tail\n                | AND revive_factor revive_factor_tail\n                | OR revive_factor revive_factor_tail\n                | empty\n    \n    revive_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    revive_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPARENstatements : empty\n                  | local_dec maybe_newline statements_tail\n    statements_tail : switch_statement unli_newline statements\n                    | loop_statement unli_newline statements\n                    | function_call unli_newline statements\n                    | assignment_statement unli_newline statements\n                    | output_statement unli_newline statements\n                    | conditional_statement unli_newline statements\n                    | statements\n    \n    local_dec : var_statement local_dec_tail\n              | empty\n    \n    local_dec_tail : empty                          \n                   | COMMA IDENT local_dec_tail     \n                   | EQ local_value local_dec_tail2  \n    \n    local_dec_tail2 : COMMA IDENT local_dec_tail  \n                    | empty                      \n    \n    local_value : local_value_value      \n                | list_value  \n    local_value_value  : local_type_cast\n             | local_expression\n             | function_call\n    local_expression : local_factor local_factor_tail\n    \n    local_factor : var_call postfix           \n           | local_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN local_factor RPAREN    \n    \n    local_factor_tail : PLUS local_factor local_factor_tail\n                | MINUS local_factor local_factor_tail\n                | MULTIPLY local_factor local_factor_tail\n                | DIVISION local_factor local_factor_tail\n                | MODULO local_factor local_factor_tail\n                | EXPONENT local_factor local_factor_tail\n                | GT local_factor local_factor_tail\n                | LT local_factor local_factor_tail\n                | EQ_EQ local_factor local_factor_tail\n                | GT_EQ local_factor local_factor_tail\n                | LT_EQ local_factor local_factor_tail\n                | NOT_EQ local_factor local_factor_tail\n                | AND local_factor local_factor_tail\n                | OR local_factor local_factor_tail\n                | empty\n    \n    local_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    local_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    conditional_statement : CHECK LPAREN condition RPAREN LBRACE maybe_newline statements maybe_newline RBRACE  maybe_newline conditional_tail  maybe_newline OTHERWISE  maybe_newline LBRACE  maybe_newline statements  maybe_newline RBRACE  \n    \n    conditional_tail : OTHERWISE_CHECK LPAREN condition RPAREN LBRACE statements RBRACE conditional_tail \n                     | empty                                            \n    \n    condition : condition_factor condition_tail\n    \n    condition_factor : var_call postfix           \n           | condition1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN condition RPAREN    \n    \n    condition_tail : PLUS condition_factor condition_tail\n                | MINUS condition_factor condition_tail\n                | MULTIPLY condition_factor condition_tail\n                | DIVISION condition_factor condition_tail\n                | MODULO condition_factor condition_tail\n                | EXPONENT condition_factor condition_tail\n                | GT condition_factor condition_tail\n                | LT condition_factor condition_tail\n                | EQ_EQ condition_factor condition_tail\n                | GT_EQ condition_factor condition_tail\n                | LT_EQ condition_factor condition_tail\n                | NOT_EQ condition_factor condition_tail\n                | AND condition_factor condition_tail\n                | OR condition_factor condition_tail\n                | empty\n    \n    condition1 : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT\n    \n    switch_statement : SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE LBRACE statements RBRACE RBRACE \n    \n    switch_condition : SHIFT switch_value COLON statements switchcond_tail  \n    switch_value  : switch_type_cast\n             | switch_expression\n             | function_call\n    switch_expression : switch_factor switch_factor_tail\n    \n    switch_factor : var_call postfix           \n           | switch_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN switch_factor RPAREN    \n    \n    switch_factor_tail : PLUS switch_factor switch_factor_tail\n                | MINUS switch_factor switch_factor_tail\n                | MULTIPLY switch_factor switch_factor_tail\n                | DIVISION switch_factor switch_factor_tail\n                | MODULO switch_factor switch_factor_tail\n                | EXPONENT switch_factor switch_factor_tail\n                | GT switch_factor switch_factor_tail\n                | LT switch_factor switch_factor_tail\n                | EQ_EQ switch_factor switch_factor_tail\n                | GT_EQ switch_factor switch_factor_tail\n                | LT_EQ switch_factor switch_factor_tail\n                | NOT_EQ switch_factor switch_factor_tail\n                | AND switch_factor switch_factor_tail\n                | OR switch_factor switch_factor_tail\n                | empty\n    \n    switch_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    switch_type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_FLT LPAREN typecast_value RPAREN\n                 | CONVERT_TO_BLN LPAREN typecast_value RPAREN\n                 | CONVERT_TO_STR LPAREN typecast_value RPAREN\n    switchcond_tail : switch_condition  \n                    | empty          \n    \n    loop_statement : for_loop    \n                   | until_loop  \n                   | repeat_until\n    for_loop : FOR LPAREN control_variable SEMICOLON for_expression SEMICOLON update RPAREN LBRACE maybe_newline statements maybe_newline RBRACE\n    for_expression : for_factor for_factor_tail\n    \n    for_factor : var_call postfix           \n           | for_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN for_factor RPAREN    \n    \n    for_factor_tail : PLUS for_factor for_factor_tail\n                | MINUS for_factor for_factor_tail\n                | MULTIPLY for_factor for_factor_tail\n                | DIVISION for_factor for_factor_tail\n                | MODULO for_factor for_factor_tail\n                | EXPONENT for_factor for_factor_tail\n                | GT for_factor for_factor_tail\n                | LT for_factor for_factor_tail\n                | EQ_EQ for_factor for_factor_tail\n                | GT_EQ for_factor for_factor_tail\n                | LT_EQ for_factor for_factor_tail\n                | NOT_EQ for_factor for_factor_tail\n                | AND for_factor for_factor_tail\n                | OR for_factor for_factor_tail\n                | empty\n    \n    for_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    until_loop : UNTIL LPAREN until_expression RPAREN LBRACE statements RBRACE  \n    \n    until_expression : until_factor until_factor_tail\n    \n    until_factor : var_call postfix           \n           | until_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN until_factor RPAREN    \n    \n    until_factor_tail : PLUS until_factor until_factor_tail\n                | MINUS until_factor until_factor_tail\n                | MULTIPLY until_factor until_factor_tail\n                | DIVISION until_factor until_factor_tail\n                | MODULO until_factor until_factor_tail\n                | EXPONENT until_factor until_factor_tail\n                | GT until_factor until_factor_tail\n                | LT until_factor until_factor_tail\n                | EQ_EQ until_factor until_factor_tail\n                | GT_EQ until_factor until_factor_tail\n                | LT_EQ until_factor until_factor_tail\n                | NOT_EQ until_factor until_factor_tail\n                | AND until_factor until_factor_tail\n                | OR until_factor until_factor_tail\n                | empty\n    \n    until_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    repeat_until : REPEAT LBRACE statements RBRACE UNTIL LPAREN until_expression RPAREN \n    control_variable : INT IDENT EQ control_var_tailcontrol_var_tail : INT_LIT \n                        | var_call\n    \n    update : var_call update_tail  \n    \n    update_tail : postfix_op         \n                | compound_op value   \n    \n    postfix_op : PLUS_PLUS   \n               | MINUS_MINUS \n    \n    function_call : FUNCTION_NAME LPAREN arguments RPAREN  \n                  | input_statement                      \n    \n    arguments : empty                  \n              | arg_value arg_tail    \n    \n    arg_tail : COMMA arg_value arg_tail   \n             | empty                     \n    \n    arg_value : literal   \n              | var_call \n    \n    output_statement : DISPLAY value next_val   \n    \n    next_val : COMMA value next_val  \n             | empty                \n    \n    assignment_statement : IDENT assign_tail  \n    \n    assign_tail : DOT SPLICE LPAREN start COMMA deleteCount COMMA splice_items RPAREN  \n                | DOT PUSH LPAREN list_element RPAREN                                  \n                | assign_op value                                                     \n    \n    assign_op : compound_op  \n              | EQ           \n    \n    compound_op : PLUS_EQ \n                | MINUS_EQ  \n                | MUL_EQ   \n                | DIV_EQ    \n                | MOD_EQ   \n    \n    start : INT_LIT \n    \n    deleteCount : empty     \n                | INT_LIT  \n    \n    splice_items : empty          \n                 | list_element  \n    \n    var_call : IDENT list_index  \n    \n    list_index : LBRACKET index RBRACKET list_index2  \n               | empty                                \n    \n    list_index2 : LBRACKET index RBRACKET \n                | empty                   \n    \n    index : INT_LIT    \n          | IDENT      \n    \n    postfix : empty        \n            | postfix_op  \n    \n    value : type_cast     \n          | value_expression   \n          | function_call \n    \n    value_expression : value_factor value_factor_tail\n    \n    value_factor : var_call postfix           \n           | value_factor1                    \n           | TILDE INT_LIT               \n           | TILDE FLT_LIT                \n           | LPAREN value_factor RPAREN    \n    \n    value_factor_tail : PLUS value_factor value_factor_tail\n                | MINUS value_factor value_factor_tail\n                | MULTIPLY value_factor value_factor_tail\n                | DIVISION value_factor value_factor_tail\n                | MODULO value_factor value_factor_tail\n                | EXPONENT value_factor value_factor_tail\n                | GT value_factor value_factor_tail\n                | LT value_factor value_factor_tail\n                | EQ_EQ value_factor value_factor_tail\n                | GT_EQ value_factor value_factor_tail\n                | LT_EQ value_factor value_factor_tail\n                | NOT_EQ value_factor value_factor_tail\n                | AND value_factor value_factor_tail\n                | OR value_factor value_factor_tail\n                | empty\n    \n    value_factor1  : INT_LIT\n             | FLT_LIT\n             | DAY\n             | NIGHT\n             | STR_LIT  \n    \n    type_cast : CONVERT_TO_INT LPAREN typecast_value RPAREN \n              | CONVERT_TO_FLT LPAREN typecast_value RPAREN  \n              | CONVERT_TO_BLN LPAREN typecast_value RPAREN  \n              | CONVERT_TO_STR LPAREN typecast_value RPAREN \n    \n    typecast_value : expression                           \n                   | FUNCTION_NAME LPAREN RPAREN          \n                   | input_statement                     \n    \n    input_statement : INPUT LPAREN RPAREN  \n    empty :'
    
_lr_action_items = {'BIRTH':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'unli_newline':([2,4,6,111,244,248,250,251,252,253,254,],[3,15,19,160,290,309,310,311,312,313,314,]),'global_dec':([3,19,],[5,42,]),'global_statement':([3,19,],[6,6,]),'empty':([3,5,8,16,18,19,24,25,43,44,47,49,55,85,98,99,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,201,220,225,226,229,230,232,233,234,235,236,237,268,269,280,281,300,301,309,310,311,312,313,314,326,327,336,337,348,378,415,447,448,460,461,471,480,481,482,483,484,485,486,487,488,489,490,491,492,493,502,503,504,505,506,507,508,509,510,511,512,513,514,515,523,529,530,531,532,533,534,535,536,537,538,539,540,541,542,630,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,668,669,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,698,701,766,767,778,782,783,784,785,786,787,788,789,790,791,792,793,794,795,798,799,824,846,852,853,854,855,856,857,858,859,860,861,862,863,864,865,869,870,895,896,898,901,905,910,911,912,914,915,],[7,17,21,27,17,7,60,17,21,67,83,90,109,132,150,90,159,164,21,83,83,83,83,83,83,83,83,83,83,83,83,83,83,150,150,150,150,150,150,150,150,150,150,150,150,150,150,218,17,223,17,17,231,231,17,17,239,223,17,246,231,239,353,374,90,399,90,231,231,231,231,231,231,414,420,441,90,231,496,522,560,90,583,90,239,374,374,374,374,374,374,374,374,374,374,374,374,374,374,399,399,399,399,399,399,399,399,399,399,399,399,399,399,420,441,441,441,441,441,441,441,441,441,441,441,441,441,441,522,17,560,560,560,560,560,560,560,560,560,560,560,560,560,560,733,90,231,583,583,583,583,583,583,583,583,583,583,583,583,583,583,776,231,820,90,17,733,733,733,733,733,733,733,733,733,733,733,733,733,733,231,231,867,875,820,820,820,820,820,820,820,820,820,820,820,820,820,820,17,17,900,231,17,17,17,17,231,231,17,900,]),'var_statement':([3,19,226,229,237,309,310,311,312,313,314,348,679,701,798,799,896,911,912,],[8,8,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,]),'data_type':([3,19,113,222,226,229,237,309,310,311,312,313,314,348,679,701,798,799,896,911,912,],[9,9,163,227,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'maybe_newline':([5,18,25,199,220,225,230,232,235,651,778,869,870,898,901,905,910,914,],[16,40,62,219,226,229,236,237,243,701,825,895,896,902,904,908,912,916,]),'global_statement_tail':([8,43,114,],[20,64,165,]),'function_statements':([16,378,],[25,495,]),'ret_type':([16,378,],[26,26,]),'function_dtype':([16,378,],[29,29,]),'global_tail':([19,],[41,]),'global_value':([23,],[44,]),'expression':([23,354,356,357,358,379,381,382,383,421,423,424,425,800,802,803,804,],[45,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,]),'list_value':([23,241,],[46,271,]),'factor':([23,69,70,71,72,73,74,75,76,77,78,79,80,81,82,354,356,357,358,379,381,382,383,421,423,424,425,800,802,803,804,],[47,115,116,117,118,119,120,121,122,123,124,125,126,127,128,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'var_call':([23,54,69,70,71,72,73,74,75,76,77,78,79,80,81,82,96,136,137,138,139,140,141,142,143,144,145,146,147,148,149,241,245,262,276,296,318,326,332,345,347,354,356,357,358,360,361,362,363,364,365,366,367,368,369,370,371,372,373,379,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,419,421,423,424,425,427,428,429,430,431,432,433,434,435,436,437,438,439,440,445,458,521,546,547,548,549,550,551,552,553,554,555,556,557,558,559,564,569,570,571,572,573,574,575,576,577,578,579,580,581,582,666,677,697,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,755,762,800,802,803,804,806,807,808,809,810,811,812,813,814,815,816,817,818,819,829,903,],[49,99,49,49,49,49,49,49,49,49,49,49,49,49,49,49,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,281,301,337,281,301,337,417,337,448,461,49,49,49,49,281,281,281,281,281,281,281,281,281,281,281,281,281,281,49,49,49,49,301,301,301,301,301,301,301,301,301,301,301,301,301,301,337,49,49,49,49,337,337,337,337,337,337,337,337,337,337,337,337,337,337,448,461,417,448,448,448,448,448,448,448,448,448,448,448,448,448,448,669,461,461,461,461,461,461,461,461,461,461,461,461,461,461,669,739,767,781,669,669,669,669,669,669,669,669,669,669,669,669,669,669,461,767,49,49,49,49,767,767,767,767,767,767,767,767,767,767,767,767,767,767,337,448,]),'literal1':([23,48,69,70,71,72,73,74,75,76,77,78,79,80,81,82,131,326,354,356,357,358,379,381,382,383,421,423,424,425,518,521,800,802,803,804,824,],[50,86,50,50,50,50,50,50,50,50,50,50,50,50,50,50,86,86,50,50,50,50,50,50,50,50,50,50,50,50,86,86,50,50,50,50,86,]),'list_dec':([24,],[59,]),'global_statement_tail2':([44,],[65,]),'factor_tail':([47,115,116,117,118,119,120,121,122,123,124,125,126,127,128,],[68,166,167,168,169,170,171,172,173,174,175,176,177,178,179,]),'list_element':([48,131,518,824,],[84,180,629,868,]),'literal':([48,131,326,518,521,824,],[85,85,416,85,416,85,]),'literal2':([48,131,326,518,521,824,],[87,87,87,87,87,87,]),'postfix':([49,99,281,301,337,448,461,669,767,],[89,151,375,400,442,561,584,734,821,]),'postfix_op':([49,99,281,301,337,448,461,669,767,781,],[91,91,91,91,91,91,91,91,91,828,]),'factor_expression':([54,96,],[97,133,]),'factor_expression_factor':([54,96,136,137,138,139,140,141,142,143,144,145,146,147,148,149,],[98,98,182,183,184,185,186,187,188,189,190,191,192,193,194,195,]),'factor_expression1':([54,96,136,137,138,139,140,141,142,143,144,145,146,147,148,149,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'list_index':([55,],[107,]),'main_function':([62,],[111,]),'element_tail':([85,],[130,]),'factor_expression_tail':([98,182,183,184,185,186,187,188,189,190,191,192,193,194,195,],[135,202,203,204,205,206,207,208,209,210,211,212,213,214,215,]),'index':([108,216,],[154,224,]),'_2d_list':([110,],[158,]),'parameters':([113,],[162,]),'list_index2':([196,],[217,]),'parameters_tail':([201,234,],[221,242,]),'statements':([226,229,237,309,310,311,312,313,314,348,679,701,798,799,896,911,912,],[230,235,249,403,404,405,406,407,408,469,740,778,845,846,901,913,914,]),'local_dec':([226,229,237,309,310,311,312,313,314,348,679,701,798,799,896,911,912,],[232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,]),'local_dec_tail':([233,268,471,],[238,350,588,]),'revive':([236,],[244,]),'statements_tail':([237,],[247,]),'switch_statement':([237,],[248,]),'loop_statement':([237,],[250,]),'function_call':([237,241,245,262,318,419,697,829,],[251,274,294,330,330,330,760,330,]),'assignment_statement':([237,],[252,]),'output_statement':([237,],[253,]),'conditional_statement':([237,],[254,]),'for_loop':([237,],[257,]),'until_loop':([237,],[258,]),'repeat_until':([237,],[259,]),'input_statement':([237,241,245,262,318,354,356,357,358,379,381,382,383,419,421,423,424,425,697,800,802,803,804,829,],[261,261,261,261,261,475,475,475,475,475,475,475,475,261,475,475,475,475,261,475,475,475,475,261,]),'local_value':([241,],[269,]),'local_value_value':([241,],[270,]),'local_type_cast':([241,],[272,]),'local_expression':([241,],[273,]),'local_factor':([241,276,360,361,362,363,364,365,366,367,368,369,370,371,372,373,],[280,355,480,481,482,483,484,485,486,487,488,489,490,491,492,493,]),'local_factor1':([241,276,360,361,362,363,364,365,366,367,368,369,370,371,372,373,],[282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,]),'revive_value':([245,],[291,]),'revive_type_cast':([245,],[292,]),'revive_expression':([245,],[293,]),'revive_factor':([245,296,385,386,387,388,389,390,391,392,393,394,395,396,397,398,],[300,380,502,503,504,505,506,507,508,509,510,511,512,513,514,515,]),'revive_factor1':([245,296,385,386,387,388,389,390,391,392,393,394,395,396,397,398,],[302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,]),'assign_tail':([256,],[316,]),'assign_op':([256,],[318,]),'compound_op':([256,781,],[319,829,]),'value':([262,318,419,829,],[327,412,523,871,]),'type_cast':([262,318,419,829,],[328,328,328,328,]),'value_expression':([262,318,419,829,],[329,329,329,329,]),'value_factor':([262,318,332,419,427,428,429,430,431,432,433,434,435,436,437,438,439,440,829,],[336,336,422,336,529,530,531,532,533,534,535,536,537,538,539,540,541,542,336,]),'value_factor1':([262,318,332,419,427,428,429,430,431,432,433,434,435,436,437,438,439,440,829,],[338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,]),'local_dec_tail2':([269,],[351,]),'local_factor_tail':([280,480,481,482,483,484,485,486,487,488,489,490,491,492,493,],[359,594,595,596,597,598,599,600,601,602,603,604,605,606,607,]),'revive_factor_tail':([300,502,503,504,505,506,507,508,509,510,511,512,513,514,515,],[384,612,613,614,615,616,617,618,619,620,621,622,623,624,625,]),'arguments':([326,],[413,]),'arg_value':([326,521,],[415,630,]),'next_val':([327,523,],[418,631,]),'value_factor_tail':([336,529,530,531,532,533,534,535,536,537,538,539,540,541,542,],[426,636,637,638,639,640,641,642,643,644,645,646,647,648,649,]),'condition':([345,445,903,],[446,543,906,]),'condition_factor':([345,445,546,547,548,549,550,551,552,553,554,555,556,557,558,559,903,],[447,447,652,653,654,655,656,657,658,659,660,661,662,663,664,665,447,]),'condition1':([345,445,546,547,548,549,550,551,552,553,554,555,556,557,558,559,903,],[449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,]),'control_variable':([346,],[456,]),'until_expression':([347,755,],[459,797,]),'until_factor':([347,458,569,570,571,572,573,574,575,576,577,578,579,580,581,582,755,],[460,566,680,681,682,683,684,685,686,687,688,689,690,691,692,693,460,]),'until_factor1':([347,458,569,570,571,572,573,574,575,576,577,578,579,580,581,582,755,],[462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,]),'typecast_value':([354,356,357,358,379,381,382,383,421,423,424,425,800,802,803,804,],[472,477,478,479,497,499,500,501,524,526,527,528,847,849,850,851,]),'function_statements_tail':([378,],[494,]),'arg_tail':([415,630,],[520,700,]),'condition_tail':([447,652,653,654,655,656,657,658,659,660,661,662,663,664,665,],[545,702,703,704,705,706,707,708,709,710,711,712,713,714,715,]),'until_factor_tail':([460,680,681,682,683,684,685,686,687,688,689,690,691,692,693,],[568,741,742,743,744,745,746,747,748,749,750,751,752,753,754,]),'start':([517,],[627,]),'for_expression':([564,],[667,]),'for_factor':([564,666,719,720,721,722,723,724,725,726,727,728,729,730,731,732,],[668,716,782,783,784,785,786,787,788,789,790,791,792,793,794,795,]),'for_factor1':([564,666,719,720,721,722,723,724,725,726,727,728,729,730,731,732,],[670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,]),'switch_condition':([626,846,],[696,874,]),'for_factor_tail':([668,782,783,784,785,786,787,788,789,790,791,792,793,794,795,],[718,830,831,832,833,834,835,836,837,838,839,840,841,842,843,]),'control_var_tail':([677,],[737,]),'switch_value':([697,],[757,]),'switch_type_cast':([697,],[758,]),'switch_expression':([697,],[759,]),'switch_factor':([697,762,806,807,808,809,810,811,812,813,814,815,816,817,818,819,],[766,801,852,853,854,855,856,857,858,859,860,861,862,863,864,865,]),'switch_factor1':([697,762,806,807,808,809,810,811,812,813,814,815,816,817,818,819,],[768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,]),'deleteCount':([698,],[775,]),'update':([717,],[780,]),'switch_factor_tail':([766,852,853,854,855,856,857,858,859,860,861,862,863,864,865,],[805,880,881,882,883,884,885,886,887,888,889,890,891,892,893,]),'update_tail':([781,],[827,]),'splice_items':([824,],[866,]),'switchcond_tail':([846,],[873,]),'conditional_tail':([895,915,],[898,917,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BIRTH unli_newline global_dec maybe_newline function_statements maybe_newline main_function unli_newline GHOST','program',9,'p_program','Parser.py',41),
  ('maybe_newline -> empty','maybe_newline',1,'p_maybe_newline','Parser.py',49),
  ('maybe_newline -> NEWLINE maybe_newline','maybe_newline',2,'p_maybe_newline','Parser.py',50),
  ('unli_newline -> NEWLINE','unli_newline',1,'p_unli_newline','Parser.py',58),
  ('unli_newline -> NEWLINE unli_newline','unli_newline',2,'p_unli_newline','Parser.py',59),
  ('main_function -> MAIN_CASPER LPAREN RPAREN maybe_newline LBRACE maybe_newline statements maybe_newline RBRACE','main_function',9,'p_main_function','Parser.py',66),
  ('global_dec -> global_statement unli_newline global_tail','global_dec',3,'p_global_dec','Parser.py',78),
  ('global_dec -> empty','global_dec',1,'p_global_dec','Parser.py',79),
  ('global_tail -> global_dec','global_tail',1,'p_global_tail','Parser.py',93),
  ('global_statement -> var_statement global_statement_tail','global_statement',2,'p_global_statement','Parser.py',103),
  ('var_statement -> data_type IDENT list_dec','var_statement',3,'p_var_statement','Parser.py',116),
  ('list_dec -> empty','list_dec',1,'p_list_dec','Parser.py',131),
  ('list_dec -> LBRACKET RBRACKET _2d_list','list_dec',3,'p_list_dec','Parser.py',132),
  ('_2d_list -> empty','_2d_list',1,'p_2d_list','Parser.py',147),
  ('_2d_list -> LBRACKET RBRACKET','_2d_list',2,'p_2d_list','Parser.py',148),
  ('global_statement_tail -> empty','global_statement_tail',1,'p_global_statement_tail','Parser.py',163),
  ('global_statement_tail -> COMMA IDENT global_statement_tail','global_statement_tail',3,'p_global_statement_tail','Parser.py',164),
  ('global_statement_tail -> EQ global_value global_statement_tail2','global_statement_tail',3,'p_global_statement_tail','Parser.py',165),
  ('global_statement_tail2 -> COMMA IDENT global_statement_tail','global_statement_tail2',3,'p_global_statement_tail2','Parser.py',182),
  ('global_statement_tail2 -> empty','global_statement_tail2',1,'p_global_statement_tail2','Parser.py',183),
  ('global_value -> expression','global_value',1,'p_global_value','Parser.py',198),
  ('global_value -> list_value','global_value',1,'p_global_value','Parser.py',199),
  ('list_value -> LBRACKET list_element RBRACKET','list_value',3,'p_list_value','Parser.py',209),
  ('list_element -> literal element_tail','list_element',2,'p_list_element','Parser.py',221),
  ('element_tail -> COMMA list_element','element_tail',2,'p_element_tail','Parser.py',230),
  ('element_tail -> empty','element_tail',1,'p_element_tail','Parser.py',231),
  ('data_type -> INT','data_type',1,'p_data_type','Parser.py',248),
  ('data_type -> FLT','data_type',1,'p_data_type','Parser.py',249),
  ('data_type -> BLN','data_type',1,'p_data_type','Parser.py',250),
  ('data_type -> CHR','data_type',1,'p_data_type','Parser.py',251),
  ('data_type -> STR','data_type',1,'p_data_type','Parser.py',252),
  ('expression -> factor factor_tail','expression',2,'p_expression','Parser.py',262),
  ('factor -> var_call postfix','factor',2,'p_factor','Parser.py',279),
  ('factor -> literal1','factor',1,'p_factor','Parser.py',280),
  ('factor -> TILDE INT_LIT','factor',2,'p_factor','Parser.py',281),
  ('factor -> TILDE FLT_LIT','factor',2,'p_factor','Parser.py',282),
  ('factor -> LPAREN factor_expression RPAREN','factor',3,'p_factor','Parser.py',283),
  ('factor_expression -> factor_expression_factor factor_expression_tail','factor_expression',2,'p_factor_expression','Parser.py',305),
  ('factor_expression_factor -> var_call postfix','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',315),
  ('factor_expression_factor -> factor_expression1','factor_expression_factor',1,'p_factor_expression_factor','Parser.py',316),
  ('factor_expression_factor -> TILDE INT_LIT','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',317),
  ('factor_expression_factor -> TILDE FLT_LIT','factor_expression_factor',2,'p_factor_expression_factor','Parser.py',318),
  ('factor_expression_factor -> LPAREN factor_expression RPAREN','factor_expression_factor',3,'p_factor_expression_factor','Parser.py',319),
  ('factor_expression_tail -> PLUS factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',340),
  ('factor_expression_tail -> MINUS factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',341),
  ('factor_expression_tail -> MULTIPLY factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',342),
  ('factor_expression_tail -> DIVISION factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',343),
  ('factor_expression_tail -> MODULO factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',344),
  ('factor_expression_tail -> EXPONENT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',345),
  ('factor_expression_tail -> GT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',346),
  ('factor_expression_tail -> LT factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',347),
  ('factor_expression_tail -> EQ_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',348),
  ('factor_expression_tail -> GT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',349),
  ('factor_expression_tail -> LT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',350),
  ('factor_expression_tail -> NOT_EQ factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',351),
  ('factor_expression_tail -> AND factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',352),
  ('factor_expression_tail -> OR factor_expression_factor factor_expression_tail','factor_expression_tail',3,'p_factor_expression_tail','Parser.py',353),
  ('factor_expression_tail -> empty','factor_expression_tail',1,'p_factor_expression_tail','Parser.py',354),
  ('factor_expression1 -> INT_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',363),
  ('factor_expression1 -> FLT_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',364),
  ('factor_expression1 -> DAY','factor_expression1',1,'p_factor_expression1','Parser.py',365),
  ('factor_expression1 -> NIGHT','factor_expression1',1,'p_factor_expression1','Parser.py',366),
  ('factor_expression1 -> STR_LIT','factor_expression1',1,'p_factor_expression1','Parser.py',367),
  ('factor_tail -> PLUS factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',391),
  ('factor_tail -> MINUS factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',392),
  ('factor_tail -> MULTIPLY factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',393),
  ('factor_tail -> DIVISION factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',394),
  ('factor_tail -> MODULO factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',395),
  ('factor_tail -> EXPONENT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',396),
  ('factor_tail -> GT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',397),
  ('factor_tail -> LT factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',398),
  ('factor_tail -> EQ_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',399),
  ('factor_tail -> GT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',400),
  ('factor_tail -> LT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',401),
  ('factor_tail -> NOT_EQ factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',402),
  ('factor_tail -> AND factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',403),
  ('factor_tail -> OR factor factor_tail','factor_tail',3,'p_factor_tail','Parser.py',404),
  ('factor_tail -> empty','factor_tail',1,'p_factor_tail','Parser.py',405),
  ('literal -> literal1','literal',1,'p_literal','Parser.py',418),
  ('literal -> literal2','literal',1,'p_literal','Parser.py',419),
  ('literal1 -> INT_LIT','literal1',1,'p_literal1','Parser.py',434),
  ('literal1 -> FLT_LIT','literal1',1,'p_literal1','Parser.py',435),
  ('literal1 -> DAY','literal1',1,'p_literal1','Parser.py',436),
  ('literal1 -> NIGHT','literal1',1,'p_literal1','Parser.py',437),
  ('literal1 -> STR_LIT','literal1',1,'p_literal1','Parser.py',438),
  ('literal2 -> CHR_LIT','literal2',1,'p_literal2','Parser.py',444),
  ('function_statements -> ret_type FUNCTION_NAME LPAREN parameters RPAREN LBRACE maybe_newline statements maybe_newline revive unli_newline RBRACE function_statements_tail','function_statements',13,'p_function_statements','Parser.py',454),
  ('function_statements -> empty','function_statements',1,'p_function_statements','Parser.py',455),
  ('function_statements_tail -> function_statements','function_statements_tail',1,'p_function_statements_tail','Parser.py',479),
  ('function_statements_tail -> empty','function_statements_tail',1,'p_function_statements_tail','Parser.py',480),
  ('ret_type -> FUNCTION','ret_type',1,'p_ret_type','Parser.py',493),
  ('ret_type -> function_dtype','ret_type',1,'p_ret_type','Parser.py',494),
  ('function_dtype -> FUNCTION_INT','function_dtype',1,'p_function_dtype','Parser.py',515),
  ('function_dtype -> FUNCTION_FLT','function_dtype',1,'p_function_dtype','Parser.py',516),
  ('function_dtype -> FUNCTION_CHR','function_dtype',1,'p_function_dtype','Parser.py',517),
  ('function_dtype -> FUNCTION_BLN','function_dtype',1,'p_function_dtype','Parser.py',518),
  ('function_dtype -> FUNCTION_STR','function_dtype',1,'p_function_dtype','Parser.py',519),
  ('function_dtype -> FUNCTION_LIST_INT','function_dtype',1,'p_function_dtype','Parser.py',520),
  ('function_dtype -> FUNCTION_LIST_FLT','function_dtype',1,'p_function_dtype','Parser.py',521),
  ('function_dtype -> FUNCTION_LIST_CHR','function_dtype',1,'p_function_dtype','Parser.py',522),
  ('function_dtype -> FUNCTION_LIST_STR','function_dtype',1,'p_function_dtype','Parser.py',523),
  ('function_dtype -> FUNCTION_LIST_BLN','function_dtype',1,'p_function_dtype','Parser.py',524),
  ('parameters -> data_type IDENT parameters_tail','parameters',3,'p_parameters','Parser.py',534),
  ('parameters -> empty','parameters',1,'p_parameters','Parser.py',535),
  ('parameters_tail -> COMMA data_type IDENT parameters_tail','parameters_tail',4,'p_parameters_tail','Parser.py',548),
  ('parameters_tail -> empty','parameters_tail',1,'p_parameters_tail','Parser.py',549),
  ('revive -> REVIVE revive_value','revive',2,'p_revive','Parser.py',561),
  ('revive -> empty','revive',1,'p_revive','Parser.py',562),
  ('revive_value -> revive_type_cast','revive_value',1,'p_revive_value','Parser.py',570),
  ('revive_value -> revive_expression','revive_value',1,'p_revive_value','Parser.py',571),
  ('revive_value -> function_call','revive_value',1,'p_revive_value','Parser.py',572),
  ('revive_expression -> revive_factor revive_factor_tail','revive_expression',2,'p_revive_expression','Parser.py',578),
  ('revive_factor -> var_call postfix','revive_factor',2,'p_revive_factor','Parser.py',588),
  ('revive_factor -> revive_factor1','revive_factor',1,'p_revive_factor','Parser.py',589),
  ('revive_factor -> TILDE INT_LIT','revive_factor',2,'p_revive_factor','Parser.py',590),
  ('revive_factor -> TILDE FLT_LIT','revive_factor',2,'p_revive_factor','Parser.py',591),
  ('revive_factor -> LPAREN revive_factor RPAREN','revive_factor',3,'p_revive_factor','Parser.py',592),
  ('revive_factor_tail -> PLUS revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',613),
  ('revive_factor_tail -> MINUS revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',614),
  ('revive_factor_tail -> MULTIPLY revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',615),
  ('revive_factor_tail -> DIVISION revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',616),
  ('revive_factor_tail -> MODULO revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',617),
  ('revive_factor_tail -> EXPONENT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',618),
  ('revive_factor_tail -> GT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',619),
  ('revive_factor_tail -> LT revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',620),
  ('revive_factor_tail -> EQ_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',621),
  ('revive_factor_tail -> GT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',622),
  ('revive_factor_tail -> LT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',623),
  ('revive_factor_tail -> NOT_EQ revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',624),
  ('revive_factor_tail -> AND revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',625),
  ('revive_factor_tail -> OR revive_factor revive_factor_tail','revive_factor_tail',3,'p_revive_factor_tail','Parser.py',626),
  ('revive_factor_tail -> empty','revive_factor_tail',1,'p_revive_factor_tail','Parser.py',627),
  ('revive_factor1 -> INT_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',636),
  ('revive_factor1 -> FLT_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',637),
  ('revive_factor1 -> DAY','revive_factor1',1,'p_revive_factor1','Parser.py',638),
  ('revive_factor1 -> NIGHT','revive_factor1',1,'p_revive_factor1','Parser.py',639),
  ('revive_factor1 -> STR_LIT','revive_factor1',1,'p_revive_factor1','Parser.py',640),
  ('revive_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',645),
  ('revive_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',646),
  ('revive_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',647),
  ('revive_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','revive_type_cast',4,'p_revive_type_cast','Parser.py',648),
  ('statements -> empty','statements',1,'p_statements','Parser.py',655),
  ('statements -> local_dec maybe_newline statements_tail','statements',3,'p_statements','Parser.py',656),
  ('statements_tail -> switch_statement unli_newline statements','statements_tail',3,'p_statements_tail','Parser.py',672),
  ('statements_tail -> loop_statement unli_newline statements','statements_tail',3,'p_statements_tail','Parser.py',673),
  ('statements_tail -> function_call unli_newline statements','statements_tail',3,'p_statements_tail','Parser.py',674),
  ('statements_tail -> assignment_statement unli_newline statements','statements_tail',3,'p_statements_tail','Parser.py',675),
  ('statements_tail -> output_statement unli_newline statements','statements_tail',3,'p_statements_tail','Parser.py',676),
  ('statements_tail -> conditional_statement unli_newline statements','statements_tail',3,'p_statements_tail','Parser.py',677),
  ('statements_tail -> statements','statements_tail',1,'p_statements_tail','Parser.py',678),
  ('local_dec -> var_statement local_dec_tail','local_dec',2,'p_local_dec','Parser.py',736),
  ('local_dec -> empty','local_dec',1,'p_local_dec','Parser.py',737),
  ('local_dec_tail -> empty','local_dec_tail',1,'p_local_dec_tail','Parser.py',756),
  ('local_dec_tail -> COMMA IDENT local_dec_tail','local_dec_tail',3,'p_local_dec_tail','Parser.py',757),
  ('local_dec_tail -> EQ local_value local_dec_tail2','local_dec_tail',3,'p_local_dec_tail','Parser.py',758),
  ('local_dec_tail2 -> COMMA IDENT local_dec_tail','local_dec_tail2',3,'p_local_dec_tail2','Parser.py',773),
  ('local_dec_tail2 -> empty','local_dec_tail2',1,'p_local_dec_tail2','Parser.py',774),
  ('local_value -> local_value_value','local_value',1,'p_local_value','Parser.py',788),
  ('local_value -> list_value','local_value',1,'p_local_value','Parser.py',789),
  ('local_value_value -> local_type_cast','local_value_value',1,'p_local_value_value','Parser.py',794),
  ('local_value_value -> local_expression','local_value_value',1,'p_local_value_value','Parser.py',795),
  ('local_value_value -> function_call','local_value_value',1,'p_local_value_value','Parser.py',796),
  ('local_expression -> local_factor local_factor_tail','local_expression',2,'p_local_expression','Parser.py',801),
  ('local_factor -> var_call postfix','local_factor',2,'p_local_factor','Parser.py',811),
  ('local_factor -> local_factor1','local_factor',1,'p_local_factor','Parser.py',812),
  ('local_factor -> TILDE INT_LIT','local_factor',2,'p_local_factor','Parser.py',813),
  ('local_factor -> TILDE FLT_LIT','local_factor',2,'p_local_factor','Parser.py',814),
  ('local_factor -> LPAREN local_factor RPAREN','local_factor',3,'p_local_factor','Parser.py',815),
  ('local_factor_tail -> PLUS local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',836),
  ('local_factor_tail -> MINUS local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',837),
  ('local_factor_tail -> MULTIPLY local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',838),
  ('local_factor_tail -> DIVISION local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',839),
  ('local_factor_tail -> MODULO local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',840),
  ('local_factor_tail -> EXPONENT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',841),
  ('local_factor_tail -> GT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',842),
  ('local_factor_tail -> LT local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',843),
  ('local_factor_tail -> EQ_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',844),
  ('local_factor_tail -> GT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',845),
  ('local_factor_tail -> LT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',846),
  ('local_factor_tail -> NOT_EQ local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',847),
  ('local_factor_tail -> AND local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',848),
  ('local_factor_tail -> OR local_factor local_factor_tail','local_factor_tail',3,'p_local_factor_tail','Parser.py',849),
  ('local_factor_tail -> empty','local_factor_tail',1,'p_local_factor_tail','Parser.py',850),
  ('local_factor1 -> INT_LIT','local_factor1',1,'p_local_factor1','Parser.py',859),
  ('local_factor1 -> FLT_LIT','local_factor1',1,'p_local_factor1','Parser.py',860),
  ('local_factor1 -> DAY','local_factor1',1,'p_local_factor1','Parser.py',861),
  ('local_factor1 -> NIGHT','local_factor1',1,'p_local_factor1','Parser.py',862),
  ('local_factor1 -> STR_LIT','local_factor1',1,'p_local_factor1','Parser.py',863),
  ('local_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',868),
  ('local_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',869),
  ('local_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',870),
  ('local_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','local_type_cast',4,'p_local_type_cast','Parser.py',871),
  ('conditional_statement -> CHECK LPAREN condition RPAREN LBRACE maybe_newline statements maybe_newline RBRACE maybe_newline conditional_tail maybe_newline OTHERWISE maybe_newline LBRACE maybe_newline statements maybe_newline RBRACE','conditional_statement',19,'p_conditional_statement','Parser.py',878),
  ('conditional_tail -> OTHERWISE_CHECK LPAREN condition RPAREN LBRACE statements RBRACE conditional_tail','conditional_tail',8,'p_conditional_tail','Parser.py',889),
  ('conditional_tail -> empty','conditional_tail',1,'p_conditional_tail','Parser.py',890),
  ('condition -> condition_factor condition_tail','condition',2,'p_condition','Parser.py',900),
  ('condition_factor -> var_call postfix','condition_factor',2,'p_condition_factor','Parser.py',910),
  ('condition_factor -> condition1','condition_factor',1,'p_condition_factor','Parser.py',911),
  ('condition_factor -> TILDE INT_LIT','condition_factor',2,'p_condition_factor','Parser.py',912),
  ('condition_factor -> TILDE FLT_LIT','condition_factor',2,'p_condition_factor','Parser.py',913),
  ('condition_factor -> LPAREN condition RPAREN','condition_factor',3,'p_condition_factor','Parser.py',914),
  ('condition_tail -> PLUS condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',935),
  ('condition_tail -> MINUS condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',936),
  ('condition_tail -> MULTIPLY condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',937),
  ('condition_tail -> DIVISION condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',938),
  ('condition_tail -> MODULO condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',939),
  ('condition_tail -> EXPONENT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',940),
  ('condition_tail -> GT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',941),
  ('condition_tail -> LT condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',942),
  ('condition_tail -> EQ_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',943),
  ('condition_tail -> GT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',944),
  ('condition_tail -> LT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',945),
  ('condition_tail -> NOT_EQ condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',946),
  ('condition_tail -> AND condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',947),
  ('condition_tail -> OR condition_factor condition_tail','condition_tail',3,'p_condition_tail','Parser.py',948),
  ('condition_tail -> empty','condition_tail',1,'p_condition_tail','Parser.py',949),
  ('condition1 -> INT_LIT','condition1',1,'p_condition1','Parser.py',958),
  ('condition1 -> FLT_LIT','condition1',1,'p_condition1','Parser.py',959),
  ('condition1 -> DAY','condition1',1,'p_condition1','Parser.py',960),
  ('condition1 -> NIGHT','condition1',1,'p_condition1','Parser.py',961),
  ('condition1 -> STR_LIT','condition1',1,'p_condition1','Parser.py',962),
  ('switch_statement -> SWAP LPAREN IDENT RPAREN LBRACE switch_condition OTHERWISE LBRACE statements RBRACE RBRACE','switch_statement',11,'p_switch_statement','Parser.py',974),
  ('switch_condition -> SHIFT switch_value COLON statements switchcond_tail','switch_condition',5,'p_switch_condition','Parser.py',987),
  ('switch_value -> switch_type_cast','switch_value',1,'p_switch_value','Parser.py',992),
  ('switch_value -> switch_expression','switch_value',1,'p_switch_value','Parser.py',993),
  ('switch_value -> function_call','switch_value',1,'p_switch_value','Parser.py',994),
  ('switch_expression -> switch_factor switch_factor_tail','switch_expression',2,'p_switch_expression','Parser.py',999),
  ('switch_factor -> var_call postfix','switch_factor',2,'p_switch_factor','Parser.py',1009),
  ('switch_factor -> switch_factor1','switch_factor',1,'p_switch_factor','Parser.py',1010),
  ('switch_factor -> TILDE INT_LIT','switch_factor',2,'p_switch_factor','Parser.py',1011),
  ('switch_factor -> TILDE FLT_LIT','switch_factor',2,'p_switch_factor','Parser.py',1012),
  ('switch_factor -> LPAREN switch_factor RPAREN','switch_factor',3,'p_switch_factor','Parser.py',1013),
  ('switch_factor_tail -> PLUS switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1034),
  ('switch_factor_tail -> MINUS switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1035),
  ('switch_factor_tail -> MULTIPLY switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1036),
  ('switch_factor_tail -> DIVISION switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1037),
  ('switch_factor_tail -> MODULO switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1038),
  ('switch_factor_tail -> EXPONENT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1039),
  ('switch_factor_tail -> GT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1040),
  ('switch_factor_tail -> LT switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1041),
  ('switch_factor_tail -> EQ_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1042),
  ('switch_factor_tail -> GT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1043),
  ('switch_factor_tail -> LT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1044),
  ('switch_factor_tail -> NOT_EQ switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1045),
  ('switch_factor_tail -> AND switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1046),
  ('switch_factor_tail -> OR switch_factor switch_factor_tail','switch_factor_tail',3,'p_switch_factor_tail','Parser.py',1047),
  ('switch_factor_tail -> empty','switch_factor_tail',1,'p_switch_factor_tail','Parser.py',1048),
  ('switch_factor1 -> INT_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1057),
  ('switch_factor1 -> FLT_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1058),
  ('switch_factor1 -> DAY','switch_factor1',1,'p_switch_factor1','Parser.py',1059),
  ('switch_factor1 -> NIGHT','switch_factor1',1,'p_switch_factor1','Parser.py',1060),
  ('switch_factor1 -> STR_LIT','switch_factor1',1,'p_switch_factor1','Parser.py',1061),
  ('switch_type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1066),
  ('switch_type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1067),
  ('switch_type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1068),
  ('switch_type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','switch_type_cast',4,'p_switch_type_cast','Parser.py',1069),
  ('switchcond_tail -> switch_condition','switchcond_tail',1,'p_switchcond_tail','Parser.py',1077),
  ('switchcond_tail -> empty','switchcond_tail',1,'p_switchcond_tail','Parser.py',1078),
  ('loop_statement -> for_loop','loop_statement',1,'p_loop_statement','Parser.py',1093),
  ('loop_statement -> until_loop','loop_statement',1,'p_loop_statement','Parser.py',1094),
  ('loop_statement -> repeat_until','loop_statement',1,'p_loop_statement','Parser.py',1095),
  ('for_loop -> FOR LPAREN control_variable SEMICOLON for_expression SEMICOLON update RPAREN LBRACE maybe_newline statements maybe_newline RBRACE','for_loop',13,'p_for_loop','Parser.py',1103),
  ('for_expression -> for_factor for_factor_tail','for_expression',2,'p_for_expression','Parser.py',1108),
  ('for_factor -> var_call postfix','for_factor',2,'p_for_factor','Parser.py',1118),
  ('for_factor -> for_factor1','for_factor',1,'p_for_factor','Parser.py',1119),
  ('for_factor -> TILDE INT_LIT','for_factor',2,'p_for_factor','Parser.py',1120),
  ('for_factor -> TILDE FLT_LIT','for_factor',2,'p_for_factor','Parser.py',1121),
  ('for_factor -> LPAREN for_factor RPAREN','for_factor',3,'p_for_factor','Parser.py',1122),
  ('for_factor_tail -> PLUS for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1143),
  ('for_factor_tail -> MINUS for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1144),
  ('for_factor_tail -> MULTIPLY for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1145),
  ('for_factor_tail -> DIVISION for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1146),
  ('for_factor_tail -> MODULO for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1147),
  ('for_factor_tail -> EXPONENT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1148),
  ('for_factor_tail -> GT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1149),
  ('for_factor_tail -> LT for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1150),
  ('for_factor_tail -> EQ_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1151),
  ('for_factor_tail -> GT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1152),
  ('for_factor_tail -> LT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1153),
  ('for_factor_tail -> NOT_EQ for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1154),
  ('for_factor_tail -> AND for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1155),
  ('for_factor_tail -> OR for_factor for_factor_tail','for_factor_tail',3,'p_for_factor_tail','Parser.py',1156),
  ('for_factor_tail -> empty','for_factor_tail',1,'p_for_factor_tail','Parser.py',1157),
  ('for_factor1 -> INT_LIT','for_factor1',1,'p_for_factor1','Parser.py',1166),
  ('for_factor1 -> FLT_LIT','for_factor1',1,'p_for_factor1','Parser.py',1167),
  ('for_factor1 -> DAY','for_factor1',1,'p_for_factor1','Parser.py',1168),
  ('for_factor1 -> NIGHT','for_factor1',1,'p_for_factor1','Parser.py',1169),
  ('for_factor1 -> STR_LIT','for_factor1',1,'p_for_factor1','Parser.py',1170),
  ('until_loop -> UNTIL LPAREN until_expression RPAREN LBRACE statements RBRACE','until_loop',7,'p_until_loop','Parser.py',1178),
  ('until_expression -> until_factor until_factor_tail','until_expression',2,'p_until_expression','Parser.py',1185),
  ('until_factor -> var_call postfix','until_factor',2,'p_until_factor','Parser.py',1195),
  ('until_factor -> until_factor1','until_factor',1,'p_until_factor','Parser.py',1196),
  ('until_factor -> TILDE INT_LIT','until_factor',2,'p_until_factor','Parser.py',1197),
  ('until_factor -> TILDE FLT_LIT','until_factor',2,'p_until_factor','Parser.py',1198),
  ('until_factor -> LPAREN until_factor RPAREN','until_factor',3,'p_until_factor','Parser.py',1199),
  ('until_factor_tail -> PLUS until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1220),
  ('until_factor_tail -> MINUS until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1221),
  ('until_factor_tail -> MULTIPLY until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1222),
  ('until_factor_tail -> DIVISION until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1223),
  ('until_factor_tail -> MODULO until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1224),
  ('until_factor_tail -> EXPONENT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1225),
  ('until_factor_tail -> GT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1226),
  ('until_factor_tail -> LT until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1227),
  ('until_factor_tail -> EQ_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1228),
  ('until_factor_tail -> GT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1229),
  ('until_factor_tail -> LT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1230),
  ('until_factor_tail -> NOT_EQ until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1231),
  ('until_factor_tail -> AND until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1232),
  ('until_factor_tail -> OR until_factor until_factor_tail','until_factor_tail',3,'p_until_factor_tail','Parser.py',1233),
  ('until_factor_tail -> empty','until_factor_tail',1,'p_until_factor_tail','Parser.py',1234),
  ('until_factor1 -> INT_LIT','until_factor1',1,'p_until_factor1','Parser.py',1243),
  ('until_factor1 -> FLT_LIT','until_factor1',1,'p_until_factor1','Parser.py',1244),
  ('until_factor1 -> DAY','until_factor1',1,'p_until_factor1','Parser.py',1245),
  ('until_factor1 -> NIGHT','until_factor1',1,'p_until_factor1','Parser.py',1246),
  ('until_factor1 -> STR_LIT','until_factor1',1,'p_until_factor1','Parser.py',1247),
  ('repeat_until -> REPEAT LBRACE statements RBRACE UNTIL LPAREN until_expression RPAREN','repeat_until',8,'p_repeat_until','Parser.py',1255),
  ('control_variable -> INT IDENT EQ control_var_tail','control_variable',4,'p_control_variable','Parser.py',1263),
  ('control_var_tail -> INT_LIT','control_var_tail',1,'p_control_var_tail','Parser.py',1277),
  ('control_var_tail -> var_call','control_var_tail',1,'p_control_var_tail','Parser.py',1278),
  ('update -> var_call update_tail','update',2,'p_update','Parser.py',1291),
  ('update_tail -> postfix_op','update_tail',1,'p_update_tail','Parser.py',1301),
  ('update_tail -> compound_op value','update_tail',2,'p_update_tail','Parser.py',1302),
  ('postfix_op -> PLUS_PLUS','postfix_op',1,'p_postfix_op','Parser.py',1315),
  ('postfix_op -> MINUS_MINUS','postfix_op',1,'p_postfix_op','Parser.py',1316),
  ('function_call -> FUNCTION_NAME LPAREN arguments RPAREN','function_call',4,'p_function_call','Parser.py',1326),
  ('function_call -> input_statement','function_call',1,'p_function_call','Parser.py',1327),
  ('arguments -> empty','arguments',1,'p_arguments','Parser.py',1340),
  ('arguments -> arg_value arg_tail','arguments',2,'p_arguments','Parser.py',1341),
  ('arg_tail -> COMMA arg_value arg_tail','arg_tail',3,'p_arg_tail','Parser.py',1354),
  ('arg_tail -> empty','arg_tail',1,'p_arg_tail','Parser.py',1355),
  ('arg_value -> literal','arg_value',1,'p_arg_value','Parser.py',1368),
  ('arg_value -> var_call','arg_value',1,'p_arg_value','Parser.py',1369),
  ('output_statement -> DISPLAY value next_val','output_statement',3,'p_output_statement','Parser.py',1378),
  ('next_val -> COMMA value next_val','next_val',3,'p_next_val','Parser.py',1388),
  ('next_val -> empty','next_val',1,'p_next_val','Parser.py',1389),
  ('assignment_statement -> IDENT assign_tail','assignment_statement',2,'p_assignment_statement','Parser.py',1401),
  ('assign_tail -> DOT SPLICE LPAREN start COMMA deleteCount COMMA splice_items RPAREN','assign_tail',9,'p_assign_tail','Parser.py',1413),
  ('assign_tail -> DOT PUSH LPAREN list_element RPAREN','assign_tail',5,'p_assign_tail','Parser.py',1414),
  ('assign_tail -> assign_op value','assign_tail',2,'p_assign_tail','Parser.py',1415),
  ('assign_op -> compound_op','assign_op',1,'p_assign_op','Parser.py',1431),
  ('assign_op -> EQ','assign_op',1,'p_assign_op','Parser.py',1432),
  ('compound_op -> PLUS_EQ','compound_op',1,'p_compound_op','Parser.py',1445),
  ('compound_op -> MINUS_EQ','compound_op',1,'p_compound_op','Parser.py',1446),
  ('compound_op -> MUL_EQ','compound_op',1,'p_compound_op','Parser.py',1447),
  ('compound_op -> DIV_EQ','compound_op',1,'p_compound_op','Parser.py',1448),
  ('compound_op -> MOD_EQ','compound_op',1,'p_compound_op','Parser.py',1449),
  ('start -> INT_LIT','start',1,'p_start','Parser.py',1458),
  ('deleteCount -> empty','deleteCount',1,'p_deleteCount','Parser.py',1468),
  ('deleteCount -> INT_LIT','deleteCount',1,'p_deleteCount','Parser.py',1469),
  ('splice_items -> empty','splice_items',1,'p_splice_items','Parser.py',1482),
  ('splice_items -> list_element','splice_items',1,'p_splice_items','Parser.py',1483),
  ('var_call -> IDENT list_index','var_call',2,'p_var_call','Parser.py',1495),
  ('list_index -> LBRACKET index RBRACKET list_index2','list_index',4,'p_list_index','Parser.py',1506),
  ('list_index -> empty','list_index',1,'p_list_index','Parser.py',1507),
  ('list_index2 -> LBRACKET index RBRACKET','list_index2',3,'p_list_index2','Parser.py',1520),
  ('list_index2 -> empty','list_index2',1,'p_list_index2','Parser.py',1521),
  ('index -> INT_LIT','index',1,'p_index','Parser.py',1534),
  ('index -> IDENT','index',1,'p_index','Parser.py',1535),
  ('postfix -> empty','postfix',1,'p_postfix','Parser.py',1545),
  ('postfix -> postfix_op','postfix',1,'p_postfix','Parser.py',1546),
  ('value -> type_cast','value',1,'p_value','Parser.py',1557),
  ('value -> value_expression','value',1,'p_value','Parser.py',1558),
  ('value -> function_call','value',1,'p_value','Parser.py',1559),
  ('value_expression -> value_factor value_factor_tail','value_expression',2,'p_value_expression','Parser.py',1566),
  ('value_factor -> var_call postfix','value_factor',2,'p_value_factor','Parser.py',1576),
  ('value_factor -> value_factor1','value_factor',1,'p_value_factor','Parser.py',1577),
  ('value_factor -> TILDE INT_LIT','value_factor',2,'p_value_factor','Parser.py',1578),
  ('value_factor -> TILDE FLT_LIT','value_factor',2,'p_value_factor','Parser.py',1579),
  ('value_factor -> LPAREN value_factor RPAREN','value_factor',3,'p_value_factor','Parser.py',1580),
  ('value_factor_tail -> PLUS value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1601),
  ('value_factor_tail -> MINUS value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1602),
  ('value_factor_tail -> MULTIPLY value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1603),
  ('value_factor_tail -> DIVISION value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1604),
  ('value_factor_tail -> MODULO value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1605),
  ('value_factor_tail -> EXPONENT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1606),
  ('value_factor_tail -> GT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1607),
  ('value_factor_tail -> LT value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1608),
  ('value_factor_tail -> EQ_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1609),
  ('value_factor_tail -> GT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1610),
  ('value_factor_tail -> LT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1611),
  ('value_factor_tail -> NOT_EQ value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1612),
  ('value_factor_tail -> AND value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1613),
  ('value_factor_tail -> OR value_factor value_factor_tail','value_factor_tail',3,'p_value_factor_tail','Parser.py',1614),
  ('value_factor_tail -> empty','value_factor_tail',1,'p_value_factor_tail','Parser.py',1615),
  ('value_factor1 -> INT_LIT','value_factor1',1,'p_value_factor1','Parser.py',1624),
  ('value_factor1 -> FLT_LIT','value_factor1',1,'p_value_factor1','Parser.py',1625),
  ('value_factor1 -> DAY','value_factor1',1,'p_value_factor1','Parser.py',1626),
  ('value_factor1 -> NIGHT','value_factor1',1,'p_value_factor1','Parser.py',1627),
  ('value_factor1 -> STR_LIT','value_factor1',1,'p_value_factor1','Parser.py',1628),
  ('type_cast -> CONVERT_TO_INT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',1639),
  ('type_cast -> CONVERT_TO_FLT LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',1640),
  ('type_cast -> CONVERT_TO_BLN LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',1641),
  ('type_cast -> CONVERT_TO_STR LPAREN typecast_value RPAREN','type_cast',4,'p_type_cast','Parser.py',1642),
  ('typecast_value -> expression','typecast_value',1,'p_typecast_value','Parser.py',1654),
  ('typecast_value -> FUNCTION_NAME LPAREN RPAREN','typecast_value',3,'p_typecast_value','Parser.py',1655),
  ('typecast_value -> input_statement','typecast_value',1,'p_typecast_value','Parser.py',1656),
  ('input_statement -> INPUT LPAREN RPAREN','input_statement',3,'p_input_statement','Parser.py',1667),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',1672),
]
