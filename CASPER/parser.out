Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHR_LIT
    COMMENT
    CONVERT_TO_BLN
    CONVERT_TO_FLT
    CONVERT_TO_INT
    CONVERT_TO_STR
    DAY
    DIV_EQ
    DOUBLE_LT
    DOUBLE_SLASH
    EOF
    FOR
    FUNCTION_LIST_BLN
    FUNCTION_LIST_BLN2D
    FUNCTION_LIST_CHR
    FUNCTION_LIST_CHR2D
    FUNCTION_LIST_FLT
    FUNCTION_LIST_FLT2D
    FUNCTION_LIST_INT
    FUNCTION_LIST_INT2D
    FUNCTION_LIST_STR
    FUNCTION_LIST_STR2D
    ILLEGAL
    IN
    LIST_BLN
    LIST_BLN2D
    LIST_CHR
    LIST_CHR2D
    LIST_FLT
    LIST_FLT2D
    LIST_INT
    LIST_INT2D
    LIST_STR
    LIST_STR2D
    MINUS_EQ
    MINUS_MINUS
    MOD_EQ
    MUL_EQ
    NIGHT
    PLUS_EQ
    PLUS_PLUS
    POW
    SEMICOLON
    TILDE
    TYPE

Grammar

Rule 0     S' -> program
Rule 1     program -> BIRTH global_declarations statements GHOST
Rule 2     var_call -> IDENT
Rule 3     var_dec -> INT IDENT
Rule 4     var_dec -> FLT IDENT
Rule 5     var_dec -> STR IDENT
Rule 6     var_dec -> CHR IDENT
Rule 7     var_dec -> BLN IDENT
Rule 8     var_initialization -> var_dec EQ expression
Rule 9     list_dec -> INT LBRACKET RBRACKET IDENT
Rule 10    list_dec -> FLT LBRACKET RBRACKET IDENT
Rule 11    list_dec -> STR LBRACKET RBRACKET IDENT
Rule 12    list_dec -> CHR LBRACKET RBRACKET IDENT
Rule 13    list_dec -> BLN LBRACKET RBRACKET IDENT
Rule 14    global_declarations -> GLOBAL var_call
Rule 15    global_declarations -> var_dec
Rule 16    global_declarations -> var_initialization
Rule 17    global_declarations -> list_dec
Rule 18    global_declarations -> empty
Rule 19    statements -> statement
Rule 20    statements -> statements statement
Rule 21    statements -> statements NEWLINE
Rule 22    statements -> empty
Rule 23    statement -> variable_declaration
Rule 24    statement -> assignment
Rule 25    statement -> function_call
Rule 26    statement -> function_declaration
Rule 27    statement -> loop
Rule 28    statement -> conditional
Rule 29    statement -> io_statement
Rule 30    statement -> switch_statement
Rule 31    statement -> return_statement
Rule 32    statement -> stop_statement
Rule 33    statement -> skip_statement
Rule 34    statement -> measure_statement
Rule 35    function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 36    function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 37    function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 38    function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 39    function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 40    function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 41    parameters -> INT IDENT COMMA parameters
Rule 42    parameters -> FLT IDENT COMMA parameters
Rule 43    parameters -> STR IDENT COMMA parameters
Rule 44    parameters -> CHR IDENT COMMA parameters
Rule 45    parameters -> BLN IDENT COMMA parameters
Rule 46    parameters -> INT IDENT
Rule 47    parameters -> FLT IDENT
Rule 48    parameters -> STR IDENT
Rule 49    parameters -> CHR IDENT
Rule 50    parameters -> BLN IDENT
Rule 51    parameters -> empty
Rule 52    variable_declaration -> INT IDENT EQ expression
Rule 53    variable_declaration -> FLT IDENT EQ expression
Rule 54    variable_declaration -> STR IDENT EQ expression
Rule 55    variable_declaration -> CHR IDENT EQ expression
Rule 56    variable_declaration -> BLN IDENT EQ expression
Rule 57    assignment -> IDENT EQ expression
Rule 58    function_call -> FUNCTION_NAME LPAREN arguments RPAREN
Rule 59    loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
Rule 60    conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
Rule 61    io_statement -> DISPLAY LPAREN expression RPAREN
Rule 62    io_statement -> INPUT LPAREN IDENT RPAREN
Rule 63    switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
Rule 64    case_list -> case
Rule 65    case_list -> case_list case
Rule 66    case -> SHIFT expression COLON statements
Rule 67    return_statement -> REVIVE expression
Rule 68    stop_statement -> STOP
Rule 69    skip_statement -> SKIP
Rule 70    measure_statement -> MEASURE LPAREN expression RPAREN
Rule 71    expression -> expression PLUS expression
Rule 72    expression -> expression MINUS expression
Rule 73    expression -> expression MULTIPLY expression
Rule 74    expression -> expression DIVISION expression
Rule 75    expression -> expression MODULO expression
Rule 76    expression -> expression EXPONENT expression
Rule 77    expression -> expression EQ_EQ expression
Rule 78    expression -> expression NOT_EQ expression
Rule 79    expression -> expression LT expression
Rule 80    expression -> expression GT expression
Rule 81    expression -> expression LT_EQ expression
Rule 82    expression -> expression GT_EQ expression
Rule 83    expression -> expression AND expression
Rule 84    expression -> expression OR expression
Rule 85    expression -> NOT expression
Rule 86    expression -> LPAREN expression RPAREN
Rule 87    expression -> IDENT
Rule 88    expression -> INT_LIT
Rule 89    expression -> FLT_LIT
Rule 90    expression -> STR_LIT
Rule 91    expression -> BLN_LIT
Rule 92    expression -> function_call
Rule 93    arguments -> expression COMMA arguments
Rule 94    arguments -> expression
Rule 95    arguments -> empty
Rule 96    empty -> <empty>

Terminals, with rules where they appear

AND                  : 83
BIRTH                : 1
BLN                  : 7 13 45 50 56
BLN_LIT              : 91
CHECK                : 60
CHR                  : 6 12 44 49 55
CHR_LIT              : 
COLON                : 66
COMMA                : 41 42 43 44 45 93
COMMENT              : 
CONVERT_TO_BLN       : 
CONVERT_TO_FLT       : 
CONVERT_TO_INT       : 
CONVERT_TO_STR       : 
DAY                  : 
DISPLAY              : 61
DIVISION             : 74
DIV_EQ               : 
DOUBLE_LT            : 
DOUBLE_SLASH         : 
EOF                  : 
EQ                   : 8 52 53 54 55 56 57
EQ_EQ                : 77
EXPONENT             : 76
FLT                  : 4 10 42 47 53
FLT_LIT              : 89
FOR                  : 
FUNCTION             : 35
FUNCTION_BLN         : 40
FUNCTION_CHR         : 39
FUNCTION_FLT         : 37
FUNCTION_INT         : 36
FUNCTION_LIST_BLN    : 
FUNCTION_LIST_BLN2D  : 
FUNCTION_LIST_CHR    : 
FUNCTION_LIST_CHR2D  : 
FUNCTION_LIST_FLT    : 
FUNCTION_LIST_FLT2D  : 
FUNCTION_LIST_INT    : 
FUNCTION_LIST_INT2D  : 
FUNCTION_LIST_STR    : 
FUNCTION_LIST_STR2D  : 
FUNCTION_NAME        : 35 36 37 38 39 40 58
FUNCTION_STR         : 38
GHOST                : 1
GLOBAL               : 14
GT                   : 80
GT_EQ                : 82
IDENT                : 2 3 4 5 6 7 9 10 11 12 13 41 42 43 44 45 46 47 48 49 50 52 53 54 55 56 57 62 87
ILLEGAL              : 
IN                   : 
INPUT                : 62
INT                  : 3 9 41 46 52
INT_LIT              : 88
LBRACE               : 35 36 37 38 39 40 59 60 60 63
LBRACKET             : 9 10 11 12 13
LIST_BLN             : 
LIST_BLN2D           : 
LIST_CHR             : 
LIST_CHR2D           : 
LIST_FLT             : 
LIST_FLT2D           : 
LIST_INT             : 
LIST_INT2D           : 
LIST_STR             : 
LIST_STR2D           : 
LPAREN               : 35 36 37 38 39 40 58 59 59 60 60 61 62 63 70 86
LT                   : 79
LT_EQ                : 81
MEASURE              : 70
MINUS                : 72
MINUS_EQ             : 
MINUS_MINUS          : 
MODULO               : 75
MOD_EQ               : 
MULTIPLY             : 73
MUL_EQ               : 
NEWLINE              : 21
NIGHT                : 
NOT                  : 85
NOT_EQ               : 78
OR                   : 84
OTHERWISE            : 60
OTHERWISE_CHECK      : 60
PLUS                 : 71
PLUS_EQ              : 
PLUS_PLUS            : 
POW                  : 
RBRACE               : 35 36 37 38 39 40 59 60 60 63
RBRACKET             : 9 10 11 12 13
REPEAT               : 59
REVIVE               : 67
RPAREN               : 35 36 37 38 39 40 58 59 59 60 60 61 62 63 70 86
SEMICOLON            : 
SHIFT                : 66
SKIP                 : 69
STOP                 : 68
STR                  : 5 11 43 48 54
STR_LIT              : 90
SWAP                 : 63
TILDE                : 
TYPE                 : 
UNTIL                : 59
error                : 

Nonterminals, with rules where they appear

arguments            : 58 93
assignment           : 24
case                 : 64 65
case_list            : 63 65
conditional          : 28
empty                : 18 22 51 95
expression           : 8 52 53 54 55 56 57 59 59 60 60 61 63 66 67 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 86 93 94
function_call        : 25 92
function_declaration : 26
global_declarations  : 1
io_statement         : 29
list_dec             : 17
loop                 : 27
measure_statement    : 34
parameters           : 35 36 37 38 39 40 41 42 43 44 45
program              : 0
return_statement     : 31
skip_statement       : 33
statement            : 19 20
statements           : 1 20 21 35 36 37 38 39 40 59 60 60 66
stop_statement       : 32
switch_statement     : 30
var_call             : 14
var_dec              : 8 15
var_initialization   : 16
variable_declaration : 23

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . BIRTH global_declarations statements GHOST

    BIRTH           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> BIRTH . global_declarations statements GHOST
    (14) global_declarations -> . GLOBAL var_call
    (15) global_declarations -> . var_dec
    (16) global_declarations -> . var_initialization
    (17) global_declarations -> . list_dec
    (18) global_declarations -> . empty
    (3) var_dec -> . INT IDENT
    (4) var_dec -> . FLT IDENT
    (5) var_dec -> . STR IDENT
    (6) var_dec -> . CHR IDENT
    (7) var_dec -> . BLN IDENT
    (8) var_initialization -> . var_dec EQ expression
    (9) list_dec -> . INT LBRACKET RBRACKET IDENT
    (10) list_dec -> . FLT LBRACKET RBRACKET IDENT
    (11) list_dec -> . STR LBRACKET RBRACKET IDENT
    (12) list_dec -> . CHR LBRACKET RBRACKET IDENT
    (13) list_dec -> . BLN LBRACKET RBRACKET IDENT
    (96) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for BLN resolved as shift
    GLOBAL          shift and go to state 4
    INT             shift and go to state 9
    FLT             shift and go to state 10
    STR             shift and go to state 11
    CHR             shift and go to state 12
    BLN             shift and go to state 13
    IDENT           reduce using rule 96 (empty -> .)
    FUNCTION_NAME   reduce using rule 96 (empty -> .)
    FUNCTION        reduce using rule 96 (empty -> .)
    FUNCTION_INT    reduce using rule 96 (empty -> .)
    FUNCTION_FLT    reduce using rule 96 (empty -> .)
    FUNCTION_STR    reduce using rule 96 (empty -> .)
    FUNCTION_CHR    reduce using rule 96 (empty -> .)
    FUNCTION_BLN    reduce using rule 96 (empty -> .)
    REPEAT          reduce using rule 96 (empty -> .)
    CHECK           reduce using rule 96 (empty -> .)
    DISPLAY         reduce using rule 96 (empty -> .)
    INPUT           reduce using rule 96 (empty -> .)
    SWAP            reduce using rule 96 (empty -> .)
    REVIVE          reduce using rule 96 (empty -> .)
    STOP            reduce using rule 96 (empty -> .)
    SKIP            reduce using rule 96 (empty -> .)
    MEASURE         reduce using rule 96 (empty -> .)
    GHOST           reduce using rule 96 (empty -> .)
    NEWLINE         reduce using rule 96 (empty -> .)

  ! INT             [ reduce using rule 96 (empty -> .) ]
  ! FLT             [ reduce using rule 96 (empty -> .) ]
  ! STR             [ reduce using rule 96 (empty -> .) ]
  ! CHR             [ reduce using rule 96 (empty -> .) ]
  ! BLN             [ reduce using rule 96 (empty -> .) ]

    global_declarations            shift and go to state 3
    var_dec                        shift and go to state 5
    var_initialization             shift and go to state 6
    list_dec                       shift and go to state 7
    empty                          shift and go to state 8

state 3

    (1) program -> BIRTH global_declarations . statements GHOST
    (19) statements -> . statement
    (20) statements -> . statements statement
    (21) statements -> . statements NEWLINE
    (22) statements -> . empty
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (96) empty -> .
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for BLN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for FUNCTION_NAME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION_INT resolved as shift
  ! shift/reduce conflict for FUNCTION_FLT resolved as shift
  ! shift/reduce conflict for FUNCTION_STR resolved as shift
  ! shift/reduce conflict for FUNCTION_CHR resolved as shift
  ! shift/reduce conflict for FUNCTION_BLN resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SWAP resolved as shift
  ! shift/reduce conflict for REVIVE resolved as shift
  ! shift/reduce conflict for STOP resolved as shift
  ! shift/reduce conflict for SKIP resolved as shift
  ! shift/reduce conflict for MEASURE resolved as shift
    GHOST           reduce using rule 96 (empty -> .)
    NEWLINE         reduce using rule 96 (empty -> .)
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

  ! INT             [ reduce using rule 96 (empty -> .) ]
  ! FLT             [ reduce using rule 96 (empty -> .) ]
  ! STR             [ reduce using rule 96 (empty -> .) ]
  ! CHR             [ reduce using rule 96 (empty -> .) ]
  ! BLN             [ reduce using rule 96 (empty -> .) ]
  ! IDENT           [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_NAME   [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_INT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_FLT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_STR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_CHR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_BLN    [ reduce using rule 96 (empty -> .) ]
  ! REPEAT          [ reduce using rule 96 (empty -> .) ]
  ! CHECK           [ reduce using rule 96 (empty -> .) ]
  ! DISPLAY         [ reduce using rule 96 (empty -> .) ]
  ! INPUT           [ reduce using rule 96 (empty -> .) ]
  ! SWAP            [ reduce using rule 96 (empty -> .) ]
  ! REVIVE          [ reduce using rule 96 (empty -> .) ]
  ! STOP            [ reduce using rule 96 (empty -> .) ]
  ! SKIP            [ reduce using rule 96 (empty -> .) ]
  ! MEASURE         [ reduce using rule 96 (empty -> .) ]

    statements                     shift and go to state 14
    statement                      shift and go to state 15
    empty                          shift and go to state 16
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 4

    (14) global_declarations -> GLOBAL . var_call
    (2) var_call -> . IDENT

    IDENT           shift and go to state 52

    var_call                       shift and go to state 51

state 5

    (15) global_declarations -> var_dec .
    (8) var_initialization -> var_dec . EQ expression

    INT             reduce using rule 15 (global_declarations -> var_dec .)
    FLT             reduce using rule 15 (global_declarations -> var_dec .)
    STR             reduce using rule 15 (global_declarations -> var_dec .)
    CHR             reduce using rule 15 (global_declarations -> var_dec .)
    BLN             reduce using rule 15 (global_declarations -> var_dec .)
    IDENT           reduce using rule 15 (global_declarations -> var_dec .)
    FUNCTION_NAME   reduce using rule 15 (global_declarations -> var_dec .)
    FUNCTION        reduce using rule 15 (global_declarations -> var_dec .)
    FUNCTION_INT    reduce using rule 15 (global_declarations -> var_dec .)
    FUNCTION_FLT    reduce using rule 15 (global_declarations -> var_dec .)
    FUNCTION_STR    reduce using rule 15 (global_declarations -> var_dec .)
    FUNCTION_CHR    reduce using rule 15 (global_declarations -> var_dec .)
    FUNCTION_BLN    reduce using rule 15 (global_declarations -> var_dec .)
    REPEAT          reduce using rule 15 (global_declarations -> var_dec .)
    CHECK           reduce using rule 15 (global_declarations -> var_dec .)
    DISPLAY         reduce using rule 15 (global_declarations -> var_dec .)
    INPUT           reduce using rule 15 (global_declarations -> var_dec .)
    SWAP            reduce using rule 15 (global_declarations -> var_dec .)
    REVIVE          reduce using rule 15 (global_declarations -> var_dec .)
    STOP            reduce using rule 15 (global_declarations -> var_dec .)
    SKIP            reduce using rule 15 (global_declarations -> var_dec .)
    MEASURE         reduce using rule 15 (global_declarations -> var_dec .)
    GHOST           reduce using rule 15 (global_declarations -> var_dec .)
    NEWLINE         reduce using rule 15 (global_declarations -> var_dec .)
    EQ              shift and go to state 53


state 6

    (16) global_declarations -> var_initialization .

    INT             reduce using rule 16 (global_declarations -> var_initialization .)
    FLT             reduce using rule 16 (global_declarations -> var_initialization .)
    STR             reduce using rule 16 (global_declarations -> var_initialization .)
    CHR             reduce using rule 16 (global_declarations -> var_initialization .)
    BLN             reduce using rule 16 (global_declarations -> var_initialization .)
    IDENT           reduce using rule 16 (global_declarations -> var_initialization .)
    FUNCTION_NAME   reduce using rule 16 (global_declarations -> var_initialization .)
    FUNCTION        reduce using rule 16 (global_declarations -> var_initialization .)
    FUNCTION_INT    reduce using rule 16 (global_declarations -> var_initialization .)
    FUNCTION_FLT    reduce using rule 16 (global_declarations -> var_initialization .)
    FUNCTION_STR    reduce using rule 16 (global_declarations -> var_initialization .)
    FUNCTION_CHR    reduce using rule 16 (global_declarations -> var_initialization .)
    FUNCTION_BLN    reduce using rule 16 (global_declarations -> var_initialization .)
    REPEAT          reduce using rule 16 (global_declarations -> var_initialization .)
    CHECK           reduce using rule 16 (global_declarations -> var_initialization .)
    DISPLAY         reduce using rule 16 (global_declarations -> var_initialization .)
    INPUT           reduce using rule 16 (global_declarations -> var_initialization .)
    SWAP            reduce using rule 16 (global_declarations -> var_initialization .)
    REVIVE          reduce using rule 16 (global_declarations -> var_initialization .)
    STOP            reduce using rule 16 (global_declarations -> var_initialization .)
    SKIP            reduce using rule 16 (global_declarations -> var_initialization .)
    MEASURE         reduce using rule 16 (global_declarations -> var_initialization .)
    GHOST           reduce using rule 16 (global_declarations -> var_initialization .)
    NEWLINE         reduce using rule 16 (global_declarations -> var_initialization .)


state 7

    (17) global_declarations -> list_dec .

    INT             reduce using rule 17 (global_declarations -> list_dec .)
    FLT             reduce using rule 17 (global_declarations -> list_dec .)
    STR             reduce using rule 17 (global_declarations -> list_dec .)
    CHR             reduce using rule 17 (global_declarations -> list_dec .)
    BLN             reduce using rule 17 (global_declarations -> list_dec .)
    IDENT           reduce using rule 17 (global_declarations -> list_dec .)
    FUNCTION_NAME   reduce using rule 17 (global_declarations -> list_dec .)
    FUNCTION        reduce using rule 17 (global_declarations -> list_dec .)
    FUNCTION_INT    reduce using rule 17 (global_declarations -> list_dec .)
    FUNCTION_FLT    reduce using rule 17 (global_declarations -> list_dec .)
    FUNCTION_STR    reduce using rule 17 (global_declarations -> list_dec .)
    FUNCTION_CHR    reduce using rule 17 (global_declarations -> list_dec .)
    FUNCTION_BLN    reduce using rule 17 (global_declarations -> list_dec .)
    REPEAT          reduce using rule 17 (global_declarations -> list_dec .)
    CHECK           reduce using rule 17 (global_declarations -> list_dec .)
    DISPLAY         reduce using rule 17 (global_declarations -> list_dec .)
    INPUT           reduce using rule 17 (global_declarations -> list_dec .)
    SWAP            reduce using rule 17 (global_declarations -> list_dec .)
    REVIVE          reduce using rule 17 (global_declarations -> list_dec .)
    STOP            reduce using rule 17 (global_declarations -> list_dec .)
    SKIP            reduce using rule 17 (global_declarations -> list_dec .)
    MEASURE         reduce using rule 17 (global_declarations -> list_dec .)
    GHOST           reduce using rule 17 (global_declarations -> list_dec .)
    NEWLINE         reduce using rule 17 (global_declarations -> list_dec .)


state 8

    (18) global_declarations -> empty .

    INT             reduce using rule 18 (global_declarations -> empty .)
    FLT             reduce using rule 18 (global_declarations -> empty .)
    STR             reduce using rule 18 (global_declarations -> empty .)
    CHR             reduce using rule 18 (global_declarations -> empty .)
    BLN             reduce using rule 18 (global_declarations -> empty .)
    IDENT           reduce using rule 18 (global_declarations -> empty .)
    FUNCTION_NAME   reduce using rule 18 (global_declarations -> empty .)
    FUNCTION        reduce using rule 18 (global_declarations -> empty .)
    FUNCTION_INT    reduce using rule 18 (global_declarations -> empty .)
    FUNCTION_FLT    reduce using rule 18 (global_declarations -> empty .)
    FUNCTION_STR    reduce using rule 18 (global_declarations -> empty .)
    FUNCTION_CHR    reduce using rule 18 (global_declarations -> empty .)
    FUNCTION_BLN    reduce using rule 18 (global_declarations -> empty .)
    REPEAT          reduce using rule 18 (global_declarations -> empty .)
    CHECK           reduce using rule 18 (global_declarations -> empty .)
    DISPLAY         reduce using rule 18 (global_declarations -> empty .)
    INPUT           reduce using rule 18 (global_declarations -> empty .)
    SWAP            reduce using rule 18 (global_declarations -> empty .)
    REVIVE          reduce using rule 18 (global_declarations -> empty .)
    STOP            reduce using rule 18 (global_declarations -> empty .)
    SKIP            reduce using rule 18 (global_declarations -> empty .)
    MEASURE         reduce using rule 18 (global_declarations -> empty .)
    GHOST           reduce using rule 18 (global_declarations -> empty .)
    NEWLINE         reduce using rule 18 (global_declarations -> empty .)


state 9

    (3) var_dec -> INT . IDENT
    (9) list_dec -> INT . LBRACKET RBRACKET IDENT

    IDENT           shift and go to state 54
    LBRACKET        shift and go to state 55


state 10

    (4) var_dec -> FLT . IDENT
    (10) list_dec -> FLT . LBRACKET RBRACKET IDENT

    IDENT           shift and go to state 56
    LBRACKET        shift and go to state 57


state 11

    (5) var_dec -> STR . IDENT
    (11) list_dec -> STR . LBRACKET RBRACKET IDENT

    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 59


state 12

    (6) var_dec -> CHR . IDENT
    (12) list_dec -> CHR . LBRACKET RBRACKET IDENT

    IDENT           shift and go to state 60
    LBRACKET        shift and go to state 61


state 13

    (7) var_dec -> BLN . IDENT
    (13) list_dec -> BLN . LBRACKET RBRACKET IDENT

    IDENT           shift and go to state 62
    LBRACKET        shift and go to state 63


state 14

    (1) program -> BIRTH global_declarations statements . GHOST
    (20) statements -> statements . statement
    (21) statements -> statements . NEWLINE
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

    GHOST           shift and go to state 64
    NEWLINE         shift and go to state 66
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

    statement                      shift and go to state 65
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 15

    (19) statements -> statement .

    GHOST           reduce using rule 19 (statements -> statement .)
    NEWLINE         reduce using rule 19 (statements -> statement .)
    INT             reduce using rule 19 (statements -> statement .)
    FLT             reduce using rule 19 (statements -> statement .)
    STR             reduce using rule 19 (statements -> statement .)
    CHR             reduce using rule 19 (statements -> statement .)
    BLN             reduce using rule 19 (statements -> statement .)
    IDENT           reduce using rule 19 (statements -> statement .)
    FUNCTION_NAME   reduce using rule 19 (statements -> statement .)
    FUNCTION        reduce using rule 19 (statements -> statement .)
    FUNCTION_INT    reduce using rule 19 (statements -> statement .)
    FUNCTION_FLT    reduce using rule 19 (statements -> statement .)
    FUNCTION_STR    reduce using rule 19 (statements -> statement .)
    FUNCTION_CHR    reduce using rule 19 (statements -> statement .)
    FUNCTION_BLN    reduce using rule 19 (statements -> statement .)
    REPEAT          reduce using rule 19 (statements -> statement .)
    CHECK           reduce using rule 19 (statements -> statement .)
    DISPLAY         reduce using rule 19 (statements -> statement .)
    INPUT           reduce using rule 19 (statements -> statement .)
    SWAP            reduce using rule 19 (statements -> statement .)
    REVIVE          reduce using rule 19 (statements -> statement .)
    STOP            reduce using rule 19 (statements -> statement .)
    SKIP            reduce using rule 19 (statements -> statement .)
    MEASURE         reduce using rule 19 (statements -> statement .)
    RBRACE          reduce using rule 19 (statements -> statement .)
    SHIFT           reduce using rule 19 (statements -> statement .)


state 16

    (22) statements -> empty .

    GHOST           reduce using rule 22 (statements -> empty .)
    NEWLINE         reduce using rule 22 (statements -> empty .)
    INT             reduce using rule 22 (statements -> empty .)
    FLT             reduce using rule 22 (statements -> empty .)
    STR             reduce using rule 22 (statements -> empty .)
    CHR             reduce using rule 22 (statements -> empty .)
    BLN             reduce using rule 22 (statements -> empty .)
    IDENT           reduce using rule 22 (statements -> empty .)
    FUNCTION_NAME   reduce using rule 22 (statements -> empty .)
    FUNCTION        reduce using rule 22 (statements -> empty .)
    FUNCTION_INT    reduce using rule 22 (statements -> empty .)
    FUNCTION_FLT    reduce using rule 22 (statements -> empty .)
    FUNCTION_STR    reduce using rule 22 (statements -> empty .)
    FUNCTION_CHR    reduce using rule 22 (statements -> empty .)
    FUNCTION_BLN    reduce using rule 22 (statements -> empty .)
    REPEAT          reduce using rule 22 (statements -> empty .)
    CHECK           reduce using rule 22 (statements -> empty .)
    DISPLAY         reduce using rule 22 (statements -> empty .)
    INPUT           reduce using rule 22 (statements -> empty .)
    SWAP            reduce using rule 22 (statements -> empty .)
    REVIVE          reduce using rule 22 (statements -> empty .)
    STOP            reduce using rule 22 (statements -> empty .)
    SKIP            reduce using rule 22 (statements -> empty .)
    MEASURE         reduce using rule 22 (statements -> empty .)
    RBRACE          reduce using rule 22 (statements -> empty .)
    SHIFT           reduce using rule 22 (statements -> empty .)


state 17

    (23) statement -> variable_declaration .

    GHOST           reduce using rule 23 (statement -> variable_declaration .)
    NEWLINE         reduce using rule 23 (statement -> variable_declaration .)
    INT             reduce using rule 23 (statement -> variable_declaration .)
    FLT             reduce using rule 23 (statement -> variable_declaration .)
    STR             reduce using rule 23 (statement -> variable_declaration .)
    CHR             reduce using rule 23 (statement -> variable_declaration .)
    BLN             reduce using rule 23 (statement -> variable_declaration .)
    IDENT           reduce using rule 23 (statement -> variable_declaration .)
    FUNCTION_NAME   reduce using rule 23 (statement -> variable_declaration .)
    FUNCTION        reduce using rule 23 (statement -> variable_declaration .)
    FUNCTION_INT    reduce using rule 23 (statement -> variable_declaration .)
    FUNCTION_FLT    reduce using rule 23 (statement -> variable_declaration .)
    FUNCTION_STR    reduce using rule 23 (statement -> variable_declaration .)
    FUNCTION_CHR    reduce using rule 23 (statement -> variable_declaration .)
    FUNCTION_BLN    reduce using rule 23 (statement -> variable_declaration .)
    REPEAT          reduce using rule 23 (statement -> variable_declaration .)
    CHECK           reduce using rule 23 (statement -> variable_declaration .)
    DISPLAY         reduce using rule 23 (statement -> variable_declaration .)
    INPUT           reduce using rule 23 (statement -> variable_declaration .)
    SWAP            reduce using rule 23 (statement -> variable_declaration .)
    REVIVE          reduce using rule 23 (statement -> variable_declaration .)
    STOP            reduce using rule 23 (statement -> variable_declaration .)
    SKIP            reduce using rule 23 (statement -> variable_declaration .)
    MEASURE         reduce using rule 23 (statement -> variable_declaration .)
    RBRACE          reduce using rule 23 (statement -> variable_declaration .)
    SHIFT           reduce using rule 23 (statement -> variable_declaration .)


state 18

    (24) statement -> assignment .

    GHOST           reduce using rule 24 (statement -> assignment .)
    NEWLINE         reduce using rule 24 (statement -> assignment .)
    INT             reduce using rule 24 (statement -> assignment .)
    FLT             reduce using rule 24 (statement -> assignment .)
    STR             reduce using rule 24 (statement -> assignment .)
    CHR             reduce using rule 24 (statement -> assignment .)
    BLN             reduce using rule 24 (statement -> assignment .)
    IDENT           reduce using rule 24 (statement -> assignment .)
    FUNCTION_NAME   reduce using rule 24 (statement -> assignment .)
    FUNCTION        reduce using rule 24 (statement -> assignment .)
    FUNCTION_INT    reduce using rule 24 (statement -> assignment .)
    FUNCTION_FLT    reduce using rule 24 (statement -> assignment .)
    FUNCTION_STR    reduce using rule 24 (statement -> assignment .)
    FUNCTION_CHR    reduce using rule 24 (statement -> assignment .)
    FUNCTION_BLN    reduce using rule 24 (statement -> assignment .)
    REPEAT          reduce using rule 24 (statement -> assignment .)
    CHECK           reduce using rule 24 (statement -> assignment .)
    DISPLAY         reduce using rule 24 (statement -> assignment .)
    INPUT           reduce using rule 24 (statement -> assignment .)
    SWAP            reduce using rule 24 (statement -> assignment .)
    REVIVE          reduce using rule 24 (statement -> assignment .)
    STOP            reduce using rule 24 (statement -> assignment .)
    SKIP            reduce using rule 24 (statement -> assignment .)
    MEASURE         reduce using rule 24 (statement -> assignment .)
    RBRACE          reduce using rule 24 (statement -> assignment .)
    SHIFT           reduce using rule 24 (statement -> assignment .)


state 19

    (25) statement -> function_call .

    GHOST           reduce using rule 25 (statement -> function_call .)
    NEWLINE         reduce using rule 25 (statement -> function_call .)
    INT             reduce using rule 25 (statement -> function_call .)
    FLT             reduce using rule 25 (statement -> function_call .)
    STR             reduce using rule 25 (statement -> function_call .)
    CHR             reduce using rule 25 (statement -> function_call .)
    BLN             reduce using rule 25 (statement -> function_call .)
    IDENT           reduce using rule 25 (statement -> function_call .)
    FUNCTION_NAME   reduce using rule 25 (statement -> function_call .)
    FUNCTION        reduce using rule 25 (statement -> function_call .)
    FUNCTION_INT    reduce using rule 25 (statement -> function_call .)
    FUNCTION_FLT    reduce using rule 25 (statement -> function_call .)
    FUNCTION_STR    reduce using rule 25 (statement -> function_call .)
    FUNCTION_CHR    reduce using rule 25 (statement -> function_call .)
    FUNCTION_BLN    reduce using rule 25 (statement -> function_call .)
    REPEAT          reduce using rule 25 (statement -> function_call .)
    CHECK           reduce using rule 25 (statement -> function_call .)
    DISPLAY         reduce using rule 25 (statement -> function_call .)
    INPUT           reduce using rule 25 (statement -> function_call .)
    SWAP            reduce using rule 25 (statement -> function_call .)
    REVIVE          reduce using rule 25 (statement -> function_call .)
    STOP            reduce using rule 25 (statement -> function_call .)
    SKIP            reduce using rule 25 (statement -> function_call .)
    MEASURE         reduce using rule 25 (statement -> function_call .)
    RBRACE          reduce using rule 25 (statement -> function_call .)
    SHIFT           reduce using rule 25 (statement -> function_call .)


state 20

    (26) statement -> function_declaration .

    GHOST           reduce using rule 26 (statement -> function_declaration .)
    NEWLINE         reduce using rule 26 (statement -> function_declaration .)
    INT             reduce using rule 26 (statement -> function_declaration .)
    FLT             reduce using rule 26 (statement -> function_declaration .)
    STR             reduce using rule 26 (statement -> function_declaration .)
    CHR             reduce using rule 26 (statement -> function_declaration .)
    BLN             reduce using rule 26 (statement -> function_declaration .)
    IDENT           reduce using rule 26 (statement -> function_declaration .)
    FUNCTION_NAME   reduce using rule 26 (statement -> function_declaration .)
    FUNCTION        reduce using rule 26 (statement -> function_declaration .)
    FUNCTION_INT    reduce using rule 26 (statement -> function_declaration .)
    FUNCTION_FLT    reduce using rule 26 (statement -> function_declaration .)
    FUNCTION_STR    reduce using rule 26 (statement -> function_declaration .)
    FUNCTION_CHR    reduce using rule 26 (statement -> function_declaration .)
    FUNCTION_BLN    reduce using rule 26 (statement -> function_declaration .)
    REPEAT          reduce using rule 26 (statement -> function_declaration .)
    CHECK           reduce using rule 26 (statement -> function_declaration .)
    DISPLAY         reduce using rule 26 (statement -> function_declaration .)
    INPUT           reduce using rule 26 (statement -> function_declaration .)
    SWAP            reduce using rule 26 (statement -> function_declaration .)
    REVIVE          reduce using rule 26 (statement -> function_declaration .)
    STOP            reduce using rule 26 (statement -> function_declaration .)
    SKIP            reduce using rule 26 (statement -> function_declaration .)
    MEASURE         reduce using rule 26 (statement -> function_declaration .)
    RBRACE          reduce using rule 26 (statement -> function_declaration .)
    SHIFT           reduce using rule 26 (statement -> function_declaration .)


state 21

    (27) statement -> loop .

    GHOST           reduce using rule 27 (statement -> loop .)
    NEWLINE         reduce using rule 27 (statement -> loop .)
    INT             reduce using rule 27 (statement -> loop .)
    FLT             reduce using rule 27 (statement -> loop .)
    STR             reduce using rule 27 (statement -> loop .)
    CHR             reduce using rule 27 (statement -> loop .)
    BLN             reduce using rule 27 (statement -> loop .)
    IDENT           reduce using rule 27 (statement -> loop .)
    FUNCTION_NAME   reduce using rule 27 (statement -> loop .)
    FUNCTION        reduce using rule 27 (statement -> loop .)
    FUNCTION_INT    reduce using rule 27 (statement -> loop .)
    FUNCTION_FLT    reduce using rule 27 (statement -> loop .)
    FUNCTION_STR    reduce using rule 27 (statement -> loop .)
    FUNCTION_CHR    reduce using rule 27 (statement -> loop .)
    FUNCTION_BLN    reduce using rule 27 (statement -> loop .)
    REPEAT          reduce using rule 27 (statement -> loop .)
    CHECK           reduce using rule 27 (statement -> loop .)
    DISPLAY         reduce using rule 27 (statement -> loop .)
    INPUT           reduce using rule 27 (statement -> loop .)
    SWAP            reduce using rule 27 (statement -> loop .)
    REVIVE          reduce using rule 27 (statement -> loop .)
    STOP            reduce using rule 27 (statement -> loop .)
    SKIP            reduce using rule 27 (statement -> loop .)
    MEASURE         reduce using rule 27 (statement -> loop .)
    RBRACE          reduce using rule 27 (statement -> loop .)
    SHIFT           reduce using rule 27 (statement -> loop .)


state 22

    (28) statement -> conditional .

    GHOST           reduce using rule 28 (statement -> conditional .)
    NEWLINE         reduce using rule 28 (statement -> conditional .)
    INT             reduce using rule 28 (statement -> conditional .)
    FLT             reduce using rule 28 (statement -> conditional .)
    STR             reduce using rule 28 (statement -> conditional .)
    CHR             reduce using rule 28 (statement -> conditional .)
    BLN             reduce using rule 28 (statement -> conditional .)
    IDENT           reduce using rule 28 (statement -> conditional .)
    FUNCTION_NAME   reduce using rule 28 (statement -> conditional .)
    FUNCTION        reduce using rule 28 (statement -> conditional .)
    FUNCTION_INT    reduce using rule 28 (statement -> conditional .)
    FUNCTION_FLT    reduce using rule 28 (statement -> conditional .)
    FUNCTION_STR    reduce using rule 28 (statement -> conditional .)
    FUNCTION_CHR    reduce using rule 28 (statement -> conditional .)
    FUNCTION_BLN    reduce using rule 28 (statement -> conditional .)
    REPEAT          reduce using rule 28 (statement -> conditional .)
    CHECK           reduce using rule 28 (statement -> conditional .)
    DISPLAY         reduce using rule 28 (statement -> conditional .)
    INPUT           reduce using rule 28 (statement -> conditional .)
    SWAP            reduce using rule 28 (statement -> conditional .)
    REVIVE          reduce using rule 28 (statement -> conditional .)
    STOP            reduce using rule 28 (statement -> conditional .)
    SKIP            reduce using rule 28 (statement -> conditional .)
    MEASURE         reduce using rule 28 (statement -> conditional .)
    RBRACE          reduce using rule 28 (statement -> conditional .)
    SHIFT           reduce using rule 28 (statement -> conditional .)


state 23

    (29) statement -> io_statement .

    GHOST           reduce using rule 29 (statement -> io_statement .)
    NEWLINE         reduce using rule 29 (statement -> io_statement .)
    INT             reduce using rule 29 (statement -> io_statement .)
    FLT             reduce using rule 29 (statement -> io_statement .)
    STR             reduce using rule 29 (statement -> io_statement .)
    CHR             reduce using rule 29 (statement -> io_statement .)
    BLN             reduce using rule 29 (statement -> io_statement .)
    IDENT           reduce using rule 29 (statement -> io_statement .)
    FUNCTION_NAME   reduce using rule 29 (statement -> io_statement .)
    FUNCTION        reduce using rule 29 (statement -> io_statement .)
    FUNCTION_INT    reduce using rule 29 (statement -> io_statement .)
    FUNCTION_FLT    reduce using rule 29 (statement -> io_statement .)
    FUNCTION_STR    reduce using rule 29 (statement -> io_statement .)
    FUNCTION_CHR    reduce using rule 29 (statement -> io_statement .)
    FUNCTION_BLN    reduce using rule 29 (statement -> io_statement .)
    REPEAT          reduce using rule 29 (statement -> io_statement .)
    CHECK           reduce using rule 29 (statement -> io_statement .)
    DISPLAY         reduce using rule 29 (statement -> io_statement .)
    INPUT           reduce using rule 29 (statement -> io_statement .)
    SWAP            reduce using rule 29 (statement -> io_statement .)
    REVIVE          reduce using rule 29 (statement -> io_statement .)
    STOP            reduce using rule 29 (statement -> io_statement .)
    SKIP            reduce using rule 29 (statement -> io_statement .)
    MEASURE         reduce using rule 29 (statement -> io_statement .)
    RBRACE          reduce using rule 29 (statement -> io_statement .)
    SHIFT           reduce using rule 29 (statement -> io_statement .)


state 24

    (30) statement -> switch_statement .

    GHOST           reduce using rule 30 (statement -> switch_statement .)
    NEWLINE         reduce using rule 30 (statement -> switch_statement .)
    INT             reduce using rule 30 (statement -> switch_statement .)
    FLT             reduce using rule 30 (statement -> switch_statement .)
    STR             reduce using rule 30 (statement -> switch_statement .)
    CHR             reduce using rule 30 (statement -> switch_statement .)
    BLN             reduce using rule 30 (statement -> switch_statement .)
    IDENT           reduce using rule 30 (statement -> switch_statement .)
    FUNCTION_NAME   reduce using rule 30 (statement -> switch_statement .)
    FUNCTION        reduce using rule 30 (statement -> switch_statement .)
    FUNCTION_INT    reduce using rule 30 (statement -> switch_statement .)
    FUNCTION_FLT    reduce using rule 30 (statement -> switch_statement .)
    FUNCTION_STR    reduce using rule 30 (statement -> switch_statement .)
    FUNCTION_CHR    reduce using rule 30 (statement -> switch_statement .)
    FUNCTION_BLN    reduce using rule 30 (statement -> switch_statement .)
    REPEAT          reduce using rule 30 (statement -> switch_statement .)
    CHECK           reduce using rule 30 (statement -> switch_statement .)
    DISPLAY         reduce using rule 30 (statement -> switch_statement .)
    INPUT           reduce using rule 30 (statement -> switch_statement .)
    SWAP            reduce using rule 30 (statement -> switch_statement .)
    REVIVE          reduce using rule 30 (statement -> switch_statement .)
    STOP            reduce using rule 30 (statement -> switch_statement .)
    SKIP            reduce using rule 30 (statement -> switch_statement .)
    MEASURE         reduce using rule 30 (statement -> switch_statement .)
    RBRACE          reduce using rule 30 (statement -> switch_statement .)
    SHIFT           reduce using rule 30 (statement -> switch_statement .)


state 25

    (31) statement -> return_statement .

    GHOST           reduce using rule 31 (statement -> return_statement .)
    NEWLINE         reduce using rule 31 (statement -> return_statement .)
    INT             reduce using rule 31 (statement -> return_statement .)
    FLT             reduce using rule 31 (statement -> return_statement .)
    STR             reduce using rule 31 (statement -> return_statement .)
    CHR             reduce using rule 31 (statement -> return_statement .)
    BLN             reduce using rule 31 (statement -> return_statement .)
    IDENT           reduce using rule 31 (statement -> return_statement .)
    FUNCTION_NAME   reduce using rule 31 (statement -> return_statement .)
    FUNCTION        reduce using rule 31 (statement -> return_statement .)
    FUNCTION_INT    reduce using rule 31 (statement -> return_statement .)
    FUNCTION_FLT    reduce using rule 31 (statement -> return_statement .)
    FUNCTION_STR    reduce using rule 31 (statement -> return_statement .)
    FUNCTION_CHR    reduce using rule 31 (statement -> return_statement .)
    FUNCTION_BLN    reduce using rule 31 (statement -> return_statement .)
    REPEAT          reduce using rule 31 (statement -> return_statement .)
    CHECK           reduce using rule 31 (statement -> return_statement .)
    DISPLAY         reduce using rule 31 (statement -> return_statement .)
    INPUT           reduce using rule 31 (statement -> return_statement .)
    SWAP            reduce using rule 31 (statement -> return_statement .)
    REVIVE          reduce using rule 31 (statement -> return_statement .)
    STOP            reduce using rule 31 (statement -> return_statement .)
    SKIP            reduce using rule 31 (statement -> return_statement .)
    MEASURE         reduce using rule 31 (statement -> return_statement .)
    RBRACE          reduce using rule 31 (statement -> return_statement .)
    SHIFT           reduce using rule 31 (statement -> return_statement .)


state 26

    (32) statement -> stop_statement .

    GHOST           reduce using rule 32 (statement -> stop_statement .)
    NEWLINE         reduce using rule 32 (statement -> stop_statement .)
    INT             reduce using rule 32 (statement -> stop_statement .)
    FLT             reduce using rule 32 (statement -> stop_statement .)
    STR             reduce using rule 32 (statement -> stop_statement .)
    CHR             reduce using rule 32 (statement -> stop_statement .)
    BLN             reduce using rule 32 (statement -> stop_statement .)
    IDENT           reduce using rule 32 (statement -> stop_statement .)
    FUNCTION_NAME   reduce using rule 32 (statement -> stop_statement .)
    FUNCTION        reduce using rule 32 (statement -> stop_statement .)
    FUNCTION_INT    reduce using rule 32 (statement -> stop_statement .)
    FUNCTION_FLT    reduce using rule 32 (statement -> stop_statement .)
    FUNCTION_STR    reduce using rule 32 (statement -> stop_statement .)
    FUNCTION_CHR    reduce using rule 32 (statement -> stop_statement .)
    FUNCTION_BLN    reduce using rule 32 (statement -> stop_statement .)
    REPEAT          reduce using rule 32 (statement -> stop_statement .)
    CHECK           reduce using rule 32 (statement -> stop_statement .)
    DISPLAY         reduce using rule 32 (statement -> stop_statement .)
    INPUT           reduce using rule 32 (statement -> stop_statement .)
    SWAP            reduce using rule 32 (statement -> stop_statement .)
    REVIVE          reduce using rule 32 (statement -> stop_statement .)
    STOP            reduce using rule 32 (statement -> stop_statement .)
    SKIP            reduce using rule 32 (statement -> stop_statement .)
    MEASURE         reduce using rule 32 (statement -> stop_statement .)
    RBRACE          reduce using rule 32 (statement -> stop_statement .)
    SHIFT           reduce using rule 32 (statement -> stop_statement .)


state 27

    (33) statement -> skip_statement .

    GHOST           reduce using rule 33 (statement -> skip_statement .)
    NEWLINE         reduce using rule 33 (statement -> skip_statement .)
    INT             reduce using rule 33 (statement -> skip_statement .)
    FLT             reduce using rule 33 (statement -> skip_statement .)
    STR             reduce using rule 33 (statement -> skip_statement .)
    CHR             reduce using rule 33 (statement -> skip_statement .)
    BLN             reduce using rule 33 (statement -> skip_statement .)
    IDENT           reduce using rule 33 (statement -> skip_statement .)
    FUNCTION_NAME   reduce using rule 33 (statement -> skip_statement .)
    FUNCTION        reduce using rule 33 (statement -> skip_statement .)
    FUNCTION_INT    reduce using rule 33 (statement -> skip_statement .)
    FUNCTION_FLT    reduce using rule 33 (statement -> skip_statement .)
    FUNCTION_STR    reduce using rule 33 (statement -> skip_statement .)
    FUNCTION_CHR    reduce using rule 33 (statement -> skip_statement .)
    FUNCTION_BLN    reduce using rule 33 (statement -> skip_statement .)
    REPEAT          reduce using rule 33 (statement -> skip_statement .)
    CHECK           reduce using rule 33 (statement -> skip_statement .)
    DISPLAY         reduce using rule 33 (statement -> skip_statement .)
    INPUT           reduce using rule 33 (statement -> skip_statement .)
    SWAP            reduce using rule 33 (statement -> skip_statement .)
    REVIVE          reduce using rule 33 (statement -> skip_statement .)
    STOP            reduce using rule 33 (statement -> skip_statement .)
    SKIP            reduce using rule 33 (statement -> skip_statement .)
    MEASURE         reduce using rule 33 (statement -> skip_statement .)
    RBRACE          reduce using rule 33 (statement -> skip_statement .)
    SHIFT           reduce using rule 33 (statement -> skip_statement .)


state 28

    (34) statement -> measure_statement .

    GHOST           reduce using rule 34 (statement -> measure_statement .)
    NEWLINE         reduce using rule 34 (statement -> measure_statement .)
    INT             reduce using rule 34 (statement -> measure_statement .)
    FLT             reduce using rule 34 (statement -> measure_statement .)
    STR             reduce using rule 34 (statement -> measure_statement .)
    CHR             reduce using rule 34 (statement -> measure_statement .)
    BLN             reduce using rule 34 (statement -> measure_statement .)
    IDENT           reduce using rule 34 (statement -> measure_statement .)
    FUNCTION_NAME   reduce using rule 34 (statement -> measure_statement .)
    FUNCTION        reduce using rule 34 (statement -> measure_statement .)
    FUNCTION_INT    reduce using rule 34 (statement -> measure_statement .)
    FUNCTION_FLT    reduce using rule 34 (statement -> measure_statement .)
    FUNCTION_STR    reduce using rule 34 (statement -> measure_statement .)
    FUNCTION_CHR    reduce using rule 34 (statement -> measure_statement .)
    FUNCTION_BLN    reduce using rule 34 (statement -> measure_statement .)
    REPEAT          reduce using rule 34 (statement -> measure_statement .)
    CHECK           reduce using rule 34 (statement -> measure_statement .)
    DISPLAY         reduce using rule 34 (statement -> measure_statement .)
    INPUT           reduce using rule 34 (statement -> measure_statement .)
    SWAP            reduce using rule 34 (statement -> measure_statement .)
    REVIVE          reduce using rule 34 (statement -> measure_statement .)
    STOP            reduce using rule 34 (statement -> measure_statement .)
    SKIP            reduce using rule 34 (statement -> measure_statement .)
    MEASURE         reduce using rule 34 (statement -> measure_statement .)
    RBRACE          reduce using rule 34 (statement -> measure_statement .)
    SHIFT           reduce using rule 34 (statement -> measure_statement .)


state 29

    (52) variable_declaration -> INT . IDENT EQ expression

    IDENT           shift and go to state 67


state 30

    (57) assignment -> IDENT . EQ expression

    EQ              shift and go to state 68


state 31

    (53) variable_declaration -> FLT . IDENT EQ expression

    IDENT           shift and go to state 69


state 32

    (54) variable_declaration -> STR . IDENT EQ expression

    IDENT           shift and go to state 70


state 33

    (55) variable_declaration -> CHR . IDENT EQ expression

    IDENT           shift and go to state 71


state 34

    (56) variable_declaration -> BLN . IDENT EQ expression

    IDENT           shift and go to state 72


state 35

    (58) function_call -> FUNCTION_NAME . LPAREN arguments RPAREN

    LPAREN          shift and go to state 73


state 36

    (35) function_declaration -> FUNCTION . FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE

    FUNCTION_NAME   shift and go to state 74


state 37

    (36) function_declaration -> FUNCTION_INT . FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE

    FUNCTION_NAME   shift and go to state 75


state 38

    (37) function_declaration -> FUNCTION_FLT . FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE

    FUNCTION_NAME   shift and go to state 76


state 39

    (38) function_declaration -> FUNCTION_STR . FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE

    FUNCTION_NAME   shift and go to state 77


state 40

    (39) function_declaration -> FUNCTION_CHR . FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE

    FUNCTION_NAME   shift and go to state 78


state 41

    (40) function_declaration -> FUNCTION_BLN . FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE

    FUNCTION_NAME   shift and go to state 79


state 42

    (59) loop -> REPEAT . LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN

    LPAREN          shift and go to state 80


state 43

    (60) conditional -> CHECK . LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN

    LPAREN          shift and go to state 81


state 44

    (61) io_statement -> DISPLAY . LPAREN expression RPAREN

    LPAREN          shift and go to state 82


state 45

    (62) io_statement -> INPUT . LPAREN IDENT RPAREN

    LPAREN          shift and go to state 83


state 46

    (63) switch_statement -> SWAP . LPAREN expression RPAREN LBRACE case_list RBRACE

    LPAREN          shift and go to state 84


state 47

    (67) return_statement -> REVIVE . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 85
    function_call                  shift and go to state 93

state 48

    (68) stop_statement -> STOP .

    GHOST           reduce using rule 68 (stop_statement -> STOP .)
    NEWLINE         reduce using rule 68 (stop_statement -> STOP .)
    INT             reduce using rule 68 (stop_statement -> STOP .)
    FLT             reduce using rule 68 (stop_statement -> STOP .)
    STR             reduce using rule 68 (stop_statement -> STOP .)
    CHR             reduce using rule 68 (stop_statement -> STOP .)
    BLN             reduce using rule 68 (stop_statement -> STOP .)
    IDENT           reduce using rule 68 (stop_statement -> STOP .)
    FUNCTION_NAME   reduce using rule 68 (stop_statement -> STOP .)
    FUNCTION        reduce using rule 68 (stop_statement -> STOP .)
    FUNCTION_INT    reduce using rule 68 (stop_statement -> STOP .)
    FUNCTION_FLT    reduce using rule 68 (stop_statement -> STOP .)
    FUNCTION_STR    reduce using rule 68 (stop_statement -> STOP .)
    FUNCTION_CHR    reduce using rule 68 (stop_statement -> STOP .)
    FUNCTION_BLN    reduce using rule 68 (stop_statement -> STOP .)
    REPEAT          reduce using rule 68 (stop_statement -> STOP .)
    CHECK           reduce using rule 68 (stop_statement -> STOP .)
    DISPLAY         reduce using rule 68 (stop_statement -> STOP .)
    INPUT           reduce using rule 68 (stop_statement -> STOP .)
    SWAP            reduce using rule 68 (stop_statement -> STOP .)
    REVIVE          reduce using rule 68 (stop_statement -> STOP .)
    STOP            reduce using rule 68 (stop_statement -> STOP .)
    SKIP            reduce using rule 68 (stop_statement -> STOP .)
    MEASURE         reduce using rule 68 (stop_statement -> STOP .)
    RBRACE          reduce using rule 68 (stop_statement -> STOP .)
    SHIFT           reduce using rule 68 (stop_statement -> STOP .)


state 49

    (69) skip_statement -> SKIP .

    GHOST           reduce using rule 69 (skip_statement -> SKIP .)
    NEWLINE         reduce using rule 69 (skip_statement -> SKIP .)
    INT             reduce using rule 69 (skip_statement -> SKIP .)
    FLT             reduce using rule 69 (skip_statement -> SKIP .)
    STR             reduce using rule 69 (skip_statement -> SKIP .)
    CHR             reduce using rule 69 (skip_statement -> SKIP .)
    BLN             reduce using rule 69 (skip_statement -> SKIP .)
    IDENT           reduce using rule 69 (skip_statement -> SKIP .)
    FUNCTION_NAME   reduce using rule 69 (skip_statement -> SKIP .)
    FUNCTION        reduce using rule 69 (skip_statement -> SKIP .)
    FUNCTION_INT    reduce using rule 69 (skip_statement -> SKIP .)
    FUNCTION_FLT    reduce using rule 69 (skip_statement -> SKIP .)
    FUNCTION_STR    reduce using rule 69 (skip_statement -> SKIP .)
    FUNCTION_CHR    reduce using rule 69 (skip_statement -> SKIP .)
    FUNCTION_BLN    reduce using rule 69 (skip_statement -> SKIP .)
    REPEAT          reduce using rule 69 (skip_statement -> SKIP .)
    CHECK           reduce using rule 69 (skip_statement -> SKIP .)
    DISPLAY         reduce using rule 69 (skip_statement -> SKIP .)
    INPUT           reduce using rule 69 (skip_statement -> SKIP .)
    SWAP            reduce using rule 69 (skip_statement -> SKIP .)
    REVIVE          reduce using rule 69 (skip_statement -> SKIP .)
    STOP            reduce using rule 69 (skip_statement -> SKIP .)
    SKIP            reduce using rule 69 (skip_statement -> SKIP .)
    MEASURE         reduce using rule 69 (skip_statement -> SKIP .)
    RBRACE          reduce using rule 69 (skip_statement -> SKIP .)
    SHIFT           reduce using rule 69 (skip_statement -> SKIP .)


state 50

    (70) measure_statement -> MEASURE . LPAREN expression RPAREN

    LPAREN          shift and go to state 94


state 51

    (14) global_declarations -> GLOBAL var_call .

    INT             reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    FLT             reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    STR             reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    CHR             reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    BLN             reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    IDENT           reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    FUNCTION_NAME   reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    FUNCTION        reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    FUNCTION_INT    reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    FUNCTION_FLT    reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    FUNCTION_STR    reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    FUNCTION_CHR    reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    FUNCTION_BLN    reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    REPEAT          reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    CHECK           reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    DISPLAY         reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    INPUT           reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    SWAP            reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    REVIVE          reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    STOP            reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    SKIP            reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    MEASURE         reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    GHOST           reduce using rule 14 (global_declarations -> GLOBAL var_call .)
    NEWLINE         reduce using rule 14 (global_declarations -> GLOBAL var_call .)


state 52

    (2) var_call -> IDENT .

    INT             reduce using rule 2 (var_call -> IDENT .)
    FLT             reduce using rule 2 (var_call -> IDENT .)
    STR             reduce using rule 2 (var_call -> IDENT .)
    CHR             reduce using rule 2 (var_call -> IDENT .)
    BLN             reduce using rule 2 (var_call -> IDENT .)
    IDENT           reduce using rule 2 (var_call -> IDENT .)
    FUNCTION_NAME   reduce using rule 2 (var_call -> IDENT .)
    FUNCTION        reduce using rule 2 (var_call -> IDENT .)
    FUNCTION_INT    reduce using rule 2 (var_call -> IDENT .)
    FUNCTION_FLT    reduce using rule 2 (var_call -> IDENT .)
    FUNCTION_STR    reduce using rule 2 (var_call -> IDENT .)
    FUNCTION_CHR    reduce using rule 2 (var_call -> IDENT .)
    FUNCTION_BLN    reduce using rule 2 (var_call -> IDENT .)
    REPEAT          reduce using rule 2 (var_call -> IDENT .)
    CHECK           reduce using rule 2 (var_call -> IDENT .)
    DISPLAY         reduce using rule 2 (var_call -> IDENT .)
    INPUT           reduce using rule 2 (var_call -> IDENT .)
    SWAP            reduce using rule 2 (var_call -> IDENT .)
    REVIVE          reduce using rule 2 (var_call -> IDENT .)
    STOP            reduce using rule 2 (var_call -> IDENT .)
    SKIP            reduce using rule 2 (var_call -> IDENT .)
    MEASURE         reduce using rule 2 (var_call -> IDENT .)
    GHOST           reduce using rule 2 (var_call -> IDENT .)
    NEWLINE         reduce using rule 2 (var_call -> IDENT .)


state 53

    (8) var_initialization -> var_dec EQ . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 95
    function_call                  shift and go to state 93

state 54

    (3) var_dec -> INT IDENT .

    EQ              reduce using rule 3 (var_dec -> INT IDENT .)
    INT             reduce using rule 3 (var_dec -> INT IDENT .)
    FLT             reduce using rule 3 (var_dec -> INT IDENT .)
    STR             reduce using rule 3 (var_dec -> INT IDENT .)
    CHR             reduce using rule 3 (var_dec -> INT IDENT .)
    BLN             reduce using rule 3 (var_dec -> INT IDENT .)
    IDENT           reduce using rule 3 (var_dec -> INT IDENT .)
    FUNCTION_NAME   reduce using rule 3 (var_dec -> INT IDENT .)
    FUNCTION        reduce using rule 3 (var_dec -> INT IDENT .)
    FUNCTION_INT    reduce using rule 3 (var_dec -> INT IDENT .)
    FUNCTION_FLT    reduce using rule 3 (var_dec -> INT IDENT .)
    FUNCTION_STR    reduce using rule 3 (var_dec -> INT IDENT .)
    FUNCTION_CHR    reduce using rule 3 (var_dec -> INT IDENT .)
    FUNCTION_BLN    reduce using rule 3 (var_dec -> INT IDENT .)
    REPEAT          reduce using rule 3 (var_dec -> INT IDENT .)
    CHECK           reduce using rule 3 (var_dec -> INT IDENT .)
    DISPLAY         reduce using rule 3 (var_dec -> INT IDENT .)
    INPUT           reduce using rule 3 (var_dec -> INT IDENT .)
    SWAP            reduce using rule 3 (var_dec -> INT IDENT .)
    REVIVE          reduce using rule 3 (var_dec -> INT IDENT .)
    STOP            reduce using rule 3 (var_dec -> INT IDENT .)
    SKIP            reduce using rule 3 (var_dec -> INT IDENT .)
    MEASURE         reduce using rule 3 (var_dec -> INT IDENT .)
    GHOST           reduce using rule 3 (var_dec -> INT IDENT .)
    NEWLINE         reduce using rule 3 (var_dec -> INT IDENT .)


state 55

    (9) list_dec -> INT LBRACKET . RBRACKET IDENT

    RBRACKET        shift and go to state 96


state 56

    (4) var_dec -> FLT IDENT .

    EQ              reduce using rule 4 (var_dec -> FLT IDENT .)
    INT             reduce using rule 4 (var_dec -> FLT IDENT .)
    FLT             reduce using rule 4 (var_dec -> FLT IDENT .)
    STR             reduce using rule 4 (var_dec -> FLT IDENT .)
    CHR             reduce using rule 4 (var_dec -> FLT IDENT .)
    BLN             reduce using rule 4 (var_dec -> FLT IDENT .)
    IDENT           reduce using rule 4 (var_dec -> FLT IDENT .)
    FUNCTION_NAME   reduce using rule 4 (var_dec -> FLT IDENT .)
    FUNCTION        reduce using rule 4 (var_dec -> FLT IDENT .)
    FUNCTION_INT    reduce using rule 4 (var_dec -> FLT IDENT .)
    FUNCTION_FLT    reduce using rule 4 (var_dec -> FLT IDENT .)
    FUNCTION_STR    reduce using rule 4 (var_dec -> FLT IDENT .)
    FUNCTION_CHR    reduce using rule 4 (var_dec -> FLT IDENT .)
    FUNCTION_BLN    reduce using rule 4 (var_dec -> FLT IDENT .)
    REPEAT          reduce using rule 4 (var_dec -> FLT IDENT .)
    CHECK           reduce using rule 4 (var_dec -> FLT IDENT .)
    DISPLAY         reduce using rule 4 (var_dec -> FLT IDENT .)
    INPUT           reduce using rule 4 (var_dec -> FLT IDENT .)
    SWAP            reduce using rule 4 (var_dec -> FLT IDENT .)
    REVIVE          reduce using rule 4 (var_dec -> FLT IDENT .)
    STOP            reduce using rule 4 (var_dec -> FLT IDENT .)
    SKIP            reduce using rule 4 (var_dec -> FLT IDENT .)
    MEASURE         reduce using rule 4 (var_dec -> FLT IDENT .)
    GHOST           reduce using rule 4 (var_dec -> FLT IDENT .)
    NEWLINE         reduce using rule 4 (var_dec -> FLT IDENT .)


state 57

    (10) list_dec -> FLT LBRACKET . RBRACKET IDENT

    RBRACKET        shift and go to state 97


state 58

    (5) var_dec -> STR IDENT .

    EQ              reduce using rule 5 (var_dec -> STR IDENT .)
    INT             reduce using rule 5 (var_dec -> STR IDENT .)
    FLT             reduce using rule 5 (var_dec -> STR IDENT .)
    STR             reduce using rule 5 (var_dec -> STR IDENT .)
    CHR             reduce using rule 5 (var_dec -> STR IDENT .)
    BLN             reduce using rule 5 (var_dec -> STR IDENT .)
    IDENT           reduce using rule 5 (var_dec -> STR IDENT .)
    FUNCTION_NAME   reduce using rule 5 (var_dec -> STR IDENT .)
    FUNCTION        reduce using rule 5 (var_dec -> STR IDENT .)
    FUNCTION_INT    reduce using rule 5 (var_dec -> STR IDENT .)
    FUNCTION_FLT    reduce using rule 5 (var_dec -> STR IDENT .)
    FUNCTION_STR    reduce using rule 5 (var_dec -> STR IDENT .)
    FUNCTION_CHR    reduce using rule 5 (var_dec -> STR IDENT .)
    FUNCTION_BLN    reduce using rule 5 (var_dec -> STR IDENT .)
    REPEAT          reduce using rule 5 (var_dec -> STR IDENT .)
    CHECK           reduce using rule 5 (var_dec -> STR IDENT .)
    DISPLAY         reduce using rule 5 (var_dec -> STR IDENT .)
    INPUT           reduce using rule 5 (var_dec -> STR IDENT .)
    SWAP            reduce using rule 5 (var_dec -> STR IDENT .)
    REVIVE          reduce using rule 5 (var_dec -> STR IDENT .)
    STOP            reduce using rule 5 (var_dec -> STR IDENT .)
    SKIP            reduce using rule 5 (var_dec -> STR IDENT .)
    MEASURE         reduce using rule 5 (var_dec -> STR IDENT .)
    GHOST           reduce using rule 5 (var_dec -> STR IDENT .)
    NEWLINE         reduce using rule 5 (var_dec -> STR IDENT .)


state 59

    (11) list_dec -> STR LBRACKET . RBRACKET IDENT

    RBRACKET        shift and go to state 98


state 60

    (6) var_dec -> CHR IDENT .

    EQ              reduce using rule 6 (var_dec -> CHR IDENT .)
    INT             reduce using rule 6 (var_dec -> CHR IDENT .)
    FLT             reduce using rule 6 (var_dec -> CHR IDENT .)
    STR             reduce using rule 6 (var_dec -> CHR IDENT .)
    CHR             reduce using rule 6 (var_dec -> CHR IDENT .)
    BLN             reduce using rule 6 (var_dec -> CHR IDENT .)
    IDENT           reduce using rule 6 (var_dec -> CHR IDENT .)
    FUNCTION_NAME   reduce using rule 6 (var_dec -> CHR IDENT .)
    FUNCTION        reduce using rule 6 (var_dec -> CHR IDENT .)
    FUNCTION_INT    reduce using rule 6 (var_dec -> CHR IDENT .)
    FUNCTION_FLT    reduce using rule 6 (var_dec -> CHR IDENT .)
    FUNCTION_STR    reduce using rule 6 (var_dec -> CHR IDENT .)
    FUNCTION_CHR    reduce using rule 6 (var_dec -> CHR IDENT .)
    FUNCTION_BLN    reduce using rule 6 (var_dec -> CHR IDENT .)
    REPEAT          reduce using rule 6 (var_dec -> CHR IDENT .)
    CHECK           reduce using rule 6 (var_dec -> CHR IDENT .)
    DISPLAY         reduce using rule 6 (var_dec -> CHR IDENT .)
    INPUT           reduce using rule 6 (var_dec -> CHR IDENT .)
    SWAP            reduce using rule 6 (var_dec -> CHR IDENT .)
    REVIVE          reduce using rule 6 (var_dec -> CHR IDENT .)
    STOP            reduce using rule 6 (var_dec -> CHR IDENT .)
    SKIP            reduce using rule 6 (var_dec -> CHR IDENT .)
    MEASURE         reduce using rule 6 (var_dec -> CHR IDENT .)
    GHOST           reduce using rule 6 (var_dec -> CHR IDENT .)
    NEWLINE         reduce using rule 6 (var_dec -> CHR IDENT .)


state 61

    (12) list_dec -> CHR LBRACKET . RBRACKET IDENT

    RBRACKET        shift and go to state 99


state 62

    (7) var_dec -> BLN IDENT .

    EQ              reduce using rule 7 (var_dec -> BLN IDENT .)
    INT             reduce using rule 7 (var_dec -> BLN IDENT .)
    FLT             reduce using rule 7 (var_dec -> BLN IDENT .)
    STR             reduce using rule 7 (var_dec -> BLN IDENT .)
    CHR             reduce using rule 7 (var_dec -> BLN IDENT .)
    BLN             reduce using rule 7 (var_dec -> BLN IDENT .)
    IDENT           reduce using rule 7 (var_dec -> BLN IDENT .)
    FUNCTION_NAME   reduce using rule 7 (var_dec -> BLN IDENT .)
    FUNCTION        reduce using rule 7 (var_dec -> BLN IDENT .)
    FUNCTION_INT    reduce using rule 7 (var_dec -> BLN IDENT .)
    FUNCTION_FLT    reduce using rule 7 (var_dec -> BLN IDENT .)
    FUNCTION_STR    reduce using rule 7 (var_dec -> BLN IDENT .)
    FUNCTION_CHR    reduce using rule 7 (var_dec -> BLN IDENT .)
    FUNCTION_BLN    reduce using rule 7 (var_dec -> BLN IDENT .)
    REPEAT          reduce using rule 7 (var_dec -> BLN IDENT .)
    CHECK           reduce using rule 7 (var_dec -> BLN IDENT .)
    DISPLAY         reduce using rule 7 (var_dec -> BLN IDENT .)
    INPUT           reduce using rule 7 (var_dec -> BLN IDENT .)
    SWAP            reduce using rule 7 (var_dec -> BLN IDENT .)
    REVIVE          reduce using rule 7 (var_dec -> BLN IDENT .)
    STOP            reduce using rule 7 (var_dec -> BLN IDENT .)
    SKIP            reduce using rule 7 (var_dec -> BLN IDENT .)
    MEASURE         reduce using rule 7 (var_dec -> BLN IDENT .)
    GHOST           reduce using rule 7 (var_dec -> BLN IDENT .)
    NEWLINE         reduce using rule 7 (var_dec -> BLN IDENT .)


state 63

    (13) list_dec -> BLN LBRACKET . RBRACKET IDENT

    RBRACKET        shift and go to state 100


state 64

    (1) program -> BIRTH global_declarations statements GHOST .

    $end            reduce using rule 1 (program -> BIRTH global_declarations statements GHOST .)


state 65

    (20) statements -> statements statement .

    GHOST           reduce using rule 20 (statements -> statements statement .)
    NEWLINE         reduce using rule 20 (statements -> statements statement .)
    INT             reduce using rule 20 (statements -> statements statement .)
    FLT             reduce using rule 20 (statements -> statements statement .)
    STR             reduce using rule 20 (statements -> statements statement .)
    CHR             reduce using rule 20 (statements -> statements statement .)
    BLN             reduce using rule 20 (statements -> statements statement .)
    IDENT           reduce using rule 20 (statements -> statements statement .)
    FUNCTION_NAME   reduce using rule 20 (statements -> statements statement .)
    FUNCTION        reduce using rule 20 (statements -> statements statement .)
    FUNCTION_INT    reduce using rule 20 (statements -> statements statement .)
    FUNCTION_FLT    reduce using rule 20 (statements -> statements statement .)
    FUNCTION_STR    reduce using rule 20 (statements -> statements statement .)
    FUNCTION_CHR    reduce using rule 20 (statements -> statements statement .)
    FUNCTION_BLN    reduce using rule 20 (statements -> statements statement .)
    REPEAT          reduce using rule 20 (statements -> statements statement .)
    CHECK           reduce using rule 20 (statements -> statements statement .)
    DISPLAY         reduce using rule 20 (statements -> statements statement .)
    INPUT           reduce using rule 20 (statements -> statements statement .)
    SWAP            reduce using rule 20 (statements -> statements statement .)
    REVIVE          reduce using rule 20 (statements -> statements statement .)
    STOP            reduce using rule 20 (statements -> statements statement .)
    SKIP            reduce using rule 20 (statements -> statements statement .)
    MEASURE         reduce using rule 20 (statements -> statements statement .)
    RBRACE          reduce using rule 20 (statements -> statements statement .)
    SHIFT           reduce using rule 20 (statements -> statements statement .)


state 66

    (21) statements -> statements NEWLINE .

    GHOST           reduce using rule 21 (statements -> statements NEWLINE .)
    NEWLINE         reduce using rule 21 (statements -> statements NEWLINE .)
    INT             reduce using rule 21 (statements -> statements NEWLINE .)
    FLT             reduce using rule 21 (statements -> statements NEWLINE .)
    STR             reduce using rule 21 (statements -> statements NEWLINE .)
    CHR             reduce using rule 21 (statements -> statements NEWLINE .)
    BLN             reduce using rule 21 (statements -> statements NEWLINE .)
    IDENT           reduce using rule 21 (statements -> statements NEWLINE .)
    FUNCTION_NAME   reduce using rule 21 (statements -> statements NEWLINE .)
    FUNCTION        reduce using rule 21 (statements -> statements NEWLINE .)
    FUNCTION_INT    reduce using rule 21 (statements -> statements NEWLINE .)
    FUNCTION_FLT    reduce using rule 21 (statements -> statements NEWLINE .)
    FUNCTION_STR    reduce using rule 21 (statements -> statements NEWLINE .)
    FUNCTION_CHR    reduce using rule 21 (statements -> statements NEWLINE .)
    FUNCTION_BLN    reduce using rule 21 (statements -> statements NEWLINE .)
    REPEAT          reduce using rule 21 (statements -> statements NEWLINE .)
    CHECK           reduce using rule 21 (statements -> statements NEWLINE .)
    DISPLAY         reduce using rule 21 (statements -> statements NEWLINE .)
    INPUT           reduce using rule 21 (statements -> statements NEWLINE .)
    SWAP            reduce using rule 21 (statements -> statements NEWLINE .)
    REVIVE          reduce using rule 21 (statements -> statements NEWLINE .)
    STOP            reduce using rule 21 (statements -> statements NEWLINE .)
    SKIP            reduce using rule 21 (statements -> statements NEWLINE .)
    MEASURE         reduce using rule 21 (statements -> statements NEWLINE .)
    RBRACE          reduce using rule 21 (statements -> statements NEWLINE .)
    SHIFT           reduce using rule 21 (statements -> statements NEWLINE .)


state 67

    (52) variable_declaration -> INT IDENT . EQ expression

    EQ              shift and go to state 101


state 68

    (57) assignment -> IDENT EQ . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 102
    function_call                  shift and go to state 93

state 69

    (53) variable_declaration -> FLT IDENT . EQ expression

    EQ              shift and go to state 103


state 70

    (54) variable_declaration -> STR IDENT . EQ expression

    EQ              shift and go to state 104


state 71

    (55) variable_declaration -> CHR IDENT . EQ expression

    EQ              shift and go to state 105


state 72

    (56) variable_declaration -> BLN IDENT . EQ expression

    EQ              shift and go to state 106


state 73

    (58) function_call -> FUNCTION_NAME LPAREN . arguments RPAREN
    (93) arguments -> . expression COMMA arguments
    (94) arguments -> . expression
    (95) arguments -> . empty
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (96) empty -> .
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    RPAREN          reduce using rule 96 (empty -> .)
    FUNCTION_NAME   shift and go to state 35

    arguments                      shift and go to state 107
    expression                     shift and go to state 108
    empty                          shift and go to state 109
    function_call                  shift and go to state 93

state 74

    (35) function_declaration -> FUNCTION FUNCTION_NAME . LPAREN parameters RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 110


state 75

    (36) function_declaration -> FUNCTION_INT FUNCTION_NAME . LPAREN parameters RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 111


state 76

    (37) function_declaration -> FUNCTION_FLT FUNCTION_NAME . LPAREN parameters RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 112


state 77

    (38) function_declaration -> FUNCTION_STR FUNCTION_NAME . LPAREN parameters RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 113


state 78

    (39) function_declaration -> FUNCTION_CHR FUNCTION_NAME . LPAREN parameters RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 114


state 79

    (40) function_declaration -> FUNCTION_BLN FUNCTION_NAME . LPAREN parameters RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 115


state 80

    (59) loop -> REPEAT LPAREN . expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 116
    function_call                  shift and go to state 93

state 81

    (60) conditional -> CHECK LPAREN . expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 117
    function_call                  shift and go to state 93

state 82

    (61) io_statement -> DISPLAY LPAREN . expression RPAREN
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 118
    function_call                  shift and go to state 93

state 83

    (62) io_statement -> INPUT LPAREN . IDENT RPAREN

    IDENT           shift and go to state 119


state 84

    (63) switch_statement -> SWAP LPAREN . expression RPAREN LBRACE case_list RBRACE
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 120
    function_call                  shift and go to state 93

state 85

    (67) return_statement -> REVIVE expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    GHOST           reduce using rule 67 (return_statement -> REVIVE expression .)
    NEWLINE         reduce using rule 67 (return_statement -> REVIVE expression .)
    INT             reduce using rule 67 (return_statement -> REVIVE expression .)
    FLT             reduce using rule 67 (return_statement -> REVIVE expression .)
    STR             reduce using rule 67 (return_statement -> REVIVE expression .)
    CHR             reduce using rule 67 (return_statement -> REVIVE expression .)
    BLN             reduce using rule 67 (return_statement -> REVIVE expression .)
    IDENT           reduce using rule 67 (return_statement -> REVIVE expression .)
    FUNCTION_NAME   reduce using rule 67 (return_statement -> REVIVE expression .)
    FUNCTION        reduce using rule 67 (return_statement -> REVIVE expression .)
    FUNCTION_INT    reduce using rule 67 (return_statement -> REVIVE expression .)
    FUNCTION_FLT    reduce using rule 67 (return_statement -> REVIVE expression .)
    FUNCTION_STR    reduce using rule 67 (return_statement -> REVIVE expression .)
    FUNCTION_CHR    reduce using rule 67 (return_statement -> REVIVE expression .)
    FUNCTION_BLN    reduce using rule 67 (return_statement -> REVIVE expression .)
    REPEAT          reduce using rule 67 (return_statement -> REVIVE expression .)
    CHECK           reduce using rule 67 (return_statement -> REVIVE expression .)
    DISPLAY         reduce using rule 67 (return_statement -> REVIVE expression .)
    INPUT           reduce using rule 67 (return_statement -> REVIVE expression .)
    SWAP            reduce using rule 67 (return_statement -> REVIVE expression .)
    REVIVE          reduce using rule 67 (return_statement -> REVIVE expression .)
    STOP            reduce using rule 67 (return_statement -> REVIVE expression .)
    SKIP            reduce using rule 67 (return_statement -> REVIVE expression .)
    MEASURE         reduce using rule 67 (return_statement -> REVIVE expression .)
    RBRACE          reduce using rule 67 (return_statement -> REVIVE expression .)
    SHIFT           reduce using rule 67 (return_statement -> REVIVE expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 86

    (85) expression -> NOT . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 135
    function_call                  shift and go to state 93

state 87

    (86) expression -> LPAREN . expression RPAREN
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 136
    function_call                  shift and go to state 93

state 88

    (87) expression -> IDENT .

    PLUS            reduce using rule 87 (expression -> IDENT .)
    MINUS           reduce using rule 87 (expression -> IDENT .)
    MULTIPLY        reduce using rule 87 (expression -> IDENT .)
    DIVISION        reduce using rule 87 (expression -> IDENT .)
    MODULO          reduce using rule 87 (expression -> IDENT .)
    EXPONENT        reduce using rule 87 (expression -> IDENT .)
    EQ_EQ           reduce using rule 87 (expression -> IDENT .)
    NOT_EQ          reduce using rule 87 (expression -> IDENT .)
    LT              reduce using rule 87 (expression -> IDENT .)
    GT              reduce using rule 87 (expression -> IDENT .)
    LT_EQ           reduce using rule 87 (expression -> IDENT .)
    GT_EQ           reduce using rule 87 (expression -> IDENT .)
    AND             reduce using rule 87 (expression -> IDENT .)
    OR              reduce using rule 87 (expression -> IDENT .)
    GHOST           reduce using rule 87 (expression -> IDENT .)
    NEWLINE         reduce using rule 87 (expression -> IDENT .)
    INT             reduce using rule 87 (expression -> IDENT .)
    FLT             reduce using rule 87 (expression -> IDENT .)
    STR             reduce using rule 87 (expression -> IDENT .)
    CHR             reduce using rule 87 (expression -> IDENT .)
    BLN             reduce using rule 87 (expression -> IDENT .)
    IDENT           reduce using rule 87 (expression -> IDENT .)
    FUNCTION_NAME   reduce using rule 87 (expression -> IDENT .)
    FUNCTION        reduce using rule 87 (expression -> IDENT .)
    FUNCTION_INT    reduce using rule 87 (expression -> IDENT .)
    FUNCTION_FLT    reduce using rule 87 (expression -> IDENT .)
    FUNCTION_STR    reduce using rule 87 (expression -> IDENT .)
    FUNCTION_CHR    reduce using rule 87 (expression -> IDENT .)
    FUNCTION_BLN    reduce using rule 87 (expression -> IDENT .)
    REPEAT          reduce using rule 87 (expression -> IDENT .)
    CHECK           reduce using rule 87 (expression -> IDENT .)
    DISPLAY         reduce using rule 87 (expression -> IDENT .)
    INPUT           reduce using rule 87 (expression -> IDENT .)
    SWAP            reduce using rule 87 (expression -> IDENT .)
    REVIVE          reduce using rule 87 (expression -> IDENT .)
    STOP            reduce using rule 87 (expression -> IDENT .)
    SKIP            reduce using rule 87 (expression -> IDENT .)
    MEASURE         reduce using rule 87 (expression -> IDENT .)
    RBRACE          reduce using rule 87 (expression -> IDENT .)
    SHIFT           reduce using rule 87 (expression -> IDENT .)
    COMMA           reduce using rule 87 (expression -> IDENT .)
    RPAREN          reduce using rule 87 (expression -> IDENT .)
    COLON           reduce using rule 87 (expression -> IDENT .)


state 89

    (88) expression -> INT_LIT .

    PLUS            reduce using rule 88 (expression -> INT_LIT .)
    MINUS           reduce using rule 88 (expression -> INT_LIT .)
    MULTIPLY        reduce using rule 88 (expression -> INT_LIT .)
    DIVISION        reduce using rule 88 (expression -> INT_LIT .)
    MODULO          reduce using rule 88 (expression -> INT_LIT .)
    EXPONENT        reduce using rule 88 (expression -> INT_LIT .)
    EQ_EQ           reduce using rule 88 (expression -> INT_LIT .)
    NOT_EQ          reduce using rule 88 (expression -> INT_LIT .)
    LT              reduce using rule 88 (expression -> INT_LIT .)
    GT              reduce using rule 88 (expression -> INT_LIT .)
    LT_EQ           reduce using rule 88 (expression -> INT_LIT .)
    GT_EQ           reduce using rule 88 (expression -> INT_LIT .)
    AND             reduce using rule 88 (expression -> INT_LIT .)
    OR              reduce using rule 88 (expression -> INT_LIT .)
    GHOST           reduce using rule 88 (expression -> INT_LIT .)
    NEWLINE         reduce using rule 88 (expression -> INT_LIT .)
    INT             reduce using rule 88 (expression -> INT_LIT .)
    FLT             reduce using rule 88 (expression -> INT_LIT .)
    STR             reduce using rule 88 (expression -> INT_LIT .)
    CHR             reduce using rule 88 (expression -> INT_LIT .)
    BLN             reduce using rule 88 (expression -> INT_LIT .)
    IDENT           reduce using rule 88 (expression -> INT_LIT .)
    FUNCTION_NAME   reduce using rule 88 (expression -> INT_LIT .)
    FUNCTION        reduce using rule 88 (expression -> INT_LIT .)
    FUNCTION_INT    reduce using rule 88 (expression -> INT_LIT .)
    FUNCTION_FLT    reduce using rule 88 (expression -> INT_LIT .)
    FUNCTION_STR    reduce using rule 88 (expression -> INT_LIT .)
    FUNCTION_CHR    reduce using rule 88 (expression -> INT_LIT .)
    FUNCTION_BLN    reduce using rule 88 (expression -> INT_LIT .)
    REPEAT          reduce using rule 88 (expression -> INT_LIT .)
    CHECK           reduce using rule 88 (expression -> INT_LIT .)
    DISPLAY         reduce using rule 88 (expression -> INT_LIT .)
    INPUT           reduce using rule 88 (expression -> INT_LIT .)
    SWAP            reduce using rule 88 (expression -> INT_LIT .)
    REVIVE          reduce using rule 88 (expression -> INT_LIT .)
    STOP            reduce using rule 88 (expression -> INT_LIT .)
    SKIP            reduce using rule 88 (expression -> INT_LIT .)
    MEASURE         reduce using rule 88 (expression -> INT_LIT .)
    RBRACE          reduce using rule 88 (expression -> INT_LIT .)
    SHIFT           reduce using rule 88 (expression -> INT_LIT .)
    COMMA           reduce using rule 88 (expression -> INT_LIT .)
    RPAREN          reduce using rule 88 (expression -> INT_LIT .)
    COLON           reduce using rule 88 (expression -> INT_LIT .)


state 90

    (89) expression -> FLT_LIT .

    PLUS            reduce using rule 89 (expression -> FLT_LIT .)
    MINUS           reduce using rule 89 (expression -> FLT_LIT .)
    MULTIPLY        reduce using rule 89 (expression -> FLT_LIT .)
    DIVISION        reduce using rule 89 (expression -> FLT_LIT .)
    MODULO          reduce using rule 89 (expression -> FLT_LIT .)
    EXPONENT        reduce using rule 89 (expression -> FLT_LIT .)
    EQ_EQ           reduce using rule 89 (expression -> FLT_LIT .)
    NOT_EQ          reduce using rule 89 (expression -> FLT_LIT .)
    LT              reduce using rule 89 (expression -> FLT_LIT .)
    GT              reduce using rule 89 (expression -> FLT_LIT .)
    LT_EQ           reduce using rule 89 (expression -> FLT_LIT .)
    GT_EQ           reduce using rule 89 (expression -> FLT_LIT .)
    AND             reduce using rule 89 (expression -> FLT_LIT .)
    OR              reduce using rule 89 (expression -> FLT_LIT .)
    GHOST           reduce using rule 89 (expression -> FLT_LIT .)
    NEWLINE         reduce using rule 89 (expression -> FLT_LIT .)
    INT             reduce using rule 89 (expression -> FLT_LIT .)
    FLT             reduce using rule 89 (expression -> FLT_LIT .)
    STR             reduce using rule 89 (expression -> FLT_LIT .)
    CHR             reduce using rule 89 (expression -> FLT_LIT .)
    BLN             reduce using rule 89 (expression -> FLT_LIT .)
    IDENT           reduce using rule 89 (expression -> FLT_LIT .)
    FUNCTION_NAME   reduce using rule 89 (expression -> FLT_LIT .)
    FUNCTION        reduce using rule 89 (expression -> FLT_LIT .)
    FUNCTION_INT    reduce using rule 89 (expression -> FLT_LIT .)
    FUNCTION_FLT    reduce using rule 89 (expression -> FLT_LIT .)
    FUNCTION_STR    reduce using rule 89 (expression -> FLT_LIT .)
    FUNCTION_CHR    reduce using rule 89 (expression -> FLT_LIT .)
    FUNCTION_BLN    reduce using rule 89 (expression -> FLT_LIT .)
    REPEAT          reduce using rule 89 (expression -> FLT_LIT .)
    CHECK           reduce using rule 89 (expression -> FLT_LIT .)
    DISPLAY         reduce using rule 89 (expression -> FLT_LIT .)
    INPUT           reduce using rule 89 (expression -> FLT_LIT .)
    SWAP            reduce using rule 89 (expression -> FLT_LIT .)
    REVIVE          reduce using rule 89 (expression -> FLT_LIT .)
    STOP            reduce using rule 89 (expression -> FLT_LIT .)
    SKIP            reduce using rule 89 (expression -> FLT_LIT .)
    MEASURE         reduce using rule 89 (expression -> FLT_LIT .)
    RBRACE          reduce using rule 89 (expression -> FLT_LIT .)
    SHIFT           reduce using rule 89 (expression -> FLT_LIT .)
    COMMA           reduce using rule 89 (expression -> FLT_LIT .)
    RPAREN          reduce using rule 89 (expression -> FLT_LIT .)
    COLON           reduce using rule 89 (expression -> FLT_LIT .)


state 91

    (90) expression -> STR_LIT .

    PLUS            reduce using rule 90 (expression -> STR_LIT .)
    MINUS           reduce using rule 90 (expression -> STR_LIT .)
    MULTIPLY        reduce using rule 90 (expression -> STR_LIT .)
    DIVISION        reduce using rule 90 (expression -> STR_LIT .)
    MODULO          reduce using rule 90 (expression -> STR_LIT .)
    EXPONENT        reduce using rule 90 (expression -> STR_LIT .)
    EQ_EQ           reduce using rule 90 (expression -> STR_LIT .)
    NOT_EQ          reduce using rule 90 (expression -> STR_LIT .)
    LT              reduce using rule 90 (expression -> STR_LIT .)
    GT              reduce using rule 90 (expression -> STR_LIT .)
    LT_EQ           reduce using rule 90 (expression -> STR_LIT .)
    GT_EQ           reduce using rule 90 (expression -> STR_LIT .)
    AND             reduce using rule 90 (expression -> STR_LIT .)
    OR              reduce using rule 90 (expression -> STR_LIT .)
    GHOST           reduce using rule 90 (expression -> STR_LIT .)
    NEWLINE         reduce using rule 90 (expression -> STR_LIT .)
    INT             reduce using rule 90 (expression -> STR_LIT .)
    FLT             reduce using rule 90 (expression -> STR_LIT .)
    STR             reduce using rule 90 (expression -> STR_LIT .)
    CHR             reduce using rule 90 (expression -> STR_LIT .)
    BLN             reduce using rule 90 (expression -> STR_LIT .)
    IDENT           reduce using rule 90 (expression -> STR_LIT .)
    FUNCTION_NAME   reduce using rule 90 (expression -> STR_LIT .)
    FUNCTION        reduce using rule 90 (expression -> STR_LIT .)
    FUNCTION_INT    reduce using rule 90 (expression -> STR_LIT .)
    FUNCTION_FLT    reduce using rule 90 (expression -> STR_LIT .)
    FUNCTION_STR    reduce using rule 90 (expression -> STR_LIT .)
    FUNCTION_CHR    reduce using rule 90 (expression -> STR_LIT .)
    FUNCTION_BLN    reduce using rule 90 (expression -> STR_LIT .)
    REPEAT          reduce using rule 90 (expression -> STR_LIT .)
    CHECK           reduce using rule 90 (expression -> STR_LIT .)
    DISPLAY         reduce using rule 90 (expression -> STR_LIT .)
    INPUT           reduce using rule 90 (expression -> STR_LIT .)
    SWAP            reduce using rule 90 (expression -> STR_LIT .)
    REVIVE          reduce using rule 90 (expression -> STR_LIT .)
    STOP            reduce using rule 90 (expression -> STR_LIT .)
    SKIP            reduce using rule 90 (expression -> STR_LIT .)
    MEASURE         reduce using rule 90 (expression -> STR_LIT .)
    RBRACE          reduce using rule 90 (expression -> STR_LIT .)
    SHIFT           reduce using rule 90 (expression -> STR_LIT .)
    COMMA           reduce using rule 90 (expression -> STR_LIT .)
    RPAREN          reduce using rule 90 (expression -> STR_LIT .)
    COLON           reduce using rule 90 (expression -> STR_LIT .)


state 92

    (91) expression -> BLN_LIT .

    PLUS            reduce using rule 91 (expression -> BLN_LIT .)
    MINUS           reduce using rule 91 (expression -> BLN_LIT .)
    MULTIPLY        reduce using rule 91 (expression -> BLN_LIT .)
    DIVISION        reduce using rule 91 (expression -> BLN_LIT .)
    MODULO          reduce using rule 91 (expression -> BLN_LIT .)
    EXPONENT        reduce using rule 91 (expression -> BLN_LIT .)
    EQ_EQ           reduce using rule 91 (expression -> BLN_LIT .)
    NOT_EQ          reduce using rule 91 (expression -> BLN_LIT .)
    LT              reduce using rule 91 (expression -> BLN_LIT .)
    GT              reduce using rule 91 (expression -> BLN_LIT .)
    LT_EQ           reduce using rule 91 (expression -> BLN_LIT .)
    GT_EQ           reduce using rule 91 (expression -> BLN_LIT .)
    AND             reduce using rule 91 (expression -> BLN_LIT .)
    OR              reduce using rule 91 (expression -> BLN_LIT .)
    GHOST           reduce using rule 91 (expression -> BLN_LIT .)
    NEWLINE         reduce using rule 91 (expression -> BLN_LIT .)
    INT             reduce using rule 91 (expression -> BLN_LIT .)
    FLT             reduce using rule 91 (expression -> BLN_LIT .)
    STR             reduce using rule 91 (expression -> BLN_LIT .)
    CHR             reduce using rule 91 (expression -> BLN_LIT .)
    BLN             reduce using rule 91 (expression -> BLN_LIT .)
    IDENT           reduce using rule 91 (expression -> BLN_LIT .)
    FUNCTION_NAME   reduce using rule 91 (expression -> BLN_LIT .)
    FUNCTION        reduce using rule 91 (expression -> BLN_LIT .)
    FUNCTION_INT    reduce using rule 91 (expression -> BLN_LIT .)
    FUNCTION_FLT    reduce using rule 91 (expression -> BLN_LIT .)
    FUNCTION_STR    reduce using rule 91 (expression -> BLN_LIT .)
    FUNCTION_CHR    reduce using rule 91 (expression -> BLN_LIT .)
    FUNCTION_BLN    reduce using rule 91 (expression -> BLN_LIT .)
    REPEAT          reduce using rule 91 (expression -> BLN_LIT .)
    CHECK           reduce using rule 91 (expression -> BLN_LIT .)
    DISPLAY         reduce using rule 91 (expression -> BLN_LIT .)
    INPUT           reduce using rule 91 (expression -> BLN_LIT .)
    SWAP            reduce using rule 91 (expression -> BLN_LIT .)
    REVIVE          reduce using rule 91 (expression -> BLN_LIT .)
    STOP            reduce using rule 91 (expression -> BLN_LIT .)
    SKIP            reduce using rule 91 (expression -> BLN_LIT .)
    MEASURE         reduce using rule 91 (expression -> BLN_LIT .)
    RBRACE          reduce using rule 91 (expression -> BLN_LIT .)
    SHIFT           reduce using rule 91 (expression -> BLN_LIT .)
    COMMA           reduce using rule 91 (expression -> BLN_LIT .)
    RPAREN          reduce using rule 91 (expression -> BLN_LIT .)
    COLON           reduce using rule 91 (expression -> BLN_LIT .)


state 93

    (92) expression -> function_call .

    PLUS            reduce using rule 92 (expression -> function_call .)
    MINUS           reduce using rule 92 (expression -> function_call .)
    MULTIPLY        reduce using rule 92 (expression -> function_call .)
    DIVISION        reduce using rule 92 (expression -> function_call .)
    MODULO          reduce using rule 92 (expression -> function_call .)
    EXPONENT        reduce using rule 92 (expression -> function_call .)
    EQ_EQ           reduce using rule 92 (expression -> function_call .)
    NOT_EQ          reduce using rule 92 (expression -> function_call .)
    LT              reduce using rule 92 (expression -> function_call .)
    GT              reduce using rule 92 (expression -> function_call .)
    LT_EQ           reduce using rule 92 (expression -> function_call .)
    GT_EQ           reduce using rule 92 (expression -> function_call .)
    AND             reduce using rule 92 (expression -> function_call .)
    OR              reduce using rule 92 (expression -> function_call .)
    GHOST           reduce using rule 92 (expression -> function_call .)
    NEWLINE         reduce using rule 92 (expression -> function_call .)
    INT             reduce using rule 92 (expression -> function_call .)
    FLT             reduce using rule 92 (expression -> function_call .)
    STR             reduce using rule 92 (expression -> function_call .)
    CHR             reduce using rule 92 (expression -> function_call .)
    BLN             reduce using rule 92 (expression -> function_call .)
    IDENT           reduce using rule 92 (expression -> function_call .)
    FUNCTION_NAME   reduce using rule 92 (expression -> function_call .)
    FUNCTION        reduce using rule 92 (expression -> function_call .)
    FUNCTION_INT    reduce using rule 92 (expression -> function_call .)
    FUNCTION_FLT    reduce using rule 92 (expression -> function_call .)
    FUNCTION_STR    reduce using rule 92 (expression -> function_call .)
    FUNCTION_CHR    reduce using rule 92 (expression -> function_call .)
    FUNCTION_BLN    reduce using rule 92 (expression -> function_call .)
    REPEAT          reduce using rule 92 (expression -> function_call .)
    CHECK           reduce using rule 92 (expression -> function_call .)
    DISPLAY         reduce using rule 92 (expression -> function_call .)
    INPUT           reduce using rule 92 (expression -> function_call .)
    SWAP            reduce using rule 92 (expression -> function_call .)
    REVIVE          reduce using rule 92 (expression -> function_call .)
    STOP            reduce using rule 92 (expression -> function_call .)
    SKIP            reduce using rule 92 (expression -> function_call .)
    MEASURE         reduce using rule 92 (expression -> function_call .)
    RBRACE          reduce using rule 92 (expression -> function_call .)
    SHIFT           reduce using rule 92 (expression -> function_call .)
    COMMA           reduce using rule 92 (expression -> function_call .)
    RPAREN          reduce using rule 92 (expression -> function_call .)
    COLON           reduce using rule 92 (expression -> function_call .)


state 94

    (70) measure_statement -> MEASURE LPAREN . expression RPAREN
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 137
    function_call                  shift and go to state 93

state 95

    (8) var_initialization -> var_dec EQ expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    INT             reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    FLT             reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    STR             reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    CHR             reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    BLN             reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    IDENT           reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    FUNCTION_NAME   reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    FUNCTION        reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    FUNCTION_INT    reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    FUNCTION_FLT    reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    FUNCTION_STR    reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    FUNCTION_CHR    reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    FUNCTION_BLN    reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    REPEAT          reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    CHECK           reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    DISPLAY         reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    INPUT           reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    SWAP            reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    REVIVE          reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    STOP            reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    SKIP            reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    MEASURE         reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    GHOST           reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    NEWLINE         reduce using rule 8 (var_initialization -> var_dec EQ expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 96

    (9) list_dec -> INT LBRACKET RBRACKET . IDENT

    IDENT           shift and go to state 138


state 97

    (10) list_dec -> FLT LBRACKET RBRACKET . IDENT

    IDENT           shift and go to state 139


state 98

    (11) list_dec -> STR LBRACKET RBRACKET . IDENT

    IDENT           shift and go to state 140


state 99

    (12) list_dec -> CHR LBRACKET RBRACKET . IDENT

    IDENT           shift and go to state 141


state 100

    (13) list_dec -> BLN LBRACKET RBRACKET . IDENT

    IDENT           shift and go to state 142


state 101

    (52) variable_declaration -> INT IDENT EQ . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 143
    function_call                  shift and go to state 93

state 102

    (57) assignment -> IDENT EQ expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    GHOST           reduce using rule 57 (assignment -> IDENT EQ expression .)
    NEWLINE         reduce using rule 57 (assignment -> IDENT EQ expression .)
    INT             reduce using rule 57 (assignment -> IDENT EQ expression .)
    FLT             reduce using rule 57 (assignment -> IDENT EQ expression .)
    STR             reduce using rule 57 (assignment -> IDENT EQ expression .)
    CHR             reduce using rule 57 (assignment -> IDENT EQ expression .)
    BLN             reduce using rule 57 (assignment -> IDENT EQ expression .)
    IDENT           reduce using rule 57 (assignment -> IDENT EQ expression .)
    FUNCTION_NAME   reduce using rule 57 (assignment -> IDENT EQ expression .)
    FUNCTION        reduce using rule 57 (assignment -> IDENT EQ expression .)
    FUNCTION_INT    reduce using rule 57 (assignment -> IDENT EQ expression .)
    FUNCTION_FLT    reduce using rule 57 (assignment -> IDENT EQ expression .)
    FUNCTION_STR    reduce using rule 57 (assignment -> IDENT EQ expression .)
    FUNCTION_CHR    reduce using rule 57 (assignment -> IDENT EQ expression .)
    FUNCTION_BLN    reduce using rule 57 (assignment -> IDENT EQ expression .)
    REPEAT          reduce using rule 57 (assignment -> IDENT EQ expression .)
    CHECK           reduce using rule 57 (assignment -> IDENT EQ expression .)
    DISPLAY         reduce using rule 57 (assignment -> IDENT EQ expression .)
    INPUT           reduce using rule 57 (assignment -> IDENT EQ expression .)
    SWAP            reduce using rule 57 (assignment -> IDENT EQ expression .)
    REVIVE          reduce using rule 57 (assignment -> IDENT EQ expression .)
    STOP            reduce using rule 57 (assignment -> IDENT EQ expression .)
    SKIP            reduce using rule 57 (assignment -> IDENT EQ expression .)
    MEASURE         reduce using rule 57 (assignment -> IDENT EQ expression .)
    RBRACE          reduce using rule 57 (assignment -> IDENT EQ expression .)
    SHIFT           reduce using rule 57 (assignment -> IDENT EQ expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 103

    (53) variable_declaration -> FLT IDENT EQ . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 144
    function_call                  shift and go to state 93

state 104

    (54) variable_declaration -> STR IDENT EQ . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 145
    function_call                  shift and go to state 93

state 105

    (55) variable_declaration -> CHR IDENT EQ . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 146
    function_call                  shift and go to state 93

state 106

    (56) variable_declaration -> BLN IDENT EQ . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 147
    function_call                  shift and go to state 93

state 107

    (58) function_call -> FUNCTION_NAME LPAREN arguments . RPAREN

    RPAREN          shift and go to state 148


state 108

    (93) arguments -> expression . COMMA arguments
    (94) arguments -> expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    COMMA           shift and go to state 149
    RPAREN          reduce using rule 94 (arguments -> expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 109

    (95) arguments -> empty .

    RPAREN          reduce using rule 95 (arguments -> empty .)


state 110

    (35) function_declaration -> FUNCTION FUNCTION_NAME LPAREN . parameters RPAREN LBRACE statements RBRACE
    (41) parameters -> . INT IDENT COMMA parameters
    (42) parameters -> . FLT IDENT COMMA parameters
    (43) parameters -> . STR IDENT COMMA parameters
    (44) parameters -> . CHR IDENT COMMA parameters
    (45) parameters -> . BLN IDENT COMMA parameters
    (46) parameters -> . INT IDENT
    (47) parameters -> . FLT IDENT
    (48) parameters -> . STR IDENT
    (49) parameters -> . CHR IDENT
    (50) parameters -> . BLN IDENT
    (51) parameters -> . empty
    (96) empty -> .

    INT             shift and go to state 151
    FLT             shift and go to state 152
    STR             shift and go to state 153
    CHR             shift and go to state 154
    BLN             shift and go to state 155
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 150
    empty                          shift and go to state 156

state 111

    (36) function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN . parameters RPAREN LBRACE statements RBRACE
    (41) parameters -> . INT IDENT COMMA parameters
    (42) parameters -> . FLT IDENT COMMA parameters
    (43) parameters -> . STR IDENT COMMA parameters
    (44) parameters -> . CHR IDENT COMMA parameters
    (45) parameters -> . BLN IDENT COMMA parameters
    (46) parameters -> . INT IDENT
    (47) parameters -> . FLT IDENT
    (48) parameters -> . STR IDENT
    (49) parameters -> . CHR IDENT
    (50) parameters -> . BLN IDENT
    (51) parameters -> . empty
    (96) empty -> .

    INT             shift and go to state 151
    FLT             shift and go to state 152
    STR             shift and go to state 153
    CHR             shift and go to state 154
    BLN             shift and go to state 155
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 157
    empty                          shift and go to state 156

state 112

    (37) function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN . parameters RPAREN LBRACE statements RBRACE
    (41) parameters -> . INT IDENT COMMA parameters
    (42) parameters -> . FLT IDENT COMMA parameters
    (43) parameters -> . STR IDENT COMMA parameters
    (44) parameters -> . CHR IDENT COMMA parameters
    (45) parameters -> . BLN IDENT COMMA parameters
    (46) parameters -> . INT IDENT
    (47) parameters -> . FLT IDENT
    (48) parameters -> . STR IDENT
    (49) parameters -> . CHR IDENT
    (50) parameters -> . BLN IDENT
    (51) parameters -> . empty
    (96) empty -> .

    INT             shift and go to state 151
    FLT             shift and go to state 152
    STR             shift and go to state 153
    CHR             shift and go to state 154
    BLN             shift and go to state 155
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 158
    empty                          shift and go to state 156

state 113

    (38) function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN . parameters RPAREN LBRACE statements RBRACE
    (41) parameters -> . INT IDENT COMMA parameters
    (42) parameters -> . FLT IDENT COMMA parameters
    (43) parameters -> . STR IDENT COMMA parameters
    (44) parameters -> . CHR IDENT COMMA parameters
    (45) parameters -> . BLN IDENT COMMA parameters
    (46) parameters -> . INT IDENT
    (47) parameters -> . FLT IDENT
    (48) parameters -> . STR IDENT
    (49) parameters -> . CHR IDENT
    (50) parameters -> . BLN IDENT
    (51) parameters -> . empty
    (96) empty -> .

    INT             shift and go to state 151
    FLT             shift and go to state 152
    STR             shift and go to state 153
    CHR             shift and go to state 154
    BLN             shift and go to state 155
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 159
    empty                          shift and go to state 156

state 114

    (39) function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN . parameters RPAREN LBRACE statements RBRACE
    (41) parameters -> . INT IDENT COMMA parameters
    (42) parameters -> . FLT IDENT COMMA parameters
    (43) parameters -> . STR IDENT COMMA parameters
    (44) parameters -> . CHR IDENT COMMA parameters
    (45) parameters -> . BLN IDENT COMMA parameters
    (46) parameters -> . INT IDENT
    (47) parameters -> . FLT IDENT
    (48) parameters -> . STR IDENT
    (49) parameters -> . CHR IDENT
    (50) parameters -> . BLN IDENT
    (51) parameters -> . empty
    (96) empty -> .

    INT             shift and go to state 151
    FLT             shift and go to state 152
    STR             shift and go to state 153
    CHR             shift and go to state 154
    BLN             shift and go to state 155
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 160
    empty                          shift and go to state 156

state 115

    (40) function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN . parameters RPAREN LBRACE statements RBRACE
    (41) parameters -> . INT IDENT COMMA parameters
    (42) parameters -> . FLT IDENT COMMA parameters
    (43) parameters -> . STR IDENT COMMA parameters
    (44) parameters -> . CHR IDENT COMMA parameters
    (45) parameters -> . BLN IDENT COMMA parameters
    (46) parameters -> . INT IDENT
    (47) parameters -> . FLT IDENT
    (48) parameters -> . STR IDENT
    (49) parameters -> . CHR IDENT
    (50) parameters -> . BLN IDENT
    (51) parameters -> . empty
    (96) empty -> .

    INT             shift and go to state 151
    FLT             shift and go to state 152
    STR             shift and go to state 153
    CHR             shift and go to state 154
    BLN             shift and go to state 155
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 161
    empty                          shift and go to state 156

state 116

    (59) loop -> REPEAT LPAREN expression . RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RPAREN          shift and go to state 162
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 117

    (60) conditional -> CHECK LPAREN expression . RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RPAREN          shift and go to state 163
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 118

    (61) io_statement -> DISPLAY LPAREN expression . RPAREN
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RPAREN          shift and go to state 164
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 119

    (62) io_statement -> INPUT LPAREN IDENT . RPAREN

    RPAREN          shift and go to state 165


state 120

    (63) switch_statement -> SWAP LPAREN expression . RPAREN LBRACE case_list RBRACE
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RPAREN          shift and go to state 166
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 121

    (71) expression -> expression PLUS . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 167
    function_call                  shift and go to state 93

state 122

    (72) expression -> expression MINUS . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 168
    function_call                  shift and go to state 93

state 123

    (73) expression -> expression MULTIPLY . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 169
    function_call                  shift and go to state 93

state 124

    (74) expression -> expression DIVISION . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 170
    function_call                  shift and go to state 93

state 125

    (75) expression -> expression MODULO . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 171
    function_call                  shift and go to state 93

state 126

    (76) expression -> expression EXPONENT . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 172
    function_call                  shift and go to state 93

state 127

    (77) expression -> expression EQ_EQ . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 173
    function_call                  shift and go to state 93

state 128

    (78) expression -> expression NOT_EQ . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 174
    function_call                  shift and go to state 93

state 129

    (79) expression -> expression LT . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 175
    function_call                  shift and go to state 93

state 130

    (80) expression -> expression GT . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 176
    function_call                  shift and go to state 93

state 131

    (81) expression -> expression LT_EQ . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 177
    function_call                  shift and go to state 93

state 132

    (82) expression -> expression GT_EQ . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 178
    function_call                  shift and go to state 93

state 133

    (83) expression -> expression AND . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 179
    function_call                  shift and go to state 93

state 134

    (84) expression -> expression OR . expression
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 180
    function_call                  shift and go to state 93

state 135

    (85) expression -> NOT expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 85 (expression -> NOT expression .)
    NEWLINE         reduce using rule 85 (expression -> NOT expression .)
    INT             reduce using rule 85 (expression -> NOT expression .)
    FLT             reduce using rule 85 (expression -> NOT expression .)
    STR             reduce using rule 85 (expression -> NOT expression .)
    CHR             reduce using rule 85 (expression -> NOT expression .)
    BLN             reduce using rule 85 (expression -> NOT expression .)
    IDENT           reduce using rule 85 (expression -> NOT expression .)
    FUNCTION_NAME   reduce using rule 85 (expression -> NOT expression .)
    FUNCTION        reduce using rule 85 (expression -> NOT expression .)
    FUNCTION_INT    reduce using rule 85 (expression -> NOT expression .)
    FUNCTION_FLT    reduce using rule 85 (expression -> NOT expression .)
    FUNCTION_STR    reduce using rule 85 (expression -> NOT expression .)
    FUNCTION_CHR    reduce using rule 85 (expression -> NOT expression .)
    FUNCTION_BLN    reduce using rule 85 (expression -> NOT expression .)
    REPEAT          reduce using rule 85 (expression -> NOT expression .)
    CHECK           reduce using rule 85 (expression -> NOT expression .)
    DISPLAY         reduce using rule 85 (expression -> NOT expression .)
    INPUT           reduce using rule 85 (expression -> NOT expression .)
    SWAP            reduce using rule 85 (expression -> NOT expression .)
    REVIVE          reduce using rule 85 (expression -> NOT expression .)
    STOP            reduce using rule 85 (expression -> NOT expression .)
    SKIP            reduce using rule 85 (expression -> NOT expression .)
    MEASURE         reduce using rule 85 (expression -> NOT expression .)
    RBRACE          reduce using rule 85 (expression -> NOT expression .)
    SHIFT           reduce using rule 85 (expression -> NOT expression .)
    COMMA           reduce using rule 85 (expression -> NOT expression .)
    RPAREN          reduce using rule 85 (expression -> NOT expression .)
    COLON           reduce using rule 85 (expression -> NOT expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 85 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 85 (expression -> NOT expression .) ]
  ! MULTIPLY        [ reduce using rule 85 (expression -> NOT expression .) ]
  ! DIVISION        [ reduce using rule 85 (expression -> NOT expression .) ]
  ! MODULO          [ reduce using rule 85 (expression -> NOT expression .) ]
  ! EXPONENT        [ reduce using rule 85 (expression -> NOT expression .) ]
  ! EQ_EQ           [ reduce using rule 85 (expression -> NOT expression .) ]
  ! NOT_EQ          [ reduce using rule 85 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 85 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 85 (expression -> NOT expression .) ]
  ! LT_EQ           [ reduce using rule 85 (expression -> NOT expression .) ]
  ! GT_EQ           [ reduce using rule 85 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 85 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 85 (expression -> NOT expression .) ]


state 136

    (86) expression -> LPAREN expression . RPAREN
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RPAREN          shift and go to state 181
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 137

    (70) measure_statement -> MEASURE LPAREN expression . RPAREN
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RPAREN          shift and go to state 182
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 138

    (9) list_dec -> INT LBRACKET RBRACKET IDENT .

    INT             reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    FLT             reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    STR             reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    CHR             reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    BLN             reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    IDENT           reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    FUNCTION_NAME   reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    FUNCTION        reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    FUNCTION_INT    reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    FUNCTION_FLT    reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    FUNCTION_STR    reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    FUNCTION_CHR    reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    FUNCTION_BLN    reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    REPEAT          reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    CHECK           reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    DISPLAY         reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    INPUT           reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    SWAP            reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    REVIVE          reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    STOP            reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    SKIP            reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    MEASURE         reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    GHOST           reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)
    NEWLINE         reduce using rule 9 (list_dec -> INT LBRACKET RBRACKET IDENT .)


state 139

    (10) list_dec -> FLT LBRACKET RBRACKET IDENT .

    INT             reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    FLT             reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    STR             reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    CHR             reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    BLN             reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    IDENT           reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    FUNCTION_NAME   reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    FUNCTION        reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    FUNCTION_INT    reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    FUNCTION_FLT    reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    FUNCTION_STR    reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    FUNCTION_CHR    reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    FUNCTION_BLN    reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    REPEAT          reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    CHECK           reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    DISPLAY         reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    INPUT           reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    SWAP            reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    REVIVE          reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    STOP            reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    SKIP            reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    MEASURE         reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    GHOST           reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)
    NEWLINE         reduce using rule 10 (list_dec -> FLT LBRACKET RBRACKET IDENT .)


state 140

    (11) list_dec -> STR LBRACKET RBRACKET IDENT .

    INT             reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    FLT             reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    STR             reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    CHR             reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    BLN             reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    IDENT           reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    FUNCTION_NAME   reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    FUNCTION        reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    FUNCTION_INT    reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    FUNCTION_FLT    reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    FUNCTION_STR    reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    FUNCTION_CHR    reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    FUNCTION_BLN    reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    REPEAT          reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    CHECK           reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    DISPLAY         reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    INPUT           reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    SWAP            reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    REVIVE          reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    STOP            reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    SKIP            reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    MEASURE         reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    GHOST           reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)
    NEWLINE         reduce using rule 11 (list_dec -> STR LBRACKET RBRACKET IDENT .)


state 141

    (12) list_dec -> CHR LBRACKET RBRACKET IDENT .

    INT             reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    FLT             reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    STR             reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    CHR             reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    BLN             reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    IDENT           reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    FUNCTION_NAME   reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    FUNCTION        reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    FUNCTION_INT    reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    FUNCTION_FLT    reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    FUNCTION_STR    reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    FUNCTION_CHR    reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    FUNCTION_BLN    reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    REPEAT          reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    CHECK           reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    DISPLAY         reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    INPUT           reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    SWAP            reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    REVIVE          reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    STOP            reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    SKIP            reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    MEASURE         reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    GHOST           reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)
    NEWLINE         reduce using rule 12 (list_dec -> CHR LBRACKET RBRACKET IDENT .)


state 142

    (13) list_dec -> BLN LBRACKET RBRACKET IDENT .

    INT             reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    FLT             reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    STR             reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    CHR             reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    BLN             reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    IDENT           reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    FUNCTION_NAME   reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    FUNCTION        reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    FUNCTION_INT    reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    FUNCTION_FLT    reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    FUNCTION_STR    reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    FUNCTION_CHR    reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    FUNCTION_BLN    reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    REPEAT          reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    CHECK           reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    DISPLAY         reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    INPUT           reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    SWAP            reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    REVIVE          reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    STOP            reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    SKIP            reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    MEASURE         reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    GHOST           reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)
    NEWLINE         reduce using rule 13 (list_dec -> BLN LBRACKET RBRACKET IDENT .)


state 143

    (52) variable_declaration -> INT IDENT EQ expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    GHOST           reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    NEWLINE         reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    INT             reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    FLT             reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    STR             reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    CHR             reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    BLN             reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    IDENT           reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    FUNCTION_NAME   reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    FUNCTION        reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    FUNCTION_INT    reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    FUNCTION_FLT    reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    FUNCTION_STR    reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    FUNCTION_CHR    reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    FUNCTION_BLN    reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    REPEAT          reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    CHECK           reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    DISPLAY         reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    INPUT           reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    SWAP            reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    REVIVE          reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    STOP            reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    SKIP            reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    MEASURE         reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    RBRACE          reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    SHIFT           reduce using rule 52 (variable_declaration -> INT IDENT EQ expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 144

    (53) variable_declaration -> FLT IDENT EQ expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    GHOST           reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    NEWLINE         reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    INT             reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    FLT             reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    STR             reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    CHR             reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    BLN             reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    IDENT           reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    FUNCTION_NAME   reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    FUNCTION        reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    FUNCTION_INT    reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    FUNCTION_FLT    reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    FUNCTION_STR    reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    FUNCTION_CHR    reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    FUNCTION_BLN    reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    REPEAT          reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    CHECK           reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    DISPLAY         reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    INPUT           reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    SWAP            reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    REVIVE          reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    STOP            reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    SKIP            reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    MEASURE         reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    RBRACE          reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    SHIFT           reduce using rule 53 (variable_declaration -> FLT IDENT EQ expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 145

    (54) variable_declaration -> STR IDENT EQ expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    GHOST           reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    NEWLINE         reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    INT             reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    FLT             reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    STR             reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    CHR             reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    BLN             reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    IDENT           reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    FUNCTION_NAME   reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    FUNCTION        reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    FUNCTION_INT    reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    FUNCTION_FLT    reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    FUNCTION_STR    reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    FUNCTION_CHR    reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    FUNCTION_BLN    reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    REPEAT          reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    CHECK           reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    DISPLAY         reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    INPUT           reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    SWAP            reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    REVIVE          reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    STOP            reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    SKIP            reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    MEASURE         reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    RBRACE          reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    SHIFT           reduce using rule 54 (variable_declaration -> STR IDENT EQ expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 146

    (55) variable_declaration -> CHR IDENT EQ expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    GHOST           reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    NEWLINE         reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    INT             reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    FLT             reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    STR             reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    CHR             reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    BLN             reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    IDENT           reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    FUNCTION_NAME   reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    FUNCTION        reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    FUNCTION_INT    reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    FUNCTION_FLT    reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    FUNCTION_STR    reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    FUNCTION_CHR    reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    FUNCTION_BLN    reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    REPEAT          reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    CHECK           reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    DISPLAY         reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    INPUT           reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    SWAP            reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    REVIVE          reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    STOP            reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    SKIP            reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    MEASURE         reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    RBRACE          reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    SHIFT           reduce using rule 55 (variable_declaration -> CHR IDENT EQ expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 147

    (56) variable_declaration -> BLN IDENT EQ expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    GHOST           reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    NEWLINE         reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    INT             reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    FLT             reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    STR             reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    CHR             reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    BLN             reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    IDENT           reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    FUNCTION_NAME   reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    FUNCTION        reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    FUNCTION_INT    reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    FUNCTION_FLT    reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    FUNCTION_STR    reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    FUNCTION_CHR    reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    FUNCTION_BLN    reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    REPEAT          reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    CHECK           reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    DISPLAY         reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    INPUT           reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    SWAP            reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    REVIVE          reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    STOP            reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    SKIP            reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    MEASURE         reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    RBRACE          reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    SHIFT           reduce using rule 56 (variable_declaration -> BLN IDENT EQ expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 148

    (58) function_call -> FUNCTION_NAME LPAREN arguments RPAREN .

    GHOST           reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    NEWLINE         reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    INT             reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    FLT             reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    STR             reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    CHR             reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    BLN             reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    IDENT           reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    FUNCTION_NAME   reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    FUNCTION        reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    FUNCTION_INT    reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    FUNCTION_FLT    reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    FUNCTION_STR    reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    FUNCTION_CHR    reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    FUNCTION_BLN    reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    REPEAT          reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    CHECK           reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    DISPLAY         reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    INPUT           reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    SWAP            reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    REVIVE          reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    STOP            reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    SKIP            reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    MEASURE         reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    PLUS            reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    MINUS           reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    MULTIPLY        reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    DIVISION        reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    MODULO          reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    EXPONENT        reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    EQ_EQ           reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    NOT_EQ          reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    LT              reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    GT              reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    LT_EQ           reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    GT_EQ           reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    AND             reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    OR              reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    SHIFT           reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    COMMA           reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)
    COLON           reduce using rule 58 (function_call -> FUNCTION_NAME LPAREN arguments RPAREN .)


state 149

    (93) arguments -> expression COMMA . arguments
    (93) arguments -> . expression COMMA arguments
    (94) arguments -> . expression
    (95) arguments -> . empty
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (96) empty -> .
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    RPAREN          reduce using rule 96 (empty -> .)
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 108
    arguments                      shift and go to state 183
    empty                          shift and go to state 109
    function_call                  shift and go to state 93

state 150

    (35) function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 184


state 151

    (41) parameters -> INT . IDENT COMMA parameters
    (46) parameters -> INT . IDENT

    IDENT           shift and go to state 185


state 152

    (42) parameters -> FLT . IDENT COMMA parameters
    (47) parameters -> FLT . IDENT

    IDENT           shift and go to state 186


state 153

    (43) parameters -> STR . IDENT COMMA parameters
    (48) parameters -> STR . IDENT

    IDENT           shift and go to state 187


state 154

    (44) parameters -> CHR . IDENT COMMA parameters
    (49) parameters -> CHR . IDENT

    IDENT           shift and go to state 188


state 155

    (45) parameters -> BLN . IDENT COMMA parameters
    (50) parameters -> BLN . IDENT

    IDENT           shift and go to state 189


state 156

    (51) parameters -> empty .

    RPAREN          reduce using rule 51 (parameters -> empty .)


state 157

    (36) function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 190


state 158

    (37) function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 191


state 159

    (38) function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 192


state 160

    (39) function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 193


state 161

    (40) function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 194


state 162

    (59) loop -> REPEAT LPAREN expression RPAREN . LBRACE statements RBRACE UNTIL LPAREN expression RPAREN

    LBRACE          shift and go to state 195


state 163

    (60) conditional -> CHECK LPAREN expression RPAREN . LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN

    LBRACE          shift and go to state 196


state 164

    (61) io_statement -> DISPLAY LPAREN expression RPAREN .

    GHOST           reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    INT             reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    FLT             reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    STR             reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    CHR             reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    BLN             reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    IDENT           reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    FUNCTION_NAME   reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    FUNCTION_INT    reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    FUNCTION_FLT    reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    FUNCTION_STR    reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    FUNCTION_CHR    reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    FUNCTION_BLN    reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    REPEAT          reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    CHECK           reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    DISPLAY         reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    INPUT           reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    SWAP            reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    REVIVE          reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    STOP            reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    SKIP            reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    MEASURE         reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    RBRACE          reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)
    SHIFT           reduce using rule 61 (io_statement -> DISPLAY LPAREN expression RPAREN .)


state 165

    (62) io_statement -> INPUT LPAREN IDENT RPAREN .

    GHOST           reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    NEWLINE         reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    INT             reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    FLT             reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    STR             reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    CHR             reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    BLN             reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    IDENT           reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    FUNCTION_NAME   reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    FUNCTION        reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    FUNCTION_INT    reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    FUNCTION_FLT    reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    FUNCTION_STR    reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    FUNCTION_CHR    reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    FUNCTION_BLN    reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    REPEAT          reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    CHECK           reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    DISPLAY         reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    INPUT           reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    SWAP            reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    REVIVE          reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    STOP            reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    SKIP            reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    MEASURE         reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    RBRACE          reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)
    SHIFT           reduce using rule 62 (io_statement -> INPUT LPAREN IDENT RPAREN .)


state 166

    (63) switch_statement -> SWAP LPAREN expression RPAREN . LBRACE case_list RBRACE

    LBRACE          shift and go to state 197


state 167

    (71) expression -> expression PLUS expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 71 (expression -> expression PLUS expression .)
    NEWLINE         reduce using rule 71 (expression -> expression PLUS expression .)
    INT             reduce using rule 71 (expression -> expression PLUS expression .)
    FLT             reduce using rule 71 (expression -> expression PLUS expression .)
    STR             reduce using rule 71 (expression -> expression PLUS expression .)
    CHR             reduce using rule 71 (expression -> expression PLUS expression .)
    BLN             reduce using rule 71 (expression -> expression PLUS expression .)
    IDENT           reduce using rule 71 (expression -> expression PLUS expression .)
    FUNCTION_NAME   reduce using rule 71 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 71 (expression -> expression PLUS expression .)
    FUNCTION_INT    reduce using rule 71 (expression -> expression PLUS expression .)
    FUNCTION_FLT    reduce using rule 71 (expression -> expression PLUS expression .)
    FUNCTION_STR    reduce using rule 71 (expression -> expression PLUS expression .)
    FUNCTION_CHR    reduce using rule 71 (expression -> expression PLUS expression .)
    FUNCTION_BLN    reduce using rule 71 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 71 (expression -> expression PLUS expression .)
    CHECK           reduce using rule 71 (expression -> expression PLUS expression .)
    DISPLAY         reduce using rule 71 (expression -> expression PLUS expression .)
    INPUT           reduce using rule 71 (expression -> expression PLUS expression .)
    SWAP            reduce using rule 71 (expression -> expression PLUS expression .)
    REVIVE          reduce using rule 71 (expression -> expression PLUS expression .)
    STOP            reduce using rule 71 (expression -> expression PLUS expression .)
    SKIP            reduce using rule 71 (expression -> expression PLUS expression .)
    MEASURE         reduce using rule 71 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 71 (expression -> expression PLUS expression .)
    SHIFT           reduce using rule 71 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 71 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 71 (expression -> expression PLUS expression .)
    COLON           reduce using rule 71 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 71 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 71 (expression -> expression PLUS expression .) ]
  ! MULTIPLY        [ reduce using rule 71 (expression -> expression PLUS expression .) ]
  ! DIVISION        [ reduce using rule 71 (expression -> expression PLUS expression .) ]
  ! MODULO          [ reduce using rule 71 (expression -> expression PLUS expression .) ]
  ! EXPONENT        [ reduce using rule 71 (expression -> expression PLUS expression .) ]
  ! EQ_EQ           [ reduce using rule 71 (expression -> expression PLUS expression .) ]
  ! NOT_EQ          [ reduce using rule 71 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 71 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 71 (expression -> expression PLUS expression .) ]
  ! LT_EQ           [ reduce using rule 71 (expression -> expression PLUS expression .) ]
  ! GT_EQ           [ reduce using rule 71 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 71 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 71 (expression -> expression PLUS expression .) ]


state 168

    (72) expression -> expression MINUS expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 72 (expression -> expression MINUS expression .)
    NEWLINE         reduce using rule 72 (expression -> expression MINUS expression .)
    INT             reduce using rule 72 (expression -> expression MINUS expression .)
    FLT             reduce using rule 72 (expression -> expression MINUS expression .)
    STR             reduce using rule 72 (expression -> expression MINUS expression .)
    CHR             reduce using rule 72 (expression -> expression MINUS expression .)
    BLN             reduce using rule 72 (expression -> expression MINUS expression .)
    IDENT           reduce using rule 72 (expression -> expression MINUS expression .)
    FUNCTION_NAME   reduce using rule 72 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 72 (expression -> expression MINUS expression .)
    FUNCTION_INT    reduce using rule 72 (expression -> expression MINUS expression .)
    FUNCTION_FLT    reduce using rule 72 (expression -> expression MINUS expression .)
    FUNCTION_STR    reduce using rule 72 (expression -> expression MINUS expression .)
    FUNCTION_CHR    reduce using rule 72 (expression -> expression MINUS expression .)
    FUNCTION_BLN    reduce using rule 72 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 72 (expression -> expression MINUS expression .)
    CHECK           reduce using rule 72 (expression -> expression MINUS expression .)
    DISPLAY         reduce using rule 72 (expression -> expression MINUS expression .)
    INPUT           reduce using rule 72 (expression -> expression MINUS expression .)
    SWAP            reduce using rule 72 (expression -> expression MINUS expression .)
    REVIVE          reduce using rule 72 (expression -> expression MINUS expression .)
    STOP            reduce using rule 72 (expression -> expression MINUS expression .)
    SKIP            reduce using rule 72 (expression -> expression MINUS expression .)
    MEASURE         reduce using rule 72 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 72 (expression -> expression MINUS expression .)
    SHIFT           reduce using rule 72 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 72 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 72 (expression -> expression MINUS expression .)
    COLON           reduce using rule 72 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 72 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 72 (expression -> expression MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 72 (expression -> expression MINUS expression .) ]
  ! DIVISION        [ reduce using rule 72 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 72 (expression -> expression MINUS expression .) ]
  ! EXPONENT        [ reduce using rule 72 (expression -> expression MINUS expression .) ]
  ! EQ_EQ           [ reduce using rule 72 (expression -> expression MINUS expression .) ]
  ! NOT_EQ          [ reduce using rule 72 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 72 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 72 (expression -> expression MINUS expression .) ]
  ! LT_EQ           [ reduce using rule 72 (expression -> expression MINUS expression .) ]
  ! GT_EQ           [ reduce using rule 72 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 72 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 72 (expression -> expression MINUS expression .) ]


state 169

    (73) expression -> expression MULTIPLY expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 73 (expression -> expression MULTIPLY expression .)
    NEWLINE         reduce using rule 73 (expression -> expression MULTIPLY expression .)
    INT             reduce using rule 73 (expression -> expression MULTIPLY expression .)
    FLT             reduce using rule 73 (expression -> expression MULTIPLY expression .)
    STR             reduce using rule 73 (expression -> expression MULTIPLY expression .)
    CHR             reduce using rule 73 (expression -> expression MULTIPLY expression .)
    BLN             reduce using rule 73 (expression -> expression MULTIPLY expression .)
    IDENT           reduce using rule 73 (expression -> expression MULTIPLY expression .)
    FUNCTION_NAME   reduce using rule 73 (expression -> expression MULTIPLY expression .)
    FUNCTION        reduce using rule 73 (expression -> expression MULTIPLY expression .)
    FUNCTION_INT    reduce using rule 73 (expression -> expression MULTIPLY expression .)
    FUNCTION_FLT    reduce using rule 73 (expression -> expression MULTIPLY expression .)
    FUNCTION_STR    reduce using rule 73 (expression -> expression MULTIPLY expression .)
    FUNCTION_CHR    reduce using rule 73 (expression -> expression MULTIPLY expression .)
    FUNCTION_BLN    reduce using rule 73 (expression -> expression MULTIPLY expression .)
    REPEAT          reduce using rule 73 (expression -> expression MULTIPLY expression .)
    CHECK           reduce using rule 73 (expression -> expression MULTIPLY expression .)
    DISPLAY         reduce using rule 73 (expression -> expression MULTIPLY expression .)
    INPUT           reduce using rule 73 (expression -> expression MULTIPLY expression .)
    SWAP            reduce using rule 73 (expression -> expression MULTIPLY expression .)
    REVIVE          reduce using rule 73 (expression -> expression MULTIPLY expression .)
    STOP            reduce using rule 73 (expression -> expression MULTIPLY expression .)
    SKIP            reduce using rule 73 (expression -> expression MULTIPLY expression .)
    MEASURE         reduce using rule 73 (expression -> expression MULTIPLY expression .)
    RBRACE          reduce using rule 73 (expression -> expression MULTIPLY expression .)
    SHIFT           reduce using rule 73 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 73 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 73 (expression -> expression MULTIPLY expression .)
    COLON           reduce using rule 73 (expression -> expression MULTIPLY expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]
  ! MINUS           [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]
  ! MULTIPLY        [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]
  ! DIVISION        [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]
  ! MODULO          [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]
  ! EXPONENT        [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]
  ! EQ_EQ           [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]
  ! NOT_EQ          [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]
  ! LT              [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]
  ! GT              [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]
  ! LT_EQ           [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]
  ! GT_EQ           [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]
  ! AND             [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]
  ! OR              [ reduce using rule 73 (expression -> expression MULTIPLY expression .) ]


state 170

    (74) expression -> expression DIVISION expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 74 (expression -> expression DIVISION expression .)
    NEWLINE         reduce using rule 74 (expression -> expression DIVISION expression .)
    INT             reduce using rule 74 (expression -> expression DIVISION expression .)
    FLT             reduce using rule 74 (expression -> expression DIVISION expression .)
    STR             reduce using rule 74 (expression -> expression DIVISION expression .)
    CHR             reduce using rule 74 (expression -> expression DIVISION expression .)
    BLN             reduce using rule 74 (expression -> expression DIVISION expression .)
    IDENT           reduce using rule 74 (expression -> expression DIVISION expression .)
    FUNCTION_NAME   reduce using rule 74 (expression -> expression DIVISION expression .)
    FUNCTION        reduce using rule 74 (expression -> expression DIVISION expression .)
    FUNCTION_INT    reduce using rule 74 (expression -> expression DIVISION expression .)
    FUNCTION_FLT    reduce using rule 74 (expression -> expression DIVISION expression .)
    FUNCTION_STR    reduce using rule 74 (expression -> expression DIVISION expression .)
    FUNCTION_CHR    reduce using rule 74 (expression -> expression DIVISION expression .)
    FUNCTION_BLN    reduce using rule 74 (expression -> expression DIVISION expression .)
    REPEAT          reduce using rule 74 (expression -> expression DIVISION expression .)
    CHECK           reduce using rule 74 (expression -> expression DIVISION expression .)
    DISPLAY         reduce using rule 74 (expression -> expression DIVISION expression .)
    INPUT           reduce using rule 74 (expression -> expression DIVISION expression .)
    SWAP            reduce using rule 74 (expression -> expression DIVISION expression .)
    REVIVE          reduce using rule 74 (expression -> expression DIVISION expression .)
    STOP            reduce using rule 74 (expression -> expression DIVISION expression .)
    SKIP            reduce using rule 74 (expression -> expression DIVISION expression .)
    MEASURE         reduce using rule 74 (expression -> expression DIVISION expression .)
    RBRACE          reduce using rule 74 (expression -> expression DIVISION expression .)
    SHIFT           reduce using rule 74 (expression -> expression DIVISION expression .)
    COMMA           reduce using rule 74 (expression -> expression DIVISION expression .)
    RPAREN          reduce using rule 74 (expression -> expression DIVISION expression .)
    COLON           reduce using rule 74 (expression -> expression DIVISION expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 74 (expression -> expression DIVISION expression .) ]
  ! MINUS           [ reduce using rule 74 (expression -> expression DIVISION expression .) ]
  ! MULTIPLY        [ reduce using rule 74 (expression -> expression DIVISION expression .) ]
  ! DIVISION        [ reduce using rule 74 (expression -> expression DIVISION expression .) ]
  ! MODULO          [ reduce using rule 74 (expression -> expression DIVISION expression .) ]
  ! EXPONENT        [ reduce using rule 74 (expression -> expression DIVISION expression .) ]
  ! EQ_EQ           [ reduce using rule 74 (expression -> expression DIVISION expression .) ]
  ! NOT_EQ          [ reduce using rule 74 (expression -> expression DIVISION expression .) ]
  ! LT              [ reduce using rule 74 (expression -> expression DIVISION expression .) ]
  ! GT              [ reduce using rule 74 (expression -> expression DIVISION expression .) ]
  ! LT_EQ           [ reduce using rule 74 (expression -> expression DIVISION expression .) ]
  ! GT_EQ           [ reduce using rule 74 (expression -> expression DIVISION expression .) ]
  ! AND             [ reduce using rule 74 (expression -> expression DIVISION expression .) ]
  ! OR              [ reduce using rule 74 (expression -> expression DIVISION expression .) ]


state 171

    (75) expression -> expression MODULO expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 75 (expression -> expression MODULO expression .)
    NEWLINE         reduce using rule 75 (expression -> expression MODULO expression .)
    INT             reduce using rule 75 (expression -> expression MODULO expression .)
    FLT             reduce using rule 75 (expression -> expression MODULO expression .)
    STR             reduce using rule 75 (expression -> expression MODULO expression .)
    CHR             reduce using rule 75 (expression -> expression MODULO expression .)
    BLN             reduce using rule 75 (expression -> expression MODULO expression .)
    IDENT           reduce using rule 75 (expression -> expression MODULO expression .)
    FUNCTION_NAME   reduce using rule 75 (expression -> expression MODULO expression .)
    FUNCTION        reduce using rule 75 (expression -> expression MODULO expression .)
    FUNCTION_INT    reduce using rule 75 (expression -> expression MODULO expression .)
    FUNCTION_FLT    reduce using rule 75 (expression -> expression MODULO expression .)
    FUNCTION_STR    reduce using rule 75 (expression -> expression MODULO expression .)
    FUNCTION_CHR    reduce using rule 75 (expression -> expression MODULO expression .)
    FUNCTION_BLN    reduce using rule 75 (expression -> expression MODULO expression .)
    REPEAT          reduce using rule 75 (expression -> expression MODULO expression .)
    CHECK           reduce using rule 75 (expression -> expression MODULO expression .)
    DISPLAY         reduce using rule 75 (expression -> expression MODULO expression .)
    INPUT           reduce using rule 75 (expression -> expression MODULO expression .)
    SWAP            reduce using rule 75 (expression -> expression MODULO expression .)
    REVIVE          reduce using rule 75 (expression -> expression MODULO expression .)
    STOP            reduce using rule 75 (expression -> expression MODULO expression .)
    SKIP            reduce using rule 75 (expression -> expression MODULO expression .)
    MEASURE         reduce using rule 75 (expression -> expression MODULO expression .)
    RBRACE          reduce using rule 75 (expression -> expression MODULO expression .)
    SHIFT           reduce using rule 75 (expression -> expression MODULO expression .)
    COMMA           reduce using rule 75 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 75 (expression -> expression MODULO expression .)
    COLON           reduce using rule 75 (expression -> expression MODULO expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 75 (expression -> expression MODULO expression .) ]
  ! MINUS           [ reduce using rule 75 (expression -> expression MODULO expression .) ]
  ! MULTIPLY        [ reduce using rule 75 (expression -> expression MODULO expression .) ]
  ! DIVISION        [ reduce using rule 75 (expression -> expression MODULO expression .) ]
  ! MODULO          [ reduce using rule 75 (expression -> expression MODULO expression .) ]
  ! EXPONENT        [ reduce using rule 75 (expression -> expression MODULO expression .) ]
  ! EQ_EQ           [ reduce using rule 75 (expression -> expression MODULO expression .) ]
  ! NOT_EQ          [ reduce using rule 75 (expression -> expression MODULO expression .) ]
  ! LT              [ reduce using rule 75 (expression -> expression MODULO expression .) ]
  ! GT              [ reduce using rule 75 (expression -> expression MODULO expression .) ]
  ! LT_EQ           [ reduce using rule 75 (expression -> expression MODULO expression .) ]
  ! GT_EQ           [ reduce using rule 75 (expression -> expression MODULO expression .) ]
  ! AND             [ reduce using rule 75 (expression -> expression MODULO expression .) ]
  ! OR              [ reduce using rule 75 (expression -> expression MODULO expression .) ]


state 172

    (76) expression -> expression EXPONENT expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 76 (expression -> expression EXPONENT expression .)
    NEWLINE         reduce using rule 76 (expression -> expression EXPONENT expression .)
    INT             reduce using rule 76 (expression -> expression EXPONENT expression .)
    FLT             reduce using rule 76 (expression -> expression EXPONENT expression .)
    STR             reduce using rule 76 (expression -> expression EXPONENT expression .)
    CHR             reduce using rule 76 (expression -> expression EXPONENT expression .)
    BLN             reduce using rule 76 (expression -> expression EXPONENT expression .)
    IDENT           reduce using rule 76 (expression -> expression EXPONENT expression .)
    FUNCTION_NAME   reduce using rule 76 (expression -> expression EXPONENT expression .)
    FUNCTION        reduce using rule 76 (expression -> expression EXPONENT expression .)
    FUNCTION_INT    reduce using rule 76 (expression -> expression EXPONENT expression .)
    FUNCTION_FLT    reduce using rule 76 (expression -> expression EXPONENT expression .)
    FUNCTION_STR    reduce using rule 76 (expression -> expression EXPONENT expression .)
    FUNCTION_CHR    reduce using rule 76 (expression -> expression EXPONENT expression .)
    FUNCTION_BLN    reduce using rule 76 (expression -> expression EXPONENT expression .)
    REPEAT          reduce using rule 76 (expression -> expression EXPONENT expression .)
    CHECK           reduce using rule 76 (expression -> expression EXPONENT expression .)
    DISPLAY         reduce using rule 76 (expression -> expression EXPONENT expression .)
    INPUT           reduce using rule 76 (expression -> expression EXPONENT expression .)
    SWAP            reduce using rule 76 (expression -> expression EXPONENT expression .)
    REVIVE          reduce using rule 76 (expression -> expression EXPONENT expression .)
    STOP            reduce using rule 76 (expression -> expression EXPONENT expression .)
    SKIP            reduce using rule 76 (expression -> expression EXPONENT expression .)
    MEASURE         reduce using rule 76 (expression -> expression EXPONENT expression .)
    RBRACE          reduce using rule 76 (expression -> expression EXPONENT expression .)
    SHIFT           reduce using rule 76 (expression -> expression EXPONENT expression .)
    COMMA           reduce using rule 76 (expression -> expression EXPONENT expression .)
    RPAREN          reduce using rule 76 (expression -> expression EXPONENT expression .)
    COLON           reduce using rule 76 (expression -> expression EXPONENT expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]
  ! MINUS           [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]
  ! MULTIPLY        [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]
  ! DIVISION        [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]
  ! MODULO          [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]
  ! EXPONENT        [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]
  ! EQ_EQ           [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]
  ! NOT_EQ          [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]
  ! LT              [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]
  ! GT              [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]
  ! LT_EQ           [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]
  ! GT_EQ           [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]
  ! AND             [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]
  ! OR              [ reduce using rule 76 (expression -> expression EXPONENT expression .) ]


state 173

    (77) expression -> expression EQ_EQ expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 77 (expression -> expression EQ_EQ expression .)
    NEWLINE         reduce using rule 77 (expression -> expression EQ_EQ expression .)
    INT             reduce using rule 77 (expression -> expression EQ_EQ expression .)
    FLT             reduce using rule 77 (expression -> expression EQ_EQ expression .)
    STR             reduce using rule 77 (expression -> expression EQ_EQ expression .)
    CHR             reduce using rule 77 (expression -> expression EQ_EQ expression .)
    BLN             reduce using rule 77 (expression -> expression EQ_EQ expression .)
    IDENT           reduce using rule 77 (expression -> expression EQ_EQ expression .)
    FUNCTION_NAME   reduce using rule 77 (expression -> expression EQ_EQ expression .)
    FUNCTION        reduce using rule 77 (expression -> expression EQ_EQ expression .)
    FUNCTION_INT    reduce using rule 77 (expression -> expression EQ_EQ expression .)
    FUNCTION_FLT    reduce using rule 77 (expression -> expression EQ_EQ expression .)
    FUNCTION_STR    reduce using rule 77 (expression -> expression EQ_EQ expression .)
    FUNCTION_CHR    reduce using rule 77 (expression -> expression EQ_EQ expression .)
    FUNCTION_BLN    reduce using rule 77 (expression -> expression EQ_EQ expression .)
    REPEAT          reduce using rule 77 (expression -> expression EQ_EQ expression .)
    CHECK           reduce using rule 77 (expression -> expression EQ_EQ expression .)
    DISPLAY         reduce using rule 77 (expression -> expression EQ_EQ expression .)
    INPUT           reduce using rule 77 (expression -> expression EQ_EQ expression .)
    SWAP            reduce using rule 77 (expression -> expression EQ_EQ expression .)
    REVIVE          reduce using rule 77 (expression -> expression EQ_EQ expression .)
    STOP            reduce using rule 77 (expression -> expression EQ_EQ expression .)
    SKIP            reduce using rule 77 (expression -> expression EQ_EQ expression .)
    MEASURE         reduce using rule 77 (expression -> expression EQ_EQ expression .)
    RBRACE          reduce using rule 77 (expression -> expression EQ_EQ expression .)
    SHIFT           reduce using rule 77 (expression -> expression EQ_EQ expression .)
    COMMA           reduce using rule 77 (expression -> expression EQ_EQ expression .)
    RPAREN          reduce using rule 77 (expression -> expression EQ_EQ expression .)
    COLON           reduce using rule 77 (expression -> expression EQ_EQ expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]
  ! MINUS           [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]
  ! DIVISION        [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]
  ! MODULO          [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]
  ! EQ_EQ           [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]
  ! NOT_EQ          [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]
  ! LT              [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]
  ! GT              [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]
  ! LT_EQ           [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]
  ! GT_EQ           [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]
  ! AND             [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]
  ! OR              [ reduce using rule 77 (expression -> expression EQ_EQ expression .) ]


state 174

    (78) expression -> expression NOT_EQ expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 78 (expression -> expression NOT_EQ expression .)
    NEWLINE         reduce using rule 78 (expression -> expression NOT_EQ expression .)
    INT             reduce using rule 78 (expression -> expression NOT_EQ expression .)
    FLT             reduce using rule 78 (expression -> expression NOT_EQ expression .)
    STR             reduce using rule 78 (expression -> expression NOT_EQ expression .)
    CHR             reduce using rule 78 (expression -> expression NOT_EQ expression .)
    BLN             reduce using rule 78 (expression -> expression NOT_EQ expression .)
    IDENT           reduce using rule 78 (expression -> expression NOT_EQ expression .)
    FUNCTION_NAME   reduce using rule 78 (expression -> expression NOT_EQ expression .)
    FUNCTION        reduce using rule 78 (expression -> expression NOT_EQ expression .)
    FUNCTION_INT    reduce using rule 78 (expression -> expression NOT_EQ expression .)
    FUNCTION_FLT    reduce using rule 78 (expression -> expression NOT_EQ expression .)
    FUNCTION_STR    reduce using rule 78 (expression -> expression NOT_EQ expression .)
    FUNCTION_CHR    reduce using rule 78 (expression -> expression NOT_EQ expression .)
    FUNCTION_BLN    reduce using rule 78 (expression -> expression NOT_EQ expression .)
    REPEAT          reduce using rule 78 (expression -> expression NOT_EQ expression .)
    CHECK           reduce using rule 78 (expression -> expression NOT_EQ expression .)
    DISPLAY         reduce using rule 78 (expression -> expression NOT_EQ expression .)
    INPUT           reduce using rule 78 (expression -> expression NOT_EQ expression .)
    SWAP            reduce using rule 78 (expression -> expression NOT_EQ expression .)
    REVIVE          reduce using rule 78 (expression -> expression NOT_EQ expression .)
    STOP            reduce using rule 78 (expression -> expression NOT_EQ expression .)
    SKIP            reduce using rule 78 (expression -> expression NOT_EQ expression .)
    MEASURE         reduce using rule 78 (expression -> expression NOT_EQ expression .)
    RBRACE          reduce using rule 78 (expression -> expression NOT_EQ expression .)
    SHIFT           reduce using rule 78 (expression -> expression NOT_EQ expression .)
    COMMA           reduce using rule 78 (expression -> expression NOT_EQ expression .)
    RPAREN          reduce using rule 78 (expression -> expression NOT_EQ expression .)
    COLON           reduce using rule 78 (expression -> expression NOT_EQ expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]
  ! MINUS           [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]
  ! DIVISION        [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]
  ! MODULO          [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]
  ! EQ_EQ           [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]
  ! NOT_EQ          [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]
  ! LT              [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]
  ! GT              [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]
  ! LT_EQ           [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]
  ! GT_EQ           [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]
  ! AND             [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]
  ! OR              [ reduce using rule 78 (expression -> expression NOT_EQ expression .) ]


state 175

    (79) expression -> expression LT expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 79 (expression -> expression LT expression .)
    NEWLINE         reduce using rule 79 (expression -> expression LT expression .)
    INT             reduce using rule 79 (expression -> expression LT expression .)
    FLT             reduce using rule 79 (expression -> expression LT expression .)
    STR             reduce using rule 79 (expression -> expression LT expression .)
    CHR             reduce using rule 79 (expression -> expression LT expression .)
    BLN             reduce using rule 79 (expression -> expression LT expression .)
    IDENT           reduce using rule 79 (expression -> expression LT expression .)
    FUNCTION_NAME   reduce using rule 79 (expression -> expression LT expression .)
    FUNCTION        reduce using rule 79 (expression -> expression LT expression .)
    FUNCTION_INT    reduce using rule 79 (expression -> expression LT expression .)
    FUNCTION_FLT    reduce using rule 79 (expression -> expression LT expression .)
    FUNCTION_STR    reduce using rule 79 (expression -> expression LT expression .)
    FUNCTION_CHR    reduce using rule 79 (expression -> expression LT expression .)
    FUNCTION_BLN    reduce using rule 79 (expression -> expression LT expression .)
    REPEAT          reduce using rule 79 (expression -> expression LT expression .)
    CHECK           reduce using rule 79 (expression -> expression LT expression .)
    DISPLAY         reduce using rule 79 (expression -> expression LT expression .)
    INPUT           reduce using rule 79 (expression -> expression LT expression .)
    SWAP            reduce using rule 79 (expression -> expression LT expression .)
    REVIVE          reduce using rule 79 (expression -> expression LT expression .)
    STOP            reduce using rule 79 (expression -> expression LT expression .)
    SKIP            reduce using rule 79 (expression -> expression LT expression .)
    MEASURE         reduce using rule 79 (expression -> expression LT expression .)
    RBRACE          reduce using rule 79 (expression -> expression LT expression .)
    SHIFT           reduce using rule 79 (expression -> expression LT expression .)
    COMMA           reduce using rule 79 (expression -> expression LT expression .)
    RPAREN          reduce using rule 79 (expression -> expression LT expression .)
    COLON           reduce using rule 79 (expression -> expression LT expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 79 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 79 (expression -> expression LT expression .) ]
  ! MULTIPLY        [ reduce using rule 79 (expression -> expression LT expression .) ]
  ! DIVISION        [ reduce using rule 79 (expression -> expression LT expression .) ]
  ! MODULO          [ reduce using rule 79 (expression -> expression LT expression .) ]
  ! EXPONENT        [ reduce using rule 79 (expression -> expression LT expression .) ]
  ! EQ_EQ           [ reduce using rule 79 (expression -> expression LT expression .) ]
  ! NOT_EQ          [ reduce using rule 79 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 79 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 79 (expression -> expression LT expression .) ]
  ! LT_EQ           [ reduce using rule 79 (expression -> expression LT expression .) ]
  ! GT_EQ           [ reduce using rule 79 (expression -> expression LT expression .) ]
  ! AND             [ reduce using rule 79 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 79 (expression -> expression LT expression .) ]


state 176

    (80) expression -> expression GT expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 80 (expression -> expression GT expression .)
    NEWLINE         reduce using rule 80 (expression -> expression GT expression .)
    INT             reduce using rule 80 (expression -> expression GT expression .)
    FLT             reduce using rule 80 (expression -> expression GT expression .)
    STR             reduce using rule 80 (expression -> expression GT expression .)
    CHR             reduce using rule 80 (expression -> expression GT expression .)
    BLN             reduce using rule 80 (expression -> expression GT expression .)
    IDENT           reduce using rule 80 (expression -> expression GT expression .)
    FUNCTION_NAME   reduce using rule 80 (expression -> expression GT expression .)
    FUNCTION        reduce using rule 80 (expression -> expression GT expression .)
    FUNCTION_INT    reduce using rule 80 (expression -> expression GT expression .)
    FUNCTION_FLT    reduce using rule 80 (expression -> expression GT expression .)
    FUNCTION_STR    reduce using rule 80 (expression -> expression GT expression .)
    FUNCTION_CHR    reduce using rule 80 (expression -> expression GT expression .)
    FUNCTION_BLN    reduce using rule 80 (expression -> expression GT expression .)
    REPEAT          reduce using rule 80 (expression -> expression GT expression .)
    CHECK           reduce using rule 80 (expression -> expression GT expression .)
    DISPLAY         reduce using rule 80 (expression -> expression GT expression .)
    INPUT           reduce using rule 80 (expression -> expression GT expression .)
    SWAP            reduce using rule 80 (expression -> expression GT expression .)
    REVIVE          reduce using rule 80 (expression -> expression GT expression .)
    STOP            reduce using rule 80 (expression -> expression GT expression .)
    SKIP            reduce using rule 80 (expression -> expression GT expression .)
    MEASURE         reduce using rule 80 (expression -> expression GT expression .)
    RBRACE          reduce using rule 80 (expression -> expression GT expression .)
    SHIFT           reduce using rule 80 (expression -> expression GT expression .)
    COMMA           reduce using rule 80 (expression -> expression GT expression .)
    RPAREN          reduce using rule 80 (expression -> expression GT expression .)
    COLON           reduce using rule 80 (expression -> expression GT expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 80 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 80 (expression -> expression GT expression .) ]
  ! MULTIPLY        [ reduce using rule 80 (expression -> expression GT expression .) ]
  ! DIVISION        [ reduce using rule 80 (expression -> expression GT expression .) ]
  ! MODULO          [ reduce using rule 80 (expression -> expression GT expression .) ]
  ! EXPONENT        [ reduce using rule 80 (expression -> expression GT expression .) ]
  ! EQ_EQ           [ reduce using rule 80 (expression -> expression GT expression .) ]
  ! NOT_EQ          [ reduce using rule 80 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 80 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 80 (expression -> expression GT expression .) ]
  ! LT_EQ           [ reduce using rule 80 (expression -> expression GT expression .) ]
  ! GT_EQ           [ reduce using rule 80 (expression -> expression GT expression .) ]
  ! AND             [ reduce using rule 80 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 80 (expression -> expression GT expression .) ]


state 177

    (81) expression -> expression LT_EQ expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 81 (expression -> expression LT_EQ expression .)
    NEWLINE         reduce using rule 81 (expression -> expression LT_EQ expression .)
    INT             reduce using rule 81 (expression -> expression LT_EQ expression .)
    FLT             reduce using rule 81 (expression -> expression LT_EQ expression .)
    STR             reduce using rule 81 (expression -> expression LT_EQ expression .)
    CHR             reduce using rule 81 (expression -> expression LT_EQ expression .)
    BLN             reduce using rule 81 (expression -> expression LT_EQ expression .)
    IDENT           reduce using rule 81 (expression -> expression LT_EQ expression .)
    FUNCTION_NAME   reduce using rule 81 (expression -> expression LT_EQ expression .)
    FUNCTION        reduce using rule 81 (expression -> expression LT_EQ expression .)
    FUNCTION_INT    reduce using rule 81 (expression -> expression LT_EQ expression .)
    FUNCTION_FLT    reduce using rule 81 (expression -> expression LT_EQ expression .)
    FUNCTION_STR    reduce using rule 81 (expression -> expression LT_EQ expression .)
    FUNCTION_CHR    reduce using rule 81 (expression -> expression LT_EQ expression .)
    FUNCTION_BLN    reduce using rule 81 (expression -> expression LT_EQ expression .)
    REPEAT          reduce using rule 81 (expression -> expression LT_EQ expression .)
    CHECK           reduce using rule 81 (expression -> expression LT_EQ expression .)
    DISPLAY         reduce using rule 81 (expression -> expression LT_EQ expression .)
    INPUT           reduce using rule 81 (expression -> expression LT_EQ expression .)
    SWAP            reduce using rule 81 (expression -> expression LT_EQ expression .)
    REVIVE          reduce using rule 81 (expression -> expression LT_EQ expression .)
    STOP            reduce using rule 81 (expression -> expression LT_EQ expression .)
    SKIP            reduce using rule 81 (expression -> expression LT_EQ expression .)
    MEASURE         reduce using rule 81 (expression -> expression LT_EQ expression .)
    RBRACE          reduce using rule 81 (expression -> expression LT_EQ expression .)
    SHIFT           reduce using rule 81 (expression -> expression LT_EQ expression .)
    COMMA           reduce using rule 81 (expression -> expression LT_EQ expression .)
    RPAREN          reduce using rule 81 (expression -> expression LT_EQ expression .)
    COLON           reduce using rule 81 (expression -> expression LT_EQ expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]
  ! MINUS           [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]
  ! DIVISION        [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]
  ! MODULO          [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]
  ! EQ_EQ           [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]
  ! NOT_EQ          [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]
  ! LT              [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]
  ! GT              [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]
  ! LT_EQ           [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]
  ! GT_EQ           [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]
  ! AND             [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]
  ! OR              [ reduce using rule 81 (expression -> expression LT_EQ expression .) ]


state 178

    (82) expression -> expression GT_EQ expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 82 (expression -> expression GT_EQ expression .)
    NEWLINE         reduce using rule 82 (expression -> expression GT_EQ expression .)
    INT             reduce using rule 82 (expression -> expression GT_EQ expression .)
    FLT             reduce using rule 82 (expression -> expression GT_EQ expression .)
    STR             reduce using rule 82 (expression -> expression GT_EQ expression .)
    CHR             reduce using rule 82 (expression -> expression GT_EQ expression .)
    BLN             reduce using rule 82 (expression -> expression GT_EQ expression .)
    IDENT           reduce using rule 82 (expression -> expression GT_EQ expression .)
    FUNCTION_NAME   reduce using rule 82 (expression -> expression GT_EQ expression .)
    FUNCTION        reduce using rule 82 (expression -> expression GT_EQ expression .)
    FUNCTION_INT    reduce using rule 82 (expression -> expression GT_EQ expression .)
    FUNCTION_FLT    reduce using rule 82 (expression -> expression GT_EQ expression .)
    FUNCTION_STR    reduce using rule 82 (expression -> expression GT_EQ expression .)
    FUNCTION_CHR    reduce using rule 82 (expression -> expression GT_EQ expression .)
    FUNCTION_BLN    reduce using rule 82 (expression -> expression GT_EQ expression .)
    REPEAT          reduce using rule 82 (expression -> expression GT_EQ expression .)
    CHECK           reduce using rule 82 (expression -> expression GT_EQ expression .)
    DISPLAY         reduce using rule 82 (expression -> expression GT_EQ expression .)
    INPUT           reduce using rule 82 (expression -> expression GT_EQ expression .)
    SWAP            reduce using rule 82 (expression -> expression GT_EQ expression .)
    REVIVE          reduce using rule 82 (expression -> expression GT_EQ expression .)
    STOP            reduce using rule 82 (expression -> expression GT_EQ expression .)
    SKIP            reduce using rule 82 (expression -> expression GT_EQ expression .)
    MEASURE         reduce using rule 82 (expression -> expression GT_EQ expression .)
    RBRACE          reduce using rule 82 (expression -> expression GT_EQ expression .)
    SHIFT           reduce using rule 82 (expression -> expression GT_EQ expression .)
    COMMA           reduce using rule 82 (expression -> expression GT_EQ expression .)
    RPAREN          reduce using rule 82 (expression -> expression GT_EQ expression .)
    COLON           reduce using rule 82 (expression -> expression GT_EQ expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]
  ! MINUS           [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]
  ! DIVISION        [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]
  ! MODULO          [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]
  ! EXPONENT        [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]
  ! EQ_EQ           [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]
  ! NOT_EQ          [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]
  ! LT              [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]
  ! GT              [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]
  ! LT_EQ           [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]
  ! GT_EQ           [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]
  ! AND             [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]
  ! OR              [ reduce using rule 82 (expression -> expression GT_EQ expression .) ]


state 179

    (83) expression -> expression AND expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 83 (expression -> expression AND expression .)
    NEWLINE         reduce using rule 83 (expression -> expression AND expression .)
    INT             reduce using rule 83 (expression -> expression AND expression .)
    FLT             reduce using rule 83 (expression -> expression AND expression .)
    STR             reduce using rule 83 (expression -> expression AND expression .)
    CHR             reduce using rule 83 (expression -> expression AND expression .)
    BLN             reduce using rule 83 (expression -> expression AND expression .)
    IDENT           reduce using rule 83 (expression -> expression AND expression .)
    FUNCTION_NAME   reduce using rule 83 (expression -> expression AND expression .)
    FUNCTION        reduce using rule 83 (expression -> expression AND expression .)
    FUNCTION_INT    reduce using rule 83 (expression -> expression AND expression .)
    FUNCTION_FLT    reduce using rule 83 (expression -> expression AND expression .)
    FUNCTION_STR    reduce using rule 83 (expression -> expression AND expression .)
    FUNCTION_CHR    reduce using rule 83 (expression -> expression AND expression .)
    FUNCTION_BLN    reduce using rule 83 (expression -> expression AND expression .)
    REPEAT          reduce using rule 83 (expression -> expression AND expression .)
    CHECK           reduce using rule 83 (expression -> expression AND expression .)
    DISPLAY         reduce using rule 83 (expression -> expression AND expression .)
    INPUT           reduce using rule 83 (expression -> expression AND expression .)
    SWAP            reduce using rule 83 (expression -> expression AND expression .)
    REVIVE          reduce using rule 83 (expression -> expression AND expression .)
    STOP            reduce using rule 83 (expression -> expression AND expression .)
    SKIP            reduce using rule 83 (expression -> expression AND expression .)
    MEASURE         reduce using rule 83 (expression -> expression AND expression .)
    RBRACE          reduce using rule 83 (expression -> expression AND expression .)
    SHIFT           reduce using rule 83 (expression -> expression AND expression .)
    COMMA           reduce using rule 83 (expression -> expression AND expression .)
    RPAREN          reduce using rule 83 (expression -> expression AND expression .)
    COLON           reduce using rule 83 (expression -> expression AND expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! DIVISION        [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! EXPONENT        [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! EQ_EQ           [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! NOT_EQ          [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! LT_EQ           [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! GT_EQ           [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 83 (expression -> expression AND expression .) ]


state 180

    (84) expression -> expression OR expression .
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for EQ_EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT_EQ resolved as shift
  ! shift/reduce conflict for GT_EQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GHOST           reduce using rule 84 (expression -> expression OR expression .)
    NEWLINE         reduce using rule 84 (expression -> expression OR expression .)
    INT             reduce using rule 84 (expression -> expression OR expression .)
    FLT             reduce using rule 84 (expression -> expression OR expression .)
    STR             reduce using rule 84 (expression -> expression OR expression .)
    CHR             reduce using rule 84 (expression -> expression OR expression .)
    BLN             reduce using rule 84 (expression -> expression OR expression .)
    IDENT           reduce using rule 84 (expression -> expression OR expression .)
    FUNCTION_NAME   reduce using rule 84 (expression -> expression OR expression .)
    FUNCTION        reduce using rule 84 (expression -> expression OR expression .)
    FUNCTION_INT    reduce using rule 84 (expression -> expression OR expression .)
    FUNCTION_FLT    reduce using rule 84 (expression -> expression OR expression .)
    FUNCTION_STR    reduce using rule 84 (expression -> expression OR expression .)
    FUNCTION_CHR    reduce using rule 84 (expression -> expression OR expression .)
    FUNCTION_BLN    reduce using rule 84 (expression -> expression OR expression .)
    REPEAT          reduce using rule 84 (expression -> expression OR expression .)
    CHECK           reduce using rule 84 (expression -> expression OR expression .)
    DISPLAY         reduce using rule 84 (expression -> expression OR expression .)
    INPUT           reduce using rule 84 (expression -> expression OR expression .)
    SWAP            reduce using rule 84 (expression -> expression OR expression .)
    REVIVE          reduce using rule 84 (expression -> expression OR expression .)
    STOP            reduce using rule 84 (expression -> expression OR expression .)
    SKIP            reduce using rule 84 (expression -> expression OR expression .)
    MEASURE         reduce using rule 84 (expression -> expression OR expression .)
    RBRACE          reduce using rule 84 (expression -> expression OR expression .)
    SHIFT           reduce using rule 84 (expression -> expression OR expression .)
    COMMA           reduce using rule 84 (expression -> expression OR expression .)
    RPAREN          reduce using rule 84 (expression -> expression OR expression .)
    COLON           reduce using rule 84 (expression -> expression OR expression .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134

  ! PLUS            [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! DIVISION        [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! EXPONENT        [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! EQ_EQ           [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! NOT_EQ          [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! LT_EQ           [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! GT_EQ           [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 84 (expression -> expression OR expression .) ]


state 181

    (86) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    DIVISION        reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    EQ_EQ           reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    NOT_EQ          reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    LT_EQ           reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    GT_EQ           reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    GHOST           reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    INT             reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    FLT             reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    STR             reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    CHR             reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    BLN             reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    IDENT           reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    FUNCTION_NAME   reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    FUNCTION_INT    reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    FUNCTION_FLT    reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    FUNCTION_STR    reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    FUNCTION_CHR    reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    FUNCTION_BLN    reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    REPEAT          reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    CHECK           reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    DISPLAY         reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    INPUT           reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    SWAP            reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    REVIVE          reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    STOP            reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    SKIP            reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    MEASURE         reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    SHIFT           reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 86 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 86 (expression -> LPAREN expression RPAREN .)


state 182

    (70) measure_statement -> MEASURE LPAREN expression RPAREN .

    GHOST           reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    INT             reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    FLT             reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    STR             reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    CHR             reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    BLN             reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    IDENT           reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    FUNCTION_NAME   reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    FUNCTION_INT    reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    FUNCTION_FLT    reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    FUNCTION_STR    reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    FUNCTION_CHR    reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    FUNCTION_BLN    reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    REPEAT          reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    CHECK           reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    DISPLAY         reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    INPUT           reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    SWAP            reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    REVIVE          reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    STOP            reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    SKIP            reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    MEASURE         reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    RBRACE          reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)
    SHIFT           reduce using rule 70 (measure_statement -> MEASURE LPAREN expression RPAREN .)


state 183

    (93) arguments -> expression COMMA arguments .

    RPAREN          reduce using rule 93 (arguments -> expression COMMA arguments .)


state 184

    (35) function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 198


state 185

    (41) parameters -> INT IDENT . COMMA parameters
    (46) parameters -> INT IDENT .

    COMMA           shift and go to state 199
    RPAREN          reduce using rule 46 (parameters -> INT IDENT .)


state 186

    (42) parameters -> FLT IDENT . COMMA parameters
    (47) parameters -> FLT IDENT .

    COMMA           shift and go to state 200
    RPAREN          reduce using rule 47 (parameters -> FLT IDENT .)


state 187

    (43) parameters -> STR IDENT . COMMA parameters
    (48) parameters -> STR IDENT .

    COMMA           shift and go to state 201
    RPAREN          reduce using rule 48 (parameters -> STR IDENT .)


state 188

    (44) parameters -> CHR IDENT . COMMA parameters
    (49) parameters -> CHR IDENT .

    COMMA           shift and go to state 202
    RPAREN          reduce using rule 49 (parameters -> CHR IDENT .)


state 189

    (45) parameters -> BLN IDENT . COMMA parameters
    (50) parameters -> BLN IDENT .

    COMMA           shift and go to state 203
    RPAREN          reduce using rule 50 (parameters -> BLN IDENT .)


state 190

    (36) function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 204


state 191

    (37) function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 205


state 192

    (38) function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 206


state 193

    (39) function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 207


state 194

    (40) function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 208


state 195

    (59) loop -> REPEAT LPAREN expression RPAREN LBRACE . statements RBRACE UNTIL LPAREN expression RPAREN
    (19) statements -> . statement
    (20) statements -> . statements statement
    (21) statements -> . statements NEWLINE
    (22) statements -> . empty
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (96) empty -> .
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for BLN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for FUNCTION_NAME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION_INT resolved as shift
  ! shift/reduce conflict for FUNCTION_FLT resolved as shift
  ! shift/reduce conflict for FUNCTION_STR resolved as shift
  ! shift/reduce conflict for FUNCTION_CHR resolved as shift
  ! shift/reduce conflict for FUNCTION_BLN resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SWAP resolved as shift
  ! shift/reduce conflict for REVIVE resolved as shift
  ! shift/reduce conflict for STOP resolved as shift
  ! shift/reduce conflict for SKIP resolved as shift
  ! shift/reduce conflict for MEASURE resolved as shift
    RBRACE          reduce using rule 96 (empty -> .)
    NEWLINE         reduce using rule 96 (empty -> .)
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

  ! INT             [ reduce using rule 96 (empty -> .) ]
  ! FLT             [ reduce using rule 96 (empty -> .) ]
  ! STR             [ reduce using rule 96 (empty -> .) ]
  ! CHR             [ reduce using rule 96 (empty -> .) ]
  ! BLN             [ reduce using rule 96 (empty -> .) ]
  ! IDENT           [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_NAME   [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_INT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_FLT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_STR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_CHR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_BLN    [ reduce using rule 96 (empty -> .) ]
  ! REPEAT          [ reduce using rule 96 (empty -> .) ]
  ! CHECK           [ reduce using rule 96 (empty -> .) ]
  ! DISPLAY         [ reduce using rule 96 (empty -> .) ]
  ! INPUT           [ reduce using rule 96 (empty -> .) ]
  ! SWAP            [ reduce using rule 96 (empty -> .) ]
  ! REVIVE          [ reduce using rule 96 (empty -> .) ]
  ! STOP            [ reduce using rule 96 (empty -> .) ]
  ! SKIP            [ reduce using rule 96 (empty -> .) ]
  ! MEASURE         [ reduce using rule 96 (empty -> .) ]

    statements                     shift and go to state 209
    statement                      shift and go to state 15
    empty                          shift and go to state 16
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 196

    (60) conditional -> CHECK LPAREN expression RPAREN LBRACE . statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (19) statements -> . statement
    (20) statements -> . statements statement
    (21) statements -> . statements NEWLINE
    (22) statements -> . empty
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (96) empty -> .
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for BLN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for FUNCTION_NAME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION_INT resolved as shift
  ! shift/reduce conflict for FUNCTION_FLT resolved as shift
  ! shift/reduce conflict for FUNCTION_STR resolved as shift
  ! shift/reduce conflict for FUNCTION_CHR resolved as shift
  ! shift/reduce conflict for FUNCTION_BLN resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SWAP resolved as shift
  ! shift/reduce conflict for REVIVE resolved as shift
  ! shift/reduce conflict for STOP resolved as shift
  ! shift/reduce conflict for SKIP resolved as shift
  ! shift/reduce conflict for MEASURE resolved as shift
    RBRACE          reduce using rule 96 (empty -> .)
    NEWLINE         reduce using rule 96 (empty -> .)
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

  ! INT             [ reduce using rule 96 (empty -> .) ]
  ! FLT             [ reduce using rule 96 (empty -> .) ]
  ! STR             [ reduce using rule 96 (empty -> .) ]
  ! CHR             [ reduce using rule 96 (empty -> .) ]
  ! BLN             [ reduce using rule 96 (empty -> .) ]
  ! IDENT           [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_NAME   [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_INT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_FLT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_STR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_CHR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_BLN    [ reduce using rule 96 (empty -> .) ]
  ! REPEAT          [ reduce using rule 96 (empty -> .) ]
  ! CHECK           [ reduce using rule 96 (empty -> .) ]
  ! DISPLAY         [ reduce using rule 96 (empty -> .) ]
  ! INPUT           [ reduce using rule 96 (empty -> .) ]
  ! SWAP            [ reduce using rule 96 (empty -> .) ]
  ! REVIVE          [ reduce using rule 96 (empty -> .) ]
  ! STOP            [ reduce using rule 96 (empty -> .) ]
  ! SKIP            [ reduce using rule 96 (empty -> .) ]
  ! MEASURE         [ reduce using rule 96 (empty -> .) ]

    statements                     shift and go to state 210
    statement                      shift and go to state 15
    empty                          shift and go to state 16
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 197

    (63) switch_statement -> SWAP LPAREN expression RPAREN LBRACE . case_list RBRACE
    (64) case_list -> . case
    (65) case_list -> . case_list case
    (66) case -> . SHIFT expression COLON statements

    SHIFT           shift and go to state 213

    case_list                      shift and go to state 211
    case                           shift and go to state 212

state 198

    (35) function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE . statements RBRACE
    (19) statements -> . statement
    (20) statements -> . statements statement
    (21) statements -> . statements NEWLINE
    (22) statements -> . empty
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (96) empty -> .
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for BLN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for FUNCTION_NAME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION_INT resolved as shift
  ! shift/reduce conflict for FUNCTION_FLT resolved as shift
  ! shift/reduce conflict for FUNCTION_STR resolved as shift
  ! shift/reduce conflict for FUNCTION_CHR resolved as shift
  ! shift/reduce conflict for FUNCTION_BLN resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SWAP resolved as shift
  ! shift/reduce conflict for REVIVE resolved as shift
  ! shift/reduce conflict for STOP resolved as shift
  ! shift/reduce conflict for SKIP resolved as shift
  ! shift/reduce conflict for MEASURE resolved as shift
    RBRACE          reduce using rule 96 (empty -> .)
    NEWLINE         reduce using rule 96 (empty -> .)
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

  ! INT             [ reduce using rule 96 (empty -> .) ]
  ! FLT             [ reduce using rule 96 (empty -> .) ]
  ! STR             [ reduce using rule 96 (empty -> .) ]
  ! CHR             [ reduce using rule 96 (empty -> .) ]
  ! BLN             [ reduce using rule 96 (empty -> .) ]
  ! IDENT           [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_NAME   [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_INT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_FLT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_STR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_CHR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_BLN    [ reduce using rule 96 (empty -> .) ]
  ! REPEAT          [ reduce using rule 96 (empty -> .) ]
  ! CHECK           [ reduce using rule 96 (empty -> .) ]
  ! DISPLAY         [ reduce using rule 96 (empty -> .) ]
  ! INPUT           [ reduce using rule 96 (empty -> .) ]
  ! SWAP            [ reduce using rule 96 (empty -> .) ]
  ! REVIVE          [ reduce using rule 96 (empty -> .) ]
  ! STOP            [ reduce using rule 96 (empty -> .) ]
  ! SKIP            [ reduce using rule 96 (empty -> .) ]
  ! MEASURE         [ reduce using rule 96 (empty -> .) ]

    statements                     shift and go to state 214
    statement                      shift and go to state 15
    empty                          shift and go to state 16
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 199

    (41) parameters -> INT IDENT COMMA . parameters
    (41) parameters -> . INT IDENT COMMA parameters
    (42) parameters -> . FLT IDENT COMMA parameters
    (43) parameters -> . STR IDENT COMMA parameters
    (44) parameters -> . CHR IDENT COMMA parameters
    (45) parameters -> . BLN IDENT COMMA parameters
    (46) parameters -> . INT IDENT
    (47) parameters -> . FLT IDENT
    (48) parameters -> . STR IDENT
    (49) parameters -> . CHR IDENT
    (50) parameters -> . BLN IDENT
    (51) parameters -> . empty
    (96) empty -> .

    INT             shift and go to state 151
    FLT             shift and go to state 152
    STR             shift and go to state 153
    CHR             shift and go to state 154
    BLN             shift and go to state 155
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 215
    empty                          shift and go to state 156

state 200

    (42) parameters -> FLT IDENT COMMA . parameters
    (41) parameters -> . INT IDENT COMMA parameters
    (42) parameters -> . FLT IDENT COMMA parameters
    (43) parameters -> . STR IDENT COMMA parameters
    (44) parameters -> . CHR IDENT COMMA parameters
    (45) parameters -> . BLN IDENT COMMA parameters
    (46) parameters -> . INT IDENT
    (47) parameters -> . FLT IDENT
    (48) parameters -> . STR IDENT
    (49) parameters -> . CHR IDENT
    (50) parameters -> . BLN IDENT
    (51) parameters -> . empty
    (96) empty -> .

    INT             shift and go to state 151
    FLT             shift and go to state 152
    STR             shift and go to state 153
    CHR             shift and go to state 154
    BLN             shift and go to state 155
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 216
    empty                          shift and go to state 156

state 201

    (43) parameters -> STR IDENT COMMA . parameters
    (41) parameters -> . INT IDENT COMMA parameters
    (42) parameters -> . FLT IDENT COMMA parameters
    (43) parameters -> . STR IDENT COMMA parameters
    (44) parameters -> . CHR IDENT COMMA parameters
    (45) parameters -> . BLN IDENT COMMA parameters
    (46) parameters -> . INT IDENT
    (47) parameters -> . FLT IDENT
    (48) parameters -> . STR IDENT
    (49) parameters -> . CHR IDENT
    (50) parameters -> . BLN IDENT
    (51) parameters -> . empty
    (96) empty -> .

    INT             shift and go to state 151
    FLT             shift and go to state 152
    STR             shift and go to state 153
    CHR             shift and go to state 154
    BLN             shift and go to state 155
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 217
    empty                          shift and go to state 156

state 202

    (44) parameters -> CHR IDENT COMMA . parameters
    (41) parameters -> . INT IDENT COMMA parameters
    (42) parameters -> . FLT IDENT COMMA parameters
    (43) parameters -> . STR IDENT COMMA parameters
    (44) parameters -> . CHR IDENT COMMA parameters
    (45) parameters -> . BLN IDENT COMMA parameters
    (46) parameters -> . INT IDENT
    (47) parameters -> . FLT IDENT
    (48) parameters -> . STR IDENT
    (49) parameters -> . CHR IDENT
    (50) parameters -> . BLN IDENT
    (51) parameters -> . empty
    (96) empty -> .

    INT             shift and go to state 151
    FLT             shift and go to state 152
    STR             shift and go to state 153
    CHR             shift and go to state 154
    BLN             shift and go to state 155
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 218
    empty                          shift and go to state 156

state 203

    (45) parameters -> BLN IDENT COMMA . parameters
    (41) parameters -> . INT IDENT COMMA parameters
    (42) parameters -> . FLT IDENT COMMA parameters
    (43) parameters -> . STR IDENT COMMA parameters
    (44) parameters -> . CHR IDENT COMMA parameters
    (45) parameters -> . BLN IDENT COMMA parameters
    (46) parameters -> . INT IDENT
    (47) parameters -> . FLT IDENT
    (48) parameters -> . STR IDENT
    (49) parameters -> . CHR IDENT
    (50) parameters -> . BLN IDENT
    (51) parameters -> . empty
    (96) empty -> .

    INT             shift and go to state 151
    FLT             shift and go to state 152
    STR             shift and go to state 153
    CHR             shift and go to state 154
    BLN             shift and go to state 155
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 219
    empty                          shift and go to state 156

state 204

    (36) function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE . statements RBRACE
    (19) statements -> . statement
    (20) statements -> . statements statement
    (21) statements -> . statements NEWLINE
    (22) statements -> . empty
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (96) empty -> .
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for BLN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for FUNCTION_NAME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION_INT resolved as shift
  ! shift/reduce conflict for FUNCTION_FLT resolved as shift
  ! shift/reduce conflict for FUNCTION_STR resolved as shift
  ! shift/reduce conflict for FUNCTION_CHR resolved as shift
  ! shift/reduce conflict for FUNCTION_BLN resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SWAP resolved as shift
  ! shift/reduce conflict for REVIVE resolved as shift
  ! shift/reduce conflict for STOP resolved as shift
  ! shift/reduce conflict for SKIP resolved as shift
  ! shift/reduce conflict for MEASURE resolved as shift
    RBRACE          reduce using rule 96 (empty -> .)
    NEWLINE         reduce using rule 96 (empty -> .)
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

  ! INT             [ reduce using rule 96 (empty -> .) ]
  ! FLT             [ reduce using rule 96 (empty -> .) ]
  ! STR             [ reduce using rule 96 (empty -> .) ]
  ! CHR             [ reduce using rule 96 (empty -> .) ]
  ! BLN             [ reduce using rule 96 (empty -> .) ]
  ! IDENT           [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_NAME   [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_INT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_FLT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_STR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_CHR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_BLN    [ reduce using rule 96 (empty -> .) ]
  ! REPEAT          [ reduce using rule 96 (empty -> .) ]
  ! CHECK           [ reduce using rule 96 (empty -> .) ]
  ! DISPLAY         [ reduce using rule 96 (empty -> .) ]
  ! INPUT           [ reduce using rule 96 (empty -> .) ]
  ! SWAP            [ reduce using rule 96 (empty -> .) ]
  ! REVIVE          [ reduce using rule 96 (empty -> .) ]
  ! STOP            [ reduce using rule 96 (empty -> .) ]
  ! SKIP            [ reduce using rule 96 (empty -> .) ]
  ! MEASURE         [ reduce using rule 96 (empty -> .) ]

    statements                     shift and go to state 220
    statement                      shift and go to state 15
    empty                          shift and go to state 16
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 205

    (37) function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE . statements RBRACE
    (19) statements -> . statement
    (20) statements -> . statements statement
    (21) statements -> . statements NEWLINE
    (22) statements -> . empty
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (96) empty -> .
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for BLN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for FUNCTION_NAME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION_INT resolved as shift
  ! shift/reduce conflict for FUNCTION_FLT resolved as shift
  ! shift/reduce conflict for FUNCTION_STR resolved as shift
  ! shift/reduce conflict for FUNCTION_CHR resolved as shift
  ! shift/reduce conflict for FUNCTION_BLN resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SWAP resolved as shift
  ! shift/reduce conflict for REVIVE resolved as shift
  ! shift/reduce conflict for STOP resolved as shift
  ! shift/reduce conflict for SKIP resolved as shift
  ! shift/reduce conflict for MEASURE resolved as shift
    RBRACE          reduce using rule 96 (empty -> .)
    NEWLINE         reduce using rule 96 (empty -> .)
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

  ! INT             [ reduce using rule 96 (empty -> .) ]
  ! FLT             [ reduce using rule 96 (empty -> .) ]
  ! STR             [ reduce using rule 96 (empty -> .) ]
  ! CHR             [ reduce using rule 96 (empty -> .) ]
  ! BLN             [ reduce using rule 96 (empty -> .) ]
  ! IDENT           [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_NAME   [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_INT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_FLT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_STR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_CHR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_BLN    [ reduce using rule 96 (empty -> .) ]
  ! REPEAT          [ reduce using rule 96 (empty -> .) ]
  ! CHECK           [ reduce using rule 96 (empty -> .) ]
  ! DISPLAY         [ reduce using rule 96 (empty -> .) ]
  ! INPUT           [ reduce using rule 96 (empty -> .) ]
  ! SWAP            [ reduce using rule 96 (empty -> .) ]
  ! REVIVE          [ reduce using rule 96 (empty -> .) ]
  ! STOP            [ reduce using rule 96 (empty -> .) ]
  ! SKIP            [ reduce using rule 96 (empty -> .) ]
  ! MEASURE         [ reduce using rule 96 (empty -> .) ]

    statements                     shift and go to state 221
    statement                      shift and go to state 15
    empty                          shift and go to state 16
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 206

    (38) function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE . statements RBRACE
    (19) statements -> . statement
    (20) statements -> . statements statement
    (21) statements -> . statements NEWLINE
    (22) statements -> . empty
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (96) empty -> .
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for BLN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for FUNCTION_NAME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION_INT resolved as shift
  ! shift/reduce conflict for FUNCTION_FLT resolved as shift
  ! shift/reduce conflict for FUNCTION_STR resolved as shift
  ! shift/reduce conflict for FUNCTION_CHR resolved as shift
  ! shift/reduce conflict for FUNCTION_BLN resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SWAP resolved as shift
  ! shift/reduce conflict for REVIVE resolved as shift
  ! shift/reduce conflict for STOP resolved as shift
  ! shift/reduce conflict for SKIP resolved as shift
  ! shift/reduce conflict for MEASURE resolved as shift
    RBRACE          reduce using rule 96 (empty -> .)
    NEWLINE         reduce using rule 96 (empty -> .)
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

  ! INT             [ reduce using rule 96 (empty -> .) ]
  ! FLT             [ reduce using rule 96 (empty -> .) ]
  ! STR             [ reduce using rule 96 (empty -> .) ]
  ! CHR             [ reduce using rule 96 (empty -> .) ]
  ! BLN             [ reduce using rule 96 (empty -> .) ]
  ! IDENT           [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_NAME   [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_INT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_FLT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_STR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_CHR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_BLN    [ reduce using rule 96 (empty -> .) ]
  ! REPEAT          [ reduce using rule 96 (empty -> .) ]
  ! CHECK           [ reduce using rule 96 (empty -> .) ]
  ! DISPLAY         [ reduce using rule 96 (empty -> .) ]
  ! INPUT           [ reduce using rule 96 (empty -> .) ]
  ! SWAP            [ reduce using rule 96 (empty -> .) ]
  ! REVIVE          [ reduce using rule 96 (empty -> .) ]
  ! STOP            [ reduce using rule 96 (empty -> .) ]
  ! SKIP            [ reduce using rule 96 (empty -> .) ]
  ! MEASURE         [ reduce using rule 96 (empty -> .) ]

    statements                     shift and go to state 222
    statement                      shift and go to state 15
    empty                          shift and go to state 16
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 207

    (39) function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE . statements RBRACE
    (19) statements -> . statement
    (20) statements -> . statements statement
    (21) statements -> . statements NEWLINE
    (22) statements -> . empty
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (96) empty -> .
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for BLN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for FUNCTION_NAME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION_INT resolved as shift
  ! shift/reduce conflict for FUNCTION_FLT resolved as shift
  ! shift/reduce conflict for FUNCTION_STR resolved as shift
  ! shift/reduce conflict for FUNCTION_CHR resolved as shift
  ! shift/reduce conflict for FUNCTION_BLN resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SWAP resolved as shift
  ! shift/reduce conflict for REVIVE resolved as shift
  ! shift/reduce conflict for STOP resolved as shift
  ! shift/reduce conflict for SKIP resolved as shift
  ! shift/reduce conflict for MEASURE resolved as shift
    RBRACE          reduce using rule 96 (empty -> .)
    NEWLINE         reduce using rule 96 (empty -> .)
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

  ! INT             [ reduce using rule 96 (empty -> .) ]
  ! FLT             [ reduce using rule 96 (empty -> .) ]
  ! STR             [ reduce using rule 96 (empty -> .) ]
  ! CHR             [ reduce using rule 96 (empty -> .) ]
  ! BLN             [ reduce using rule 96 (empty -> .) ]
  ! IDENT           [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_NAME   [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_INT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_FLT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_STR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_CHR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_BLN    [ reduce using rule 96 (empty -> .) ]
  ! REPEAT          [ reduce using rule 96 (empty -> .) ]
  ! CHECK           [ reduce using rule 96 (empty -> .) ]
  ! DISPLAY         [ reduce using rule 96 (empty -> .) ]
  ! INPUT           [ reduce using rule 96 (empty -> .) ]
  ! SWAP            [ reduce using rule 96 (empty -> .) ]
  ! REVIVE          [ reduce using rule 96 (empty -> .) ]
  ! STOP            [ reduce using rule 96 (empty -> .) ]
  ! SKIP            [ reduce using rule 96 (empty -> .) ]
  ! MEASURE         [ reduce using rule 96 (empty -> .) ]

    statements                     shift and go to state 223
    statement                      shift and go to state 15
    empty                          shift and go to state 16
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 208

    (40) function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE . statements RBRACE
    (19) statements -> . statement
    (20) statements -> . statements statement
    (21) statements -> . statements NEWLINE
    (22) statements -> . empty
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (96) empty -> .
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for BLN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for FUNCTION_NAME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION_INT resolved as shift
  ! shift/reduce conflict for FUNCTION_FLT resolved as shift
  ! shift/reduce conflict for FUNCTION_STR resolved as shift
  ! shift/reduce conflict for FUNCTION_CHR resolved as shift
  ! shift/reduce conflict for FUNCTION_BLN resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SWAP resolved as shift
  ! shift/reduce conflict for REVIVE resolved as shift
  ! shift/reduce conflict for STOP resolved as shift
  ! shift/reduce conflict for SKIP resolved as shift
  ! shift/reduce conflict for MEASURE resolved as shift
    RBRACE          reduce using rule 96 (empty -> .)
    NEWLINE         reduce using rule 96 (empty -> .)
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

  ! INT             [ reduce using rule 96 (empty -> .) ]
  ! FLT             [ reduce using rule 96 (empty -> .) ]
  ! STR             [ reduce using rule 96 (empty -> .) ]
  ! CHR             [ reduce using rule 96 (empty -> .) ]
  ! BLN             [ reduce using rule 96 (empty -> .) ]
  ! IDENT           [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_NAME   [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_INT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_FLT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_STR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_CHR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_BLN    [ reduce using rule 96 (empty -> .) ]
  ! REPEAT          [ reduce using rule 96 (empty -> .) ]
  ! CHECK           [ reduce using rule 96 (empty -> .) ]
  ! DISPLAY         [ reduce using rule 96 (empty -> .) ]
  ! INPUT           [ reduce using rule 96 (empty -> .) ]
  ! SWAP            [ reduce using rule 96 (empty -> .) ]
  ! REVIVE          [ reduce using rule 96 (empty -> .) ]
  ! STOP            [ reduce using rule 96 (empty -> .) ]
  ! SKIP            [ reduce using rule 96 (empty -> .) ]
  ! MEASURE         [ reduce using rule 96 (empty -> .) ]

    statements                     shift and go to state 224
    statement                      shift and go to state 15
    empty                          shift and go to state 16
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 209

    (59) loop -> REPEAT LPAREN expression RPAREN LBRACE statements . RBRACE UNTIL LPAREN expression RPAREN
    (20) statements -> statements . statement
    (21) statements -> statements . NEWLINE
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

    RBRACE          shift and go to state 225
    NEWLINE         shift and go to state 66
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

    statement                      shift and go to state 65
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 210

    (60) conditional -> CHECK LPAREN expression RPAREN LBRACE statements . RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (20) statements -> statements . statement
    (21) statements -> statements . NEWLINE
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

    RBRACE          shift and go to state 226
    NEWLINE         shift and go to state 66
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

    statement                      shift and go to state 65
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 211

    (63) switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list . RBRACE
    (65) case_list -> case_list . case
    (66) case -> . SHIFT expression COLON statements

    RBRACE          shift and go to state 227
    SHIFT           shift and go to state 213

    case                           shift and go to state 228

state 212

    (64) case_list -> case .

    RBRACE          reduce using rule 64 (case_list -> case .)
    SHIFT           reduce using rule 64 (case_list -> case .)


state 213

    (66) case -> SHIFT . expression COLON statements
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 229
    function_call                  shift and go to state 93

state 214

    (35) function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements . RBRACE
    (20) statements -> statements . statement
    (21) statements -> statements . NEWLINE
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

    RBRACE          shift and go to state 230
    NEWLINE         shift and go to state 66
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

    statement                      shift and go to state 65
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 215

    (41) parameters -> INT IDENT COMMA parameters .

    RPAREN          reduce using rule 41 (parameters -> INT IDENT COMMA parameters .)


state 216

    (42) parameters -> FLT IDENT COMMA parameters .

    RPAREN          reduce using rule 42 (parameters -> FLT IDENT COMMA parameters .)


state 217

    (43) parameters -> STR IDENT COMMA parameters .

    RPAREN          reduce using rule 43 (parameters -> STR IDENT COMMA parameters .)


state 218

    (44) parameters -> CHR IDENT COMMA parameters .

    RPAREN          reduce using rule 44 (parameters -> CHR IDENT COMMA parameters .)


state 219

    (45) parameters -> BLN IDENT COMMA parameters .

    RPAREN          reduce using rule 45 (parameters -> BLN IDENT COMMA parameters .)


state 220

    (36) function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements . RBRACE
    (20) statements -> statements . statement
    (21) statements -> statements . NEWLINE
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

    RBRACE          shift and go to state 231
    NEWLINE         shift and go to state 66
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

    statement                      shift and go to state 65
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 221

    (37) function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements . RBRACE
    (20) statements -> statements . statement
    (21) statements -> statements . NEWLINE
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

    RBRACE          shift and go to state 232
    NEWLINE         shift and go to state 66
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

    statement                      shift and go to state 65
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 222

    (38) function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements . RBRACE
    (20) statements -> statements . statement
    (21) statements -> statements . NEWLINE
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

    RBRACE          shift and go to state 233
    NEWLINE         shift and go to state 66
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

    statement                      shift and go to state 65
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 223

    (39) function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements . RBRACE
    (20) statements -> statements . statement
    (21) statements -> statements . NEWLINE
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

    RBRACE          shift and go to state 234
    NEWLINE         shift and go to state 66
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

    statement                      shift and go to state 65
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 224

    (40) function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements . RBRACE
    (20) statements -> statements . statement
    (21) statements -> statements . NEWLINE
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

    RBRACE          shift and go to state 235
    NEWLINE         shift and go to state 66
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

    statement                      shift and go to state 65
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 225

    (59) loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE . UNTIL LPAREN expression RPAREN

    UNTIL           shift and go to state 236


state 226

    (60) conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE . OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN

    OTHERWISE       shift and go to state 237


state 227

    (63) switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .

    GHOST           reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    NEWLINE         reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    INT             reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    FLT             reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    STR             reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    CHR             reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    BLN             reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    IDENT           reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    FUNCTION_NAME   reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    FUNCTION        reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    FUNCTION_INT    reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    FUNCTION_FLT    reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    FUNCTION_STR    reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    FUNCTION_CHR    reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    FUNCTION_BLN    reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    REPEAT          reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    CHECK           reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    DISPLAY         reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    INPUT           reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SWAP            reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    REVIVE          reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    STOP            reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SKIP            reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    MEASURE         reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    RBRACE          reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SHIFT           reduce using rule 63 (switch_statement -> SWAP LPAREN expression RPAREN LBRACE case_list RBRACE .)


state 228

    (65) case_list -> case_list case .

    RBRACE          reduce using rule 65 (case_list -> case_list case .)
    SHIFT           reduce using rule 65 (case_list -> case_list case .)


state 229

    (66) case -> SHIFT expression . COLON statements
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    COLON           shift and go to state 238
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 230

    (35) function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .

    GHOST           reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    NEWLINE         reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FLT             reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STR             reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CHR             reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BLN             reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENT           reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_NAME   reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_INT    reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_FLT    reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_STR    reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_CHR    reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_BLN    reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    REPEAT          reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CHECK           reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DISPLAY         reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    INPUT           reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWAP            reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    REVIVE          reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STOP            reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SKIP            reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MEASURE         reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SHIFT           reduce using rule 35 (function_declaration -> FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 231

    (36) function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .

    GHOST           reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    NEWLINE         reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FLT             reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STR             reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CHR             reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BLN             reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENT           reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_NAME   reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_INT    reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_FLT    reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_STR    reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_CHR    reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_BLN    reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    REPEAT          reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CHECK           reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DISPLAY         reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    INPUT           reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWAP            reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    REVIVE          reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STOP            reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SKIP            reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MEASURE         reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SHIFT           reduce using rule 36 (function_declaration -> FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 232

    (37) function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .

    GHOST           reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    NEWLINE         reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FLT             reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STR             reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CHR             reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BLN             reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENT           reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_NAME   reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_INT    reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_FLT    reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_STR    reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_CHR    reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_BLN    reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    REPEAT          reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CHECK           reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DISPLAY         reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    INPUT           reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWAP            reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    REVIVE          reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STOP            reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SKIP            reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MEASURE         reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SHIFT           reduce using rule 37 (function_declaration -> FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 233

    (38) function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .

    GHOST           reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    NEWLINE         reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FLT             reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STR             reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CHR             reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BLN             reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENT           reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_NAME   reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_INT    reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_FLT    reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_STR    reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_CHR    reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_BLN    reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    REPEAT          reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CHECK           reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DISPLAY         reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    INPUT           reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWAP            reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    REVIVE          reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STOP            reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SKIP            reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MEASURE         reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SHIFT           reduce using rule 38 (function_declaration -> FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 234

    (39) function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .

    GHOST           reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    NEWLINE         reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FLT             reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STR             reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CHR             reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BLN             reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENT           reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_NAME   reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_INT    reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_FLT    reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_STR    reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_CHR    reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_BLN    reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    REPEAT          reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CHECK           reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DISPLAY         reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    INPUT           reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWAP            reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    REVIVE          reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STOP            reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SKIP            reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MEASURE         reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SHIFT           reduce using rule 39 (function_declaration -> FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 235

    (40) function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .

    GHOST           reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    NEWLINE         reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FLT             reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STR             reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CHR             reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    BLN             reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENT           reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_NAME   reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_INT    reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_FLT    reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_STR    reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_CHR    reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION_BLN    reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    REPEAT          reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CHECK           reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DISPLAY         reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    INPUT           reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SWAP            reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    REVIVE          reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STOP            reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SKIP            reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MEASURE         reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SHIFT           reduce using rule 40 (function_declaration -> FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 236

    (59) loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL . LPAREN expression RPAREN

    LPAREN          shift and go to state 239


state 237

    (60) conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE . LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN

    LBRACE          shift and go to state 240


state 238

    (66) case -> SHIFT expression COLON . statements
    (19) statements -> . statement
    (20) statements -> . statements statement
    (21) statements -> . statements NEWLINE
    (22) statements -> . empty
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (96) empty -> .
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for BLN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for FUNCTION_NAME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION_INT resolved as shift
  ! shift/reduce conflict for FUNCTION_FLT resolved as shift
  ! shift/reduce conflict for FUNCTION_STR resolved as shift
  ! shift/reduce conflict for FUNCTION_CHR resolved as shift
  ! shift/reduce conflict for FUNCTION_BLN resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SWAP resolved as shift
  ! shift/reduce conflict for REVIVE resolved as shift
  ! shift/reduce conflict for STOP resolved as shift
  ! shift/reduce conflict for SKIP resolved as shift
  ! shift/reduce conflict for MEASURE resolved as shift
    NEWLINE         reduce using rule 96 (empty -> .)
    RBRACE          reduce using rule 96 (empty -> .)
    SHIFT           reduce using rule 96 (empty -> .)
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

  ! INT             [ reduce using rule 96 (empty -> .) ]
  ! FLT             [ reduce using rule 96 (empty -> .) ]
  ! STR             [ reduce using rule 96 (empty -> .) ]
  ! CHR             [ reduce using rule 96 (empty -> .) ]
  ! BLN             [ reduce using rule 96 (empty -> .) ]
  ! IDENT           [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_NAME   [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_INT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_FLT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_STR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_CHR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_BLN    [ reduce using rule 96 (empty -> .) ]
  ! REPEAT          [ reduce using rule 96 (empty -> .) ]
  ! CHECK           [ reduce using rule 96 (empty -> .) ]
  ! DISPLAY         [ reduce using rule 96 (empty -> .) ]
  ! INPUT           [ reduce using rule 96 (empty -> .) ]
  ! SWAP            [ reduce using rule 96 (empty -> .) ]
  ! REVIVE          [ reduce using rule 96 (empty -> .) ]
  ! STOP            [ reduce using rule 96 (empty -> .) ]
  ! SKIP            [ reduce using rule 96 (empty -> .) ]
  ! MEASURE         [ reduce using rule 96 (empty -> .) ]

    statements                     shift and go to state 241
    statement                      shift and go to state 15
    empty                          shift and go to state 16
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 239

    (59) loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN . expression RPAREN
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 242
    function_call                  shift and go to state 93

state 240

    (60) conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE . statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (19) statements -> . statement
    (20) statements -> . statements statement
    (21) statements -> . statements NEWLINE
    (22) statements -> . empty
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (96) empty -> .
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for CHR resolved as shift
  ! shift/reduce conflict for BLN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for FUNCTION_NAME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION_INT resolved as shift
  ! shift/reduce conflict for FUNCTION_FLT resolved as shift
  ! shift/reduce conflict for FUNCTION_STR resolved as shift
  ! shift/reduce conflict for FUNCTION_CHR resolved as shift
  ! shift/reduce conflict for FUNCTION_BLN resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SWAP resolved as shift
  ! shift/reduce conflict for REVIVE resolved as shift
  ! shift/reduce conflict for STOP resolved as shift
  ! shift/reduce conflict for SKIP resolved as shift
  ! shift/reduce conflict for MEASURE resolved as shift
    RBRACE          reduce using rule 96 (empty -> .)
    NEWLINE         reduce using rule 96 (empty -> .)
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

  ! INT             [ reduce using rule 96 (empty -> .) ]
  ! FLT             [ reduce using rule 96 (empty -> .) ]
  ! STR             [ reduce using rule 96 (empty -> .) ]
  ! CHR             [ reduce using rule 96 (empty -> .) ]
  ! BLN             [ reduce using rule 96 (empty -> .) ]
  ! IDENT           [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_NAME   [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_INT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_FLT    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_STR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_CHR    [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION_BLN    [ reduce using rule 96 (empty -> .) ]
  ! REPEAT          [ reduce using rule 96 (empty -> .) ]
  ! CHECK           [ reduce using rule 96 (empty -> .) ]
  ! DISPLAY         [ reduce using rule 96 (empty -> .) ]
  ! INPUT           [ reduce using rule 96 (empty -> .) ]
  ! SWAP            [ reduce using rule 96 (empty -> .) ]
  ! REVIVE          [ reduce using rule 96 (empty -> .) ]
  ! STOP            [ reduce using rule 96 (empty -> .) ]
  ! SKIP            [ reduce using rule 96 (empty -> .) ]
  ! MEASURE         [ reduce using rule 96 (empty -> .) ]

    statements                     shift and go to state 243
    statement                      shift and go to state 15
    empty                          shift and go to state 16
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 241

    (66) case -> SHIFT expression COLON statements .
    (20) statements -> statements . statement
    (21) statements -> statements . NEWLINE
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

    RBRACE          reduce using rule 66 (case -> SHIFT expression COLON statements .)
    SHIFT           reduce using rule 66 (case -> SHIFT expression COLON statements .)
    NEWLINE         shift and go to state 66
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

    statement                      shift and go to state 65
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 242

    (59) loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression . RPAREN
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RPAREN          shift and go to state 244
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 243

    (60) conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements . RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (20) statements -> statements . statement
    (21) statements -> statements . NEWLINE
    (23) statement -> . variable_declaration
    (24) statement -> . assignment
    (25) statement -> . function_call
    (26) statement -> . function_declaration
    (27) statement -> . loop
    (28) statement -> . conditional
    (29) statement -> . io_statement
    (30) statement -> . switch_statement
    (31) statement -> . return_statement
    (32) statement -> . stop_statement
    (33) statement -> . skip_statement
    (34) statement -> . measure_statement
    (52) variable_declaration -> . INT IDENT EQ expression
    (53) variable_declaration -> . FLT IDENT EQ expression
    (54) variable_declaration -> . STR IDENT EQ expression
    (55) variable_declaration -> . CHR IDENT EQ expression
    (56) variable_declaration -> . BLN IDENT EQ expression
    (57) assignment -> . IDENT EQ expression
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN
    (35) function_declaration -> . FUNCTION FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) function_declaration -> . FUNCTION_INT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (37) function_declaration -> . FUNCTION_FLT FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (38) function_declaration -> . FUNCTION_STR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (39) function_declaration -> . FUNCTION_CHR FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (40) function_declaration -> . FUNCTION_BLN FUNCTION_NAME LPAREN parameters RPAREN LBRACE statements RBRACE
    (59) loop -> . REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN
    (60) conditional -> . CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN
    (61) io_statement -> . DISPLAY LPAREN expression RPAREN
    (62) io_statement -> . INPUT LPAREN IDENT RPAREN
    (63) switch_statement -> . SWAP LPAREN expression RPAREN LBRACE case_list RBRACE
    (67) return_statement -> . REVIVE expression
    (68) stop_statement -> . STOP
    (69) skip_statement -> . SKIP
    (70) measure_statement -> . MEASURE LPAREN expression RPAREN

    RBRACE          shift and go to state 245
    NEWLINE         shift and go to state 66
    INT             shift and go to state 29
    FLT             shift and go to state 31
    STR             shift and go to state 32
    CHR             shift and go to state 33
    BLN             shift and go to state 34
    IDENT           shift and go to state 30
    FUNCTION_NAME   shift and go to state 35
    FUNCTION        shift and go to state 36
    FUNCTION_INT    shift and go to state 37
    FUNCTION_FLT    shift and go to state 38
    FUNCTION_STR    shift and go to state 39
    FUNCTION_CHR    shift and go to state 40
    FUNCTION_BLN    shift and go to state 41
    REPEAT          shift and go to state 42
    CHECK           shift and go to state 43
    DISPLAY         shift and go to state 44
    INPUT           shift and go to state 45
    SWAP            shift and go to state 46
    REVIVE          shift and go to state 47
    STOP            shift and go to state 48
    SKIP            shift and go to state 49
    MEASURE         shift and go to state 50

    statement                      shift and go to state 65
    variable_declaration           shift and go to state 17
    assignment                     shift and go to state 18
    function_call                  shift and go to state 19
    function_declaration           shift and go to state 20
    loop                           shift and go to state 21
    conditional                    shift and go to state 22
    io_statement                   shift and go to state 23
    switch_statement               shift and go to state 24
    return_statement               shift and go to state 25
    stop_statement                 shift and go to state 26
    skip_statement                 shift and go to state 27
    measure_statement              shift and go to state 28

state 244

    (59) loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .

    GHOST           reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    INT             reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    FLT             reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    STR             reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    CHR             reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    BLN             reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    IDENT           reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    FUNCTION_NAME   reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    FUNCTION_INT    reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    FUNCTION_FLT    reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    FUNCTION_STR    reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    FUNCTION_CHR    reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    FUNCTION_BLN    reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    REPEAT          reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    CHECK           reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    DISPLAY         reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    INPUT           reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    SWAP            reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    REVIVE          reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    STOP            reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    SKIP            reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    MEASURE         reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    RBRACE          reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)
    SHIFT           reduce using rule 59 (loop -> REPEAT LPAREN expression RPAREN LBRACE statements RBRACE UNTIL LPAREN expression RPAREN .)


state 245

    (60) conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE . OTHERWISE_CHECK LPAREN expression RPAREN

    OTHERWISE_CHECK shift and go to state 246


state 246

    (60) conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK . LPAREN expression RPAREN

    LPAREN          shift and go to state 247


state 247

    (60) conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN . expression RPAREN
    (71) expression -> . expression PLUS expression
    (72) expression -> . expression MINUS expression
    (73) expression -> . expression MULTIPLY expression
    (74) expression -> . expression DIVISION expression
    (75) expression -> . expression MODULO expression
    (76) expression -> . expression EXPONENT expression
    (77) expression -> . expression EQ_EQ expression
    (78) expression -> . expression NOT_EQ expression
    (79) expression -> . expression LT expression
    (80) expression -> . expression GT expression
    (81) expression -> . expression LT_EQ expression
    (82) expression -> . expression GT_EQ expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (85) expression -> . NOT expression
    (86) expression -> . LPAREN expression RPAREN
    (87) expression -> . IDENT
    (88) expression -> . INT_LIT
    (89) expression -> . FLT_LIT
    (90) expression -> . STR_LIT
    (91) expression -> . BLN_LIT
    (92) expression -> . function_call
    (58) function_call -> . FUNCTION_NAME LPAREN arguments RPAREN

    NOT             shift and go to state 86
    LPAREN          shift and go to state 87
    IDENT           shift and go to state 88
    INT_LIT         shift and go to state 89
    FLT_LIT         shift and go to state 90
    STR_LIT         shift and go to state 91
    BLN_LIT         shift and go to state 92
    FUNCTION_NAME   shift and go to state 35

    expression                     shift and go to state 248
    function_call                  shift and go to state 93

state 248

    (60) conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression . RPAREN
    (71) expression -> expression . PLUS expression
    (72) expression -> expression . MINUS expression
    (73) expression -> expression . MULTIPLY expression
    (74) expression -> expression . DIVISION expression
    (75) expression -> expression . MODULO expression
    (76) expression -> expression . EXPONENT expression
    (77) expression -> expression . EQ_EQ expression
    (78) expression -> expression . NOT_EQ expression
    (79) expression -> expression . LT expression
    (80) expression -> expression . GT expression
    (81) expression -> expression . LT_EQ expression
    (82) expression -> expression . GT_EQ expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RPAREN          shift and go to state 249
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    MULTIPLY        shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125
    EXPONENT        shift and go to state 126
    EQ_EQ           shift and go to state 127
    NOT_EQ          shift and go to state 128
    LT              shift and go to state 129
    GT              shift and go to state 130
    LT_EQ           shift and go to state 131
    GT_EQ           shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134


state 249

    (60) conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .

    GHOST           reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    INT             reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    FLT             reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    STR             reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    CHR             reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    BLN             reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    IDENT           reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    FUNCTION_NAME   reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    FUNCTION_INT    reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    FUNCTION_FLT    reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    FUNCTION_STR    reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    FUNCTION_CHR    reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    FUNCTION_BLN    reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    REPEAT          reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    CHECK           reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    DISPLAY         reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    INPUT           reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    SWAP            reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    REVIVE          reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    STOP            reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    SKIP            reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    MEASURE         reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    RBRACE          reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)
    SHIFT           reduce using rule 60 (conditional -> CHECK LPAREN expression RPAREN LBRACE statements RBRACE OTHERWISE LBRACE statements RBRACE OTHERWISE_CHECK LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for FLT in state 2 resolved as shift
WARNING: shift/reduce conflict for STR in state 2 resolved as shift
WARNING: shift/reduce conflict for CHR in state 2 resolved as shift
WARNING: shift/reduce conflict for BLN in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 3 resolved as shift
WARNING: shift/reduce conflict for FLT in state 3 resolved as shift
WARNING: shift/reduce conflict for STR in state 3 resolved as shift
WARNING: shift/reduce conflict for CHR in state 3 resolved as shift
WARNING: shift/reduce conflict for BLN in state 3 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_NAME in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_INT in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_FLT in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_STR in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_CHR in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_BLN in state 3 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 3 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 3 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 3 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 3 resolved as shift
WARNING: shift/reduce conflict for SWAP in state 3 resolved as shift
WARNING: shift/reduce conflict for REVIVE in state 3 resolved as shift
WARNING: shift/reduce conflict for STOP in state 3 resolved as shift
WARNING: shift/reduce conflict for SKIP in state 3 resolved as shift
WARNING: shift/reduce conflict for MEASURE in state 3 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 135 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 135 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 135 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 135 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 135 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 135 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 135 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 135 resolved as shift
WARNING: shift/reduce conflict for LT in state 135 resolved as shift
WARNING: shift/reduce conflict for GT in state 135 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 135 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 135 resolved as shift
WARNING: shift/reduce conflict for AND in state 135 resolved as shift
WARNING: shift/reduce conflict for OR in state 135 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 167 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 167 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 167 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 167 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 167 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 167 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 167 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 167 resolved as shift
WARNING: shift/reduce conflict for LT in state 167 resolved as shift
WARNING: shift/reduce conflict for GT in state 167 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 167 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 167 resolved as shift
WARNING: shift/reduce conflict for AND in state 167 resolved as shift
WARNING: shift/reduce conflict for OR in state 167 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 168 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 168 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 168 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 168 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 168 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 168 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 168 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 168 resolved as shift
WARNING: shift/reduce conflict for LT in state 168 resolved as shift
WARNING: shift/reduce conflict for GT in state 168 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 168 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 168 resolved as shift
WARNING: shift/reduce conflict for AND in state 168 resolved as shift
WARNING: shift/reduce conflict for OR in state 168 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 169 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 169 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 169 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 169 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 169 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 169 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 169 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 169 resolved as shift
WARNING: shift/reduce conflict for LT in state 169 resolved as shift
WARNING: shift/reduce conflict for GT in state 169 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 169 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 169 resolved as shift
WARNING: shift/reduce conflict for AND in state 169 resolved as shift
WARNING: shift/reduce conflict for OR in state 169 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 170 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 170 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 170 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 170 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 170 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 170 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 170 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 170 resolved as shift
WARNING: shift/reduce conflict for LT in state 170 resolved as shift
WARNING: shift/reduce conflict for GT in state 170 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 170 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 170 resolved as shift
WARNING: shift/reduce conflict for AND in state 170 resolved as shift
WARNING: shift/reduce conflict for OR in state 170 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 171 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 171 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 171 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 171 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 171 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 171 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 171 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 171 resolved as shift
WARNING: shift/reduce conflict for LT in state 171 resolved as shift
WARNING: shift/reduce conflict for GT in state 171 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 171 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 171 resolved as shift
WARNING: shift/reduce conflict for AND in state 171 resolved as shift
WARNING: shift/reduce conflict for OR in state 171 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 172 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 172 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 172 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 172 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 172 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 172 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 172 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 172 resolved as shift
WARNING: shift/reduce conflict for LT in state 172 resolved as shift
WARNING: shift/reduce conflict for GT in state 172 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 172 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 172 resolved as shift
WARNING: shift/reduce conflict for AND in state 172 resolved as shift
WARNING: shift/reduce conflict for OR in state 172 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 173 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 173 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 173 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 173 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 173 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 173 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 173 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 173 resolved as shift
WARNING: shift/reduce conflict for LT in state 173 resolved as shift
WARNING: shift/reduce conflict for GT in state 173 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 173 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 173 resolved as shift
WARNING: shift/reduce conflict for AND in state 173 resolved as shift
WARNING: shift/reduce conflict for OR in state 173 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 174 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 174 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 174 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 174 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 174 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 174 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 174 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 174 resolved as shift
WARNING: shift/reduce conflict for LT in state 174 resolved as shift
WARNING: shift/reduce conflict for GT in state 174 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 174 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 174 resolved as shift
WARNING: shift/reduce conflict for AND in state 174 resolved as shift
WARNING: shift/reduce conflict for OR in state 174 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 175 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 175 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 175 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 175 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 175 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 175 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 175 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 175 resolved as shift
WARNING: shift/reduce conflict for LT in state 175 resolved as shift
WARNING: shift/reduce conflict for GT in state 175 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 175 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 175 resolved as shift
WARNING: shift/reduce conflict for AND in state 175 resolved as shift
WARNING: shift/reduce conflict for OR in state 175 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 176 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 176 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 176 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 176 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 176 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 176 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 176 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 176 resolved as shift
WARNING: shift/reduce conflict for LT in state 176 resolved as shift
WARNING: shift/reduce conflict for GT in state 176 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 176 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 176 resolved as shift
WARNING: shift/reduce conflict for AND in state 176 resolved as shift
WARNING: shift/reduce conflict for OR in state 176 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 177 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 177 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 177 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 177 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 177 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 177 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 177 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 177 resolved as shift
WARNING: shift/reduce conflict for LT in state 177 resolved as shift
WARNING: shift/reduce conflict for GT in state 177 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 177 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 177 resolved as shift
WARNING: shift/reduce conflict for AND in state 177 resolved as shift
WARNING: shift/reduce conflict for OR in state 177 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 178 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 178 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 178 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 178 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 178 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 178 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 178 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 178 resolved as shift
WARNING: shift/reduce conflict for LT in state 178 resolved as shift
WARNING: shift/reduce conflict for GT in state 178 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 178 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 178 resolved as shift
WARNING: shift/reduce conflict for AND in state 178 resolved as shift
WARNING: shift/reduce conflict for OR in state 178 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 179 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 179 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 179 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 179 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 179 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 179 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 179 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 179 resolved as shift
WARNING: shift/reduce conflict for LT in state 179 resolved as shift
WARNING: shift/reduce conflict for GT in state 179 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 179 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 179 resolved as shift
WARNING: shift/reduce conflict for AND in state 179 resolved as shift
WARNING: shift/reduce conflict for OR in state 179 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 180 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 180 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 180 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 180 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 180 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 180 resolved as shift
WARNING: shift/reduce conflict for EQ_EQ in state 180 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 180 resolved as shift
WARNING: shift/reduce conflict for LT in state 180 resolved as shift
WARNING: shift/reduce conflict for GT in state 180 resolved as shift
WARNING: shift/reduce conflict for LT_EQ in state 180 resolved as shift
WARNING: shift/reduce conflict for GT_EQ in state 180 resolved as shift
WARNING: shift/reduce conflict for AND in state 180 resolved as shift
WARNING: shift/reduce conflict for OR in state 180 resolved as shift
WARNING: shift/reduce conflict for INT in state 195 resolved as shift
WARNING: shift/reduce conflict for FLT in state 195 resolved as shift
WARNING: shift/reduce conflict for STR in state 195 resolved as shift
WARNING: shift/reduce conflict for CHR in state 195 resolved as shift
WARNING: shift/reduce conflict for BLN in state 195 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 195 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_NAME in state 195 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 195 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_INT in state 195 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_FLT in state 195 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_STR in state 195 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_CHR in state 195 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_BLN in state 195 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 195 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 195 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 195 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 195 resolved as shift
WARNING: shift/reduce conflict for SWAP in state 195 resolved as shift
WARNING: shift/reduce conflict for REVIVE in state 195 resolved as shift
WARNING: shift/reduce conflict for STOP in state 195 resolved as shift
WARNING: shift/reduce conflict for SKIP in state 195 resolved as shift
WARNING: shift/reduce conflict for MEASURE in state 195 resolved as shift
WARNING: shift/reduce conflict for INT in state 196 resolved as shift
WARNING: shift/reduce conflict for FLT in state 196 resolved as shift
WARNING: shift/reduce conflict for STR in state 196 resolved as shift
WARNING: shift/reduce conflict for CHR in state 196 resolved as shift
WARNING: shift/reduce conflict for BLN in state 196 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 196 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_NAME in state 196 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 196 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_INT in state 196 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_FLT in state 196 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_STR in state 196 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_CHR in state 196 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_BLN in state 196 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 196 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 196 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 196 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 196 resolved as shift
WARNING: shift/reduce conflict for SWAP in state 196 resolved as shift
WARNING: shift/reduce conflict for REVIVE in state 196 resolved as shift
WARNING: shift/reduce conflict for STOP in state 196 resolved as shift
WARNING: shift/reduce conflict for SKIP in state 196 resolved as shift
WARNING: shift/reduce conflict for MEASURE in state 196 resolved as shift
WARNING: shift/reduce conflict for INT in state 198 resolved as shift
WARNING: shift/reduce conflict for FLT in state 198 resolved as shift
WARNING: shift/reduce conflict for STR in state 198 resolved as shift
WARNING: shift/reduce conflict for CHR in state 198 resolved as shift
WARNING: shift/reduce conflict for BLN in state 198 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 198 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_NAME in state 198 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 198 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_INT in state 198 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_FLT in state 198 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_STR in state 198 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_CHR in state 198 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_BLN in state 198 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 198 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 198 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 198 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 198 resolved as shift
WARNING: shift/reduce conflict for SWAP in state 198 resolved as shift
WARNING: shift/reduce conflict for REVIVE in state 198 resolved as shift
WARNING: shift/reduce conflict for STOP in state 198 resolved as shift
WARNING: shift/reduce conflict for SKIP in state 198 resolved as shift
WARNING: shift/reduce conflict for MEASURE in state 198 resolved as shift
WARNING: shift/reduce conflict for INT in state 204 resolved as shift
WARNING: shift/reduce conflict for FLT in state 204 resolved as shift
WARNING: shift/reduce conflict for STR in state 204 resolved as shift
WARNING: shift/reduce conflict for CHR in state 204 resolved as shift
WARNING: shift/reduce conflict for BLN in state 204 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 204 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_NAME in state 204 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 204 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_INT in state 204 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_FLT in state 204 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_STR in state 204 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_CHR in state 204 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_BLN in state 204 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 204 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 204 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 204 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 204 resolved as shift
WARNING: shift/reduce conflict for SWAP in state 204 resolved as shift
WARNING: shift/reduce conflict for REVIVE in state 204 resolved as shift
WARNING: shift/reduce conflict for STOP in state 204 resolved as shift
WARNING: shift/reduce conflict for SKIP in state 204 resolved as shift
WARNING: shift/reduce conflict for MEASURE in state 204 resolved as shift
WARNING: shift/reduce conflict for INT in state 205 resolved as shift
WARNING: shift/reduce conflict for FLT in state 205 resolved as shift
WARNING: shift/reduce conflict for STR in state 205 resolved as shift
WARNING: shift/reduce conflict for CHR in state 205 resolved as shift
WARNING: shift/reduce conflict for BLN in state 205 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 205 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_NAME in state 205 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 205 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_INT in state 205 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_FLT in state 205 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_STR in state 205 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_CHR in state 205 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_BLN in state 205 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 205 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 205 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 205 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 205 resolved as shift
WARNING: shift/reduce conflict for SWAP in state 205 resolved as shift
WARNING: shift/reduce conflict for REVIVE in state 205 resolved as shift
WARNING: shift/reduce conflict for STOP in state 205 resolved as shift
WARNING: shift/reduce conflict for SKIP in state 205 resolved as shift
WARNING: shift/reduce conflict for MEASURE in state 205 resolved as shift
WARNING: shift/reduce conflict for INT in state 206 resolved as shift
WARNING: shift/reduce conflict for FLT in state 206 resolved as shift
WARNING: shift/reduce conflict for STR in state 206 resolved as shift
WARNING: shift/reduce conflict for CHR in state 206 resolved as shift
WARNING: shift/reduce conflict for BLN in state 206 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 206 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_NAME in state 206 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 206 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_INT in state 206 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_FLT in state 206 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_STR in state 206 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_CHR in state 206 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_BLN in state 206 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 206 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 206 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 206 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 206 resolved as shift
WARNING: shift/reduce conflict for SWAP in state 206 resolved as shift
WARNING: shift/reduce conflict for REVIVE in state 206 resolved as shift
WARNING: shift/reduce conflict for STOP in state 206 resolved as shift
WARNING: shift/reduce conflict for SKIP in state 206 resolved as shift
WARNING: shift/reduce conflict for MEASURE in state 206 resolved as shift
WARNING: shift/reduce conflict for INT in state 207 resolved as shift
WARNING: shift/reduce conflict for FLT in state 207 resolved as shift
WARNING: shift/reduce conflict for STR in state 207 resolved as shift
WARNING: shift/reduce conflict for CHR in state 207 resolved as shift
WARNING: shift/reduce conflict for BLN in state 207 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 207 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_NAME in state 207 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 207 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_INT in state 207 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_FLT in state 207 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_STR in state 207 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_CHR in state 207 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_BLN in state 207 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 207 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 207 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 207 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 207 resolved as shift
WARNING: shift/reduce conflict for SWAP in state 207 resolved as shift
WARNING: shift/reduce conflict for REVIVE in state 207 resolved as shift
WARNING: shift/reduce conflict for STOP in state 207 resolved as shift
WARNING: shift/reduce conflict for SKIP in state 207 resolved as shift
WARNING: shift/reduce conflict for MEASURE in state 207 resolved as shift
WARNING: shift/reduce conflict for INT in state 208 resolved as shift
WARNING: shift/reduce conflict for FLT in state 208 resolved as shift
WARNING: shift/reduce conflict for STR in state 208 resolved as shift
WARNING: shift/reduce conflict for CHR in state 208 resolved as shift
WARNING: shift/reduce conflict for BLN in state 208 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 208 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_NAME in state 208 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 208 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_INT in state 208 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_FLT in state 208 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_STR in state 208 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_CHR in state 208 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_BLN in state 208 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 208 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 208 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 208 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 208 resolved as shift
WARNING: shift/reduce conflict for SWAP in state 208 resolved as shift
WARNING: shift/reduce conflict for REVIVE in state 208 resolved as shift
WARNING: shift/reduce conflict for STOP in state 208 resolved as shift
WARNING: shift/reduce conflict for SKIP in state 208 resolved as shift
WARNING: shift/reduce conflict for MEASURE in state 208 resolved as shift
WARNING: shift/reduce conflict for INT in state 238 resolved as shift
WARNING: shift/reduce conflict for FLT in state 238 resolved as shift
WARNING: shift/reduce conflict for STR in state 238 resolved as shift
WARNING: shift/reduce conflict for CHR in state 238 resolved as shift
WARNING: shift/reduce conflict for BLN in state 238 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 238 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_NAME in state 238 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 238 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_INT in state 238 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_FLT in state 238 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_STR in state 238 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_CHR in state 238 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_BLN in state 238 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 238 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 238 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 238 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 238 resolved as shift
WARNING: shift/reduce conflict for SWAP in state 238 resolved as shift
WARNING: shift/reduce conflict for REVIVE in state 238 resolved as shift
WARNING: shift/reduce conflict for STOP in state 238 resolved as shift
WARNING: shift/reduce conflict for SKIP in state 238 resolved as shift
WARNING: shift/reduce conflict for MEASURE in state 238 resolved as shift
WARNING: shift/reduce conflict for INT in state 240 resolved as shift
WARNING: shift/reduce conflict for FLT in state 240 resolved as shift
WARNING: shift/reduce conflict for STR in state 240 resolved as shift
WARNING: shift/reduce conflict for CHR in state 240 resolved as shift
WARNING: shift/reduce conflict for BLN in state 240 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 240 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_NAME in state 240 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 240 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_INT in state 240 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_FLT in state 240 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_STR in state 240 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_CHR in state 240 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_BLN in state 240 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 240 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 240 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 240 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 240 resolved as shift
WARNING: shift/reduce conflict for SWAP in state 240 resolved as shift
WARNING: shift/reduce conflict for REVIVE in state 240 resolved as shift
WARNING: shift/reduce conflict for STOP in state 240 resolved as shift
WARNING: shift/reduce conflict for SKIP in state 240 resolved as shift
WARNING: shift/reduce conflict for MEASURE in state 240 resolved as shift
